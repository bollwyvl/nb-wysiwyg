{"version":3,"file":"scribe.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA,ADyCA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA,ADoCA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA,ADkCA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA,ADgCA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA,AD6BA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA,ADyCA;ACxxGA,ADyGA;ACxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA,AD+BA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA,AD0CA;ACzlDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA,ADwCA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1CA,AD2CA;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA,ADuDA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA,AD0BA;ACztEA,ADuEA;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA,ADsCA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA,ADwBA;ACvpRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA,ADqBA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxjFA,ADkFA;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA,AD6BA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACntvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzFA,AD0FA;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA,AD0BA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzpOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA,AD0BA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA,AD4CA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA,ADwCA;ACvzusources":["../bower_components/lodash-amd/modern/internals/isNative.js","../bower_components/lodash-amd/modern/internals/objectTypes.js","../bower_components/lodash-amd/modern/objects/isObject.js","../bower_components/lodash-amd/modern/internals/shimKeys.js","../bower_components/lodash-amd/modern/objects/keys.js","../bower_components/lodash-amd/modern/objects/defaults.js","../src/plugins/core/commands/indent.js","../src/plugins/core/commands/insert-list.js","../src/plugins/core/commands/outdent.js","../src/plugins/core/commands/redo.js","../src/plugins/core/commands/subscript.js","../src/plugins/core/commands/superscript.js","../src/plugins/core/commands/undo.js","../src/plugins/core/commands.js","../bower_components/lodash-amd/modern/internals/baseIndexOf.js","../bower_components/lodash-amd/modern/utilities/noop.js","../bower_components/lodash-amd/modern/internals/baseCreate.js","../bower_components/lodash-amd/modern/internals/setBindData.js","../bower_components/lodash-amd/modern/internals/slice.js","../bower_components/lodash-amd/modern/internals/baseBind.js","../bower_components/lodash-amd/modern/internals/baseCreateWrapper.js","../bower_components/lodash-amd/modern/objects/isFunction.js","../bower_components/lodash-amd/modern/internals/createWrapper.js","../bower_components/lodash-amd/modern/functions/bind.js","../bower_components/lodash-amd/modern/utilities/identity.js","../bower_components/lodash-amd/modern/support.js","../bower_components/lodash-amd/modern/internals/baseCreateCallback.js","../bower_components/lodash-amd/modern/objects/forOwn.js","../bower_components/lodash-amd/modern/objects/isArray.js","../bower_components/lodash-amd/modern/objects/isString.js","../bower_components/lodash-amd/modern/collections/contains.js","../bower_components/lodash-amd/modern/objects/isArguments.js","../bower_components/lodash-amd/modern/internals/baseFlatten.js","../bower_components/lodash-amd/modern/objects/forIn.js","../bower_components/lodash-amd/modern/internals/arrayPool.js","../bower_components/lodash-amd/modern/internals/getArray.js","../bower_components/lodash-amd/modern/internals/maxPoolSize.js","../bower_components/lodash-amd/modern/internals/releaseArray.js","../bower_components/lodash-amd/modern/internals/baseIsEqual.js","../bower_components/lodash-amd/modern/utilities/property.js","../bower_components/lodash-amd/modern/functions/createCallback.js","../bower_components/lodash-amd/modern/collections/map.js","../bower_components/lodash-amd/modern/arrays/flatten.js","../bower_components/lodash-amd/modern/objects/values.js","../bower_components/lodash-amd/modern/collections/toArray.js","../src/element.js","../src/node.js","../src/dom-observer.js","../src/plugins/core/events.js","../src/plugins/core/formatters/html/replace-nbsp-chars.js","../bower_components/lodash-amd/modern/arrays/last.js","../src/plugins/core/formatters/html/enforce-p-elements.js","../src/plugins/core/formatters/html/ensure-selectable-containers.js","../bower_components/lodash-amd/modern/internals/htmlEscapes.js","../bower_components/lodash-amd/modern/internals/escapeHtmlChar.js","../bower_components/lodash-amd/modern/internals/reUnescapedHtml.js","../bower_components/lodash-amd/modern/utilities/escape.js","../src/plugins/core/formatters/plain-text/escape-html-characters.js","../src/plugins/core/inline-elements-mode.js","../src/plugins/core/patches/commands/bold.js","../src/plugins/core/patches/commands/indent.js","../src/plugins/core/patches/commands/insert-html.js","../src/plugins/core/patches/commands/insert-list.js","../src/plugins/core/patches/commands/outdent.js","../src/plugins/core/patches/commands/create-link.js","../src/plugins/core/patches/events.js","../src/plugins/core/patches.js","../src/plugins/core/set-root-p-element.js","../src/api/command-patch.js","../src/api/command.js","../src/api/node.js","../src/api/selection.js","../src/api/simple-command.js","../src/api.js","../bower_components/lodash-amd/modern/objects/assign.js","../src/transaction-manager.js","../src/undo-manager.js","../bower_components/lodash-amd/modern/arrays/pull.js","../src/event-emitter.js","../bower_components/immutable/dist/immutable.js","../src/scribe.js"],"sourcesContent":["/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/isNative',[], function() {\n\n  /** Used for native method references */\n  var objectProto = Object.prototype;\n\n  /** Used to resolve the internal [[Class]] of values */\n  var toString = objectProto.toString;\n\n  /** Used to detect if a method is native */\n  var reNative = RegExp('^' +\n    String(toString)\n      .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n      .replace(/toString| for [^\\]]+/g, '.*?') + '$'\n  );\n\n  /**\n   * Checks if `value` is a native function.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n   */\n  function isNative(value) {\n    return typeof value == 'function' && reNative.test(value);\n  }\n\n  return isNative;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/objectTypes',[], function() {\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  return objectTypes;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/isObject',['../internals/objectTypes'], function(objectTypes) {\n\n  /**\n   * Checks if `value` is the language type of Object.\n   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(1);\n   * // => false\n   */\n  function isObject(value) {\n    // check if the value is the ECMAScript language type of Object\n    // http://es5.github.io/#x8\n    // and avoid a V8 bug\n    // http://code.google.com/p/v8/issues/detail?id=2291\n    return !!(value && objectTypes[typeof value]);\n  }\n\n  return isObject;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/shimKeys',['./objectTypes'], function(objectTypes) {\n\n  /** Used for native method references */\n  var objectProto = Object.prototype;\n\n  /** Native method shortcuts */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /**\n   * A fallback implementation of `Object.keys` which produces an array of the\n   * given object's own enumerable property names.\n   *\n   * @private\n   * @type Function\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names.\n   */\n  var shimKeys = function(object) {\n    var index, iterable = object, result = [];\n    if (!iterable) return result;\n    if (!(objectTypes[typeof object])) return result;\n      for (index in iterable) {\n        if (hasOwnProperty.call(iterable, index)) {\n          result.push(index);\n        }\n      }\n    return result\n  };\n\n  return shimKeys;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/keys',['../internals/isNative', './isObject', '../internals/shimKeys'], function(isNative, isObject, shimKeys) {\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys;\n\n  /**\n   * Creates an array composed of the own enumerable property names of an object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names.\n   * @example\n   *\n   * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n   */\n  var keys = !nativeKeys ? shimKeys : function(object) {\n    if (!isObject(object)) {\n      return [];\n    }\n    return nativeKeys(object);\n  };\n\n  return keys;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/defaults',['./keys', '../internals/objectTypes'], function(keys, objectTypes) {\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object for all destination properties that resolve to `undefined`. Once a\n   * property is set, additional defaults of the same property will be ignored.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {...Object} [source] The source objects.\n   * @param- {Object} [guard] Allows working with `_.reduce` without using its\n   *  `key` and `object` arguments as sources.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var object = { 'name': 'barney' };\n   * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });\n   * // => { 'name': 'barney', 'employer': 'slate' }\n   */\n  var defaults = function(object, source, guard) {\n    var index, iterable = object, result = iterable;\n    if (!iterable) return result;\n    var args = arguments,\n        argsIndex = 0,\n        argsLength = typeof guard == 'number' ? 2 : args.length;\n    while (++argsIndex < argsLength) {\n      iterable = args[argsIndex];\n      if (iterable && objectTypes[typeof iterable]) {\n      var ownIndex = -1,\n          ownProps = objectTypes[typeof iterable] && keys(iterable),\n          length = ownProps ? ownProps.length : 0;\n\n      while (++ownIndex < length) {\n        index = ownProps[ownIndex];\n        if (typeof result[index] == 'undefined') result[index] = iterable[index];\n      }\n      }\n    }\n    return result\n  };\n\n  return defaults;\n});\n\n","define('plugins/core/commands/indent',[],function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var indentCommand = new scribe.api.Command('indent');\n\n      indentCommand.queryEnabled = function () {\n        /**\n         * FIXME: Chrome nests ULs inside of ULs\n         * Currently we just disable the command when the selection is inside of\n         * a list.\n         * As per: http://jsbin.com/ORikUPa/3/edit?html,js,output\n         */\n        var selection = new scribe.api.Selection();\n        var listElement = selection.getContaining(function (element) {\n          return element.nodeName === 'UL' || element.nodeName === 'OL';\n        });\n\n        return scribe.api.Command.prototype.queryEnabled.call(this) && scribe.allowsBlockElements() && ! listElement;\n      };\n\n      scribe.commands.indent = indentCommand;\n    };\n  };\n\n});\n\n","define('plugins/core/commands/insert-list',[],function () {\n\n  /**\n   * If the paragraphs option is set to true, then when the list is\n   * unapplied, ensure that we enter a P element.\n   */\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var InsertListCommand = function (commandName) {\n        scribe.api.Command.call(this, commandName);\n      };\n\n      InsertListCommand.prototype = Object.create(scribe.api.Command.prototype);\n      InsertListCommand.prototype.constructor = InsertListCommand;\n\n      InsertListCommand.prototype.execute = function (value) {\n        function splitList(listItemElements) {\n          if (listItemElements.length > 0) {\n            var newListNode = document.createElement(listNode.nodeName);\n\n            listItemElements.forEach(function (listItemElement) {\n              newListNode.appendChild(listItemElement);\n            });\n\n            listNode.parentNode.insertBefore(newListNode, listNode.nextElementSibling);\n          }\n        }\n\n        if (this.queryState()) {\n          var selection = new scribe.api.Selection();\n          var range = selection.range;\n\n          var listNode = selection.getContaining(function (node) {\n            return node.nodeName === 'OL' || node.nodeName === 'UL';\n          });\n\n          var listItemElement = selection.getContaining(function (node) {\n            return node.nodeName === 'LI';\n          });\n\n          scribe.transactionManager.run(function () {\n            if (listItemElement) {\n              var nextListItemElements = (new scribe.api.Node(listItemElement)).nextAll();\n\n              /**\n               * If we are not at the start or end of a UL/OL, we have to\n               * split the node and insert the P(s) in the middle.\n               */\n              splitList(nextListItemElements);\n\n              /**\n               * Insert a paragraph in place of the list item.\n               */\n\n              selection.placeMarkers();\n\n              var pNode = document.createElement('p');\n              pNode.innerHTML = listItemElement.innerHTML;\n\n              listNode.parentNode.insertBefore(pNode, listNode.nextElementSibling);\n              listItemElement.parentNode.removeChild(listItemElement);\n            } else {\n              /**\n               * When multiple list items are selected, we replace each list\n               * item with a paragraph.\n               */\n\n              // We can't query for list items in the selection so we loop\n              // through them all and find the intersection ourselves.\n              var selectedListItemElements = Array.prototype.map.call(listNode.querySelectorAll('li'),\n                function (listItemElement) {\n                return range.intersectsNode(listItemElement) && listItemElement;\n              }).filter(function (listItemElement) {\n                // TODO: identity\n                return listItemElement;\n              });\n              var lastSelectedListItemElement = selectedListItemElements.slice(-1)[0];\n              var listItemElementsAfterSelection = (new scribe.api.Node(lastSelectedListItemElement)).nextAll();\n\n              /**\n               * If we are not at the start or end of a UL/OL, we have to\n               * split the node and insert the P(s) in the middle.\n               */\n              splitList(listItemElementsAfterSelection);\n\n              // Store the caret/range positioning inside of the list items so\n              // we can restore it from the newly created P elements soon\n              // afterwards.\n              selection.placeMarkers();\n\n              var documentFragment = document.createDocumentFragment();\n              selectedListItemElements.forEach(function (listItemElement) {\n                var pElement = document.createElement('p');\n                pElement.innerHTML = listItemElement.innerHTML;\n                documentFragment.appendChild(pElement);\n              });\n\n              // Insert the Ps\n              listNode.parentNode.insertBefore(documentFragment, listNode.nextElementSibling);\n\n              // Remove the LIs\n              selectedListItemElements.forEach(function (listItemElement) {\n                listItemElement.parentNode.removeChild(listItemElement);\n              });\n            }\n\n            // If the list is now empty, clean it up.\n            if (listNode.childNodes.length === 0) {\n              listNode.parentNode.removeChild(listNode);\n            }\n\n            selection.selectMarkers();\n          }.bind(this));\n        } else {\n          scribe.api.Command.prototype.execute.call(this, value);\n        }\n      };\n\n      InsertListCommand.prototype.queryEnabled = function () {\n        return scribe.api.Command.prototype.queryEnabled.call(this) && scribe.allowsBlockElements();\n      };\n\n      scribe.commands.insertOrderedList = new InsertListCommand('insertOrderedList');\n      scribe.commands.insertUnorderedList = new InsertListCommand('insertUnorderedList');\n    };\n  };\n\n});\n\n","define('plugins/core/commands/outdent',[],function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var outdentCommand = new scribe.api.Command('outdent');\n\n      outdentCommand.queryEnabled = function () {\n        /**\n         * FIXME: If the paragraphs option is set to true, then when the\n         * list is unapplied, ensure that we enter a P element.\n         * Currently we just disable the command when the selection is inside of\n         * a list.\n         */\n        var selection = new scribe.api.Selection();\n        var listElement = selection.getContaining(function (element) {\n          return element.nodeName === 'UL' || element.nodeName === 'OL';\n        });\n\n        // FIXME: define block element rule here?\n        return scribe.api.Command.prototype.queryEnabled.call(this) && scribe.allowsBlockElements() && ! listElement;\n      };\n\n      scribe.commands.outdent = outdentCommand;\n    };\n  };\n\n});\n\n","define('plugins/core/commands/redo',[],function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var redoCommand = new scribe.api.Command('redo');\n\n      redoCommand.execute = function () {\n        var historyItem = scribe.undoManager.redo();\n\n        if (typeof historyItem !== 'undefined') {\n          scribe.restoreFromHistory(historyItem);\n        }\n      };\n\n      redoCommand.queryEnabled = function () {\n        return scribe.undoManager.position < scribe.undoManager.stack.length - 1;\n      };\n\n      scribe.commands.redo = redoCommand;\n\n      scribe.el.addEventListener('keydown', function (event) {\n        if (event.shiftKey && (event.metaKey || event.ctrlKey) && event.keyCode === 90) {\n          event.preventDefault();\n          redoCommand.execute();\n        }\n      });\n    };\n  };\n\n});\n\n","define('plugins/core/commands/subscript',[],function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var subscriptCommand = new scribe.api.Command('subscript');\n\n      scribe.commands.subscript = subscriptCommand;\n    };\n  };\n\n});\n\n","define('plugins/core/commands/superscript',[],function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var superscriptCommand = new scribe.api.Command('superscript');\n\n      scribe.commands.superscript = superscriptCommand;\n    };\n  };\n\n});\n\n","define('plugins/core/commands/undo',[],function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var undoCommand = new scribe.api.Command('undo');\n\n      undoCommand.execute = function () {\n        var historyItem = scribe.undoManager.undo();\n\n        if (typeof historyItem !== 'undefined') {\n          scribe.restoreFromHistory(historyItem);\n        }\n      };\n\n      undoCommand.queryEnabled = function () {\n        return scribe.undoManager.position > 1;\n      };\n\n      scribe.commands.undo = undoCommand;\n\n      scribe.el.addEventListener('keydown', function (event) {\n        // TODO: use lib to abstract meta/ctrl keys?\n        if (! event.shiftKey && (event.metaKey || event.ctrlKey) && event.keyCode === 90) {\n          event.preventDefault();\n          undoCommand.execute();\n        }\n      });\n    };\n  };\n\n});\n\n","define('plugins/core/commands',[\n  './commands/indent',\n  './commands/insert-list',\n  './commands/outdent',\n  './commands/redo',\n  './commands/subscript',\n  './commands/superscript',\n  './commands/undo'\n], function (\n  indent,\n  insertList,\n  outdent,\n  redo,\n  subscript,\n  superscript,\n  undo\n) {\n\n  'use strict';\n\n  return {\n    indent: indent,\n    insertList: insertList,\n    outdent: outdent,\n    redo: redo,\n    subscript: subscript,\n    superscript: superscript,\n    undo: undo\n  };\n\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/baseIndexOf',[], function() {\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches\n   * or `fromIndex` constraints.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value or `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  return baseIndexOf;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/utilities/noop',[], function() {\n\n  /**\n   * A no-operation function.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @example\n   *\n   * var object = { 'name': 'fred' };\n   * _.noop(object) === undefined;\n   * // => true\n   */\n  function noop() {\n    // no operation performed\n  }\n\n  return noop;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/baseCreate',['./isNative', '../objects/isObject', '../utilities/noop'], function(isNative, isObject, noop) {\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate;\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} prototype The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  function baseCreate(prototype, properties) {\n    return isObject(prototype) ? nativeCreate(prototype) : {};\n  }\n  // fallback for browsers without `Object.create`\n  if (!nativeCreate) {\n    baseCreate = (function() {\n      function Object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          Object.prototype = prototype;\n          var result = new Object;\n          Object.prototype = null;\n        }\n        return result || window.Object();\n      };\n    }());\n  }\n\n  return baseCreate;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/setBindData',['./isNative', '../utilities/noop'], function(isNative, noop) {\n\n  /** Used as the property descriptor for `__bindData__` */\n  var descriptor = {\n    'configurable': false,\n    'enumerable': false,\n    'value': null,\n    'writable': false\n  };\n\n  /** Used to set meta data on functions */\n  var defineProperty = (function() {\n    // IE 8 only accepts DOM elements\n    try {\n      var o = {},\n          func = isNative(func = Object.defineProperty) && func,\n          result = func(o, o, o) && func;\n    } catch(e) { }\n    return result;\n  }());\n\n  /**\n   * Sets `this` binding data on a given function.\n   *\n   * @private\n   * @param {Function} func The function to set data on.\n   * @param {Array} value The data array to set.\n   */\n  var setBindData = !defineProperty ? noop : function(func, value) {\n    descriptor.value = value;\n    defineProperty(func, '__bindData__', descriptor);\n  };\n\n  return setBindData;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/slice',[], function() {\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used instead of `Array#slice` to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|string} collection The collection to slice.\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n        length = end - start || 0,\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  return slice;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/baseBind',['./baseCreate', '../objects/isObject', './setBindData', './slice'], function(baseCreate, isObject, setBindData, slice) {\n\n  /**\n   * Used for `Array` method references.\n   *\n   * Normally `Array.prototype` would suffice, however, using an array literal\n   * avoids issues in Narwhal.\n   */\n  var arrayRef = [];\n\n  /** Native method shortcuts */\n  var push = arrayRef.push;\n\n  /**\n   * The base implementation of `_.bind` that creates the bound function and\n   * sets its meta data.\n   *\n   * @private\n   * @param {Array} bindData The bind data array.\n   * @returns {Function} Returns the new bound function.\n   */\n  function baseBind(bindData) {\n    var func = bindData[0],\n        partialArgs = bindData[2],\n        thisArg = bindData[4];\n\n    function bound() {\n      // `Function#bind` spec\n      // http://es5.github.io/#x15.3.4.5\n      if (partialArgs) {\n        // avoid `arguments` object deoptimizations by using `slice` instead\n        // of `Array.prototype.slice.call` and not assigning `arguments` to a\n        // variable as a ternary expression\n        var args = slice(partialArgs);\n        push.apply(args, arguments);\n      }\n      // mimic the constructor's `return` behavior\n      // http://es5.github.io/#x13.2.2\n      if (this instanceof bound) {\n        // ensure `new bound` is an instance of `func`\n        var thisBinding = baseCreate(func.prototype),\n            result = func.apply(thisBinding, args || arguments);\n        return isObject(result) ? result : thisBinding;\n      }\n      return func.apply(thisArg, args || arguments);\n    }\n    setBindData(bound, bindData);\n    return bound;\n  }\n\n  return baseBind;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/baseCreateWrapper',['./baseCreate', '../objects/isObject', './setBindData', './slice'], function(baseCreate, isObject, setBindData, slice) {\n\n  /**\n   * Used for `Array` method references.\n   *\n   * Normally `Array.prototype` would suffice, however, using an array literal\n   * avoids issues in Narwhal.\n   */\n  var arrayRef = [];\n\n  /** Native method shortcuts */\n  var push = arrayRef.push;\n\n  /**\n   * The base implementation of `createWrapper` that creates the wrapper and\n   * sets its meta data.\n   *\n   * @private\n   * @param {Array} bindData The bind data array.\n   * @returns {Function} Returns the new function.\n   */\n  function baseCreateWrapper(bindData) {\n    var func = bindData[0],\n        bitmask = bindData[1],\n        partialArgs = bindData[2],\n        partialRightArgs = bindData[3],\n        thisArg = bindData[4],\n        arity = bindData[5];\n\n    var isBind = bitmask & 1,\n        isBindKey = bitmask & 2,\n        isCurry = bitmask & 4,\n        isCurryBound = bitmask & 8,\n        key = func;\n\n    function bound() {\n      var thisBinding = isBind ? thisArg : this;\n      if (partialArgs) {\n        var args = slice(partialArgs);\n        push.apply(args, arguments);\n      }\n      if (partialRightArgs || isCurry) {\n        args || (args = slice(arguments));\n        if (partialRightArgs) {\n          push.apply(args, partialRightArgs);\n        }\n        if (isCurry && args.length < arity) {\n          bitmask |= 16 & ~32;\n          return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);\n        }\n      }\n      args || (args = arguments);\n      if (isBindKey) {\n        func = thisBinding[key];\n      }\n      if (this instanceof bound) {\n        thisBinding = baseCreate(func.prototype);\n        var result = func.apply(thisBinding, args);\n        return isObject(result) ? result : thisBinding;\n      }\n      return func.apply(thisBinding, args);\n    }\n    setBindData(bound, bindData);\n    return bound;\n  }\n\n  return baseCreateWrapper;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/isFunction',[], function() {\n\n  /**\n   * Checks if `value` is a function.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   */\n  function isFunction(value) {\n    return typeof value == 'function';\n  }\n\n  return isFunction;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/createWrapper',['./baseBind', './baseCreateWrapper', '../objects/isFunction', './slice'], function(baseBind, baseCreateWrapper, isFunction, slice) {\n\n  /**\n   * Used for `Array` method references.\n   *\n   * Normally `Array.prototype` would suffice, however, using an array literal\n   * avoids issues in Narwhal.\n   */\n  var arrayRef = [];\n\n  /** Native method shortcuts */\n  var push = arrayRef.push,\n      unshift = arrayRef.unshift;\n\n  /**\n   * Creates a function that, when called, either curries or invokes `func`\n   * with an optional `this` binding and partially applied arguments.\n   *\n   * @private\n   * @param {Function|string} func The function or method name to reference.\n   * @param {number} bitmask The bitmask of method flags to compose.\n   *  The bitmask may be composed of the following flags:\n   *  1 - `_.bind`\n   *  2 - `_.bindKey`\n   *  4 - `_.curry`\n   *  8 - `_.curry` (bound)\n   *  16 - `_.partial`\n   *  32 - `_.partialRight`\n   * @param {Array} [partialArgs] An array of arguments to prepend to those\n   *  provided to the new function.\n   * @param {Array} [partialRightArgs] An array of arguments to append to those\n   *  provided to the new function.\n   * @param {*} [thisArg] The `this` binding of `func`.\n   * @param {number} [arity] The arity of `func`.\n   * @returns {Function} Returns the new function.\n   */\n  function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n    var isBind = bitmask & 1,\n        isBindKey = bitmask & 2,\n        isCurry = bitmask & 4,\n        isCurryBound = bitmask & 8,\n        isPartial = bitmask & 16,\n        isPartialRight = bitmask & 32;\n\n    if (!isBindKey && !isFunction(func)) {\n      throw new TypeError;\n    }\n    if (isPartial && !partialArgs.length) {\n      bitmask &= ~16;\n      isPartial = partialArgs = false;\n    }\n    if (isPartialRight && !partialRightArgs.length) {\n      bitmask &= ~32;\n      isPartialRight = partialRightArgs = false;\n    }\n    var bindData = func && func.__bindData__;\n    if (bindData && bindData !== true) {\n      // clone `bindData`\n      bindData = slice(bindData);\n      if (bindData[2]) {\n        bindData[2] = slice(bindData[2]);\n      }\n      if (bindData[3]) {\n        bindData[3] = slice(bindData[3]);\n      }\n      // set `thisBinding` is not previously bound\n      if (isBind && !(bindData[1] & 1)) {\n        bindData[4] = thisArg;\n      }\n      // set if previously bound but not currently (subsequent curried functions)\n      if (!isBind && bindData[1] & 1) {\n        bitmask |= 8;\n      }\n      // set curried arity if not yet set\n      if (isCurry && !(bindData[1] & 4)) {\n        bindData[5] = arity;\n      }\n      // append partial left arguments\n      if (isPartial) {\n        push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n      }\n      // append partial right arguments\n      if (isPartialRight) {\n        unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n      }\n      // merge flags\n      bindData[1] |= bitmask;\n      return createWrapper.apply(null, bindData);\n    }\n    // fast path for `_.bind`\n    var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;\n    return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n  }\n\n  return createWrapper;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/functions/bind',['../internals/createWrapper', '../internals/slice'], function(createWrapper, slice) {\n\n  /**\n   * Creates a function that, when called, invokes `func` with the `this`\n   * binding of `thisArg` and prepends any additional `bind` arguments to those\n   * provided to the bound function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to bind.\n   * @param {*} [thisArg] The `this` binding of `func`.\n   * @param {...*} [arg] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var func = function(greeting) {\n   *   return greeting + ' ' + this.name;\n   * };\n   *\n   * func = _.bind(func, { 'name': 'fred' }, 'hi');\n   * func();\n   * // => 'hi fred'\n   */\n  function bind(func, thisArg) {\n    return arguments.length > 2\n      ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)\n      : createWrapper(func, 1, null, null, thisArg);\n  }\n\n  return bind;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/utilities/identity',[], function() {\n\n  /**\n   * This method returns the first argument provided to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'name': 'fred' };\n   * _.identity(object) === object;\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  return identity;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/support',['./internals/isNative'], function(isNative) {\n\n  /** Used to detect functions containing a `this` reference */\n  var reThis = /\\bthis\\b/;\n\n  /**\n   * An object used to flag environments features.\n   *\n   * @static\n   * @memberOf _\n   * @type Object\n   */\n  var support = {};\n\n  /**\n   * Detect if functions can be decompiled by `Function#toString`\n   * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  support.funcDecomp = !isNative(window.WinRTError) && reThis.test(function() { return this; });\n\n  /**\n   * Detect if `Function#name` is supported (all but IE).\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  support.funcNames = typeof Function.name == 'string';\n\n  return support;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/baseCreateCallback',['../functions/bind', '../utilities/identity', './setBindData', '../support'], function(bind, identity, setBindData, support) {\n\n  /** Used to detected named functions */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to detect functions containing a `this` reference */\n  var reThis = /\\bthis\\b/;\n\n  /** Native method shortcuts */\n  var fnToString = Function.prototype.toString;\n\n  /**\n   * The base implementation of `_.createCallback` without support for creating\n   * \"_.pluck\" or \"_.where\" style callbacks.\n   *\n   * @private\n   * @param {*} [func=identity] The value to convert to a callback.\n   * @param {*} [thisArg] The `this` binding of the created callback.\n   * @param {number} [argCount] The number of arguments the callback accepts.\n   * @returns {Function} Returns a callback function.\n   */\n  function baseCreateCallback(func, thisArg, argCount) {\n    if (typeof func != 'function') {\n      return identity;\n    }\n    // exit early for no `thisArg` or already bound by `Function#bind`\n    if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n      return func;\n    }\n    var bindData = func.__bindData__;\n    if (typeof bindData == 'undefined') {\n      if (support.funcNames) {\n        bindData = !func.name;\n      }\n      bindData = bindData || !support.funcDecomp;\n      if (!bindData) {\n        var source = fnToString.call(func);\n        if (!support.funcNames) {\n          bindData = !reFuncName.test(source);\n        }\n        if (!bindData) {\n          // checks if `func` references the `this` keyword and stores the result\n          bindData = reThis.test(source);\n          setBindData(func, bindData);\n        }\n      }\n    }\n    // exit early if there are no `this` references or `func` is bound\n    if (bindData === false || (bindData !== true && bindData[1] & 1)) {\n      return func;\n    }\n    switch (argCount) {\n      case 1: return function(value) {\n        return func.call(thisArg, value);\n      };\n      case 2: return function(a, b) {\n        return func.call(thisArg, a, b);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(thisArg, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(thisArg, accumulator, value, index, collection);\n      };\n    }\n    return bind(func, thisArg);\n  }\n\n  return baseCreateCallback;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/forOwn',['../internals/baseCreateCallback', './keys', '../internals/objectTypes'], function(baseCreateCallback, keys, objectTypes) {\n\n  /**\n   * Iterates over own enumerable properties of an object, executing the callback\n   * for each property. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, key, object). Callbacks may exit iteration early by\n   * explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n   *   console.log(key);\n   * });\n   * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n   */\n  var forOwn = function(collection, callback, thisArg) {\n    var index, iterable = collection, result = iterable;\n    if (!iterable) return result;\n    if (!objectTypes[typeof iterable]) return result;\n    callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      var ownIndex = -1,\n          ownProps = objectTypes[typeof iterable] && keys(iterable),\n          length = ownProps ? ownProps.length : 0;\n\n      while (++ownIndex < length) {\n        index = ownProps[ownIndex];\n        if (callback(iterable[index], index, collection) === false) return result;\n      }\n    return result\n  };\n\n  return forOwn;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/isArray',['../internals/isNative'], function(isNative) {\n\n  /** `Object#toString` result shortcuts */\n  var arrayClass = '[object Array]';\n\n  /** Used for native method references */\n  var objectProto = Object.prototype;\n\n  /** Used to resolve the internal [[Class]] of values */\n  var toString = objectProto.toString;\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray;\n\n  /**\n   * Checks if `value` is an array.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n   * @example\n   *\n   * (function() { return _.isArray(arguments); })();\n   * // => false\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   */\n  var isArray = nativeIsArray || function(value) {\n    return value && typeof value == 'object' && typeof value.length == 'number' &&\n      toString.call(value) == arrayClass || false;\n  };\n\n  return isArray;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/isString',[], function() {\n\n  /** `Object#toString` result shortcuts */\n  var stringClass = '[object String]';\n\n  /** Used for native method references */\n  var objectProto = Object.prototype;\n\n  /** Used to resolve the internal [[Class]] of values */\n  var toString = objectProto.toString;\n\n  /**\n   * Checks if `value` is a string.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('fred');\n   * // => true\n   */\n  function isString(value) {\n    return typeof value == 'string' ||\n      value && typeof value == 'object' && toString.call(value) == stringClass || false;\n  }\n\n  return isString;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/collections/contains',['../internals/baseIndexOf', '../objects/forOwn', '../objects/isArray', '../objects/isString'], function(baseIndexOf, forOwn, isArray, isString) {\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeMax = Math.max;\n\n  /**\n   * Checks if a given value is present in a collection using strict equality\n   * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the\n   * offset from the end of the collection.\n   *\n   * @static\n   * @memberOf _\n   * @alias include\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {*} target The value to check for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {boolean} Returns `true` if the `target` element is found, else `false`.\n   * @example\n   *\n   * _.contains([1, 2, 3], 1);\n   * // => true\n   *\n   * _.contains([1, 2, 3], 1, 2);\n   * // => false\n   *\n   * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');\n   * // => true\n   *\n   * _.contains('pebbles', 'eb');\n   * // => true\n   */\n  function contains(collection, target, fromIndex) {\n    var index = -1,\n        indexOf = baseIndexOf,\n        length = collection ? collection.length : 0,\n        result = false;\n\n    fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;\n    if (isArray(collection)) {\n      result = indexOf(collection, target, fromIndex) > -1;\n    } else if (typeof length == 'number') {\n      result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;\n    } else {\n      forOwn(collection, function(value) {\n        if (++index >= fromIndex) {\n          return !(result = value === target);\n        }\n      });\n    }\n    return result;\n  }\n\n  return contains;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/isArguments',[], function() {\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]';\n\n  /** Used for native method references */\n  var objectProto = Object.prototype;\n\n  /** Used to resolve the internal [[Class]] of values */\n  var toString = objectProto.toString;\n\n  /**\n   * Checks if `value` is an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n   * @example\n   *\n   * (function() { return _.isArguments(arguments); })(1, 2, 3);\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  function isArguments(value) {\n    return value && typeof value == 'object' && typeof value.length == 'number' &&\n      toString.call(value) == argsClass || false;\n  }\n\n  return isArguments;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/baseFlatten',['../objects/isArguments', '../objects/isArray'], function(isArguments, isArray) {\n\n  /**\n   * The base implementation of `_.flatten` without support for callback\n   * shorthands or `thisArg` binding.\n   *\n   * @private\n   * @param {Array} array The array to flatten.\n   * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n   * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.\n   * @param {number} [fromIndex=0] The index to start from.\n   * @returns {Array} Returns a new flattened array.\n   */\n  function baseFlatten(array, isShallow, isStrict, fromIndex) {\n    var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n\n      if (value && typeof value == 'object' && typeof value.length == 'number'\n          && (isArray(value) || isArguments(value))) {\n        // recursively flatten arrays (susceptible to call stack limits)\n        if (!isShallow) {\n          value = baseFlatten(value, isShallow, isStrict);\n        }\n        var valIndex = -1,\n            valLength = value.length,\n            resIndex = result.length;\n\n        result.length += valLength;\n        while (++valIndex < valLength) {\n          result[resIndex++] = value[valIndex];\n        }\n      } else if (!isStrict) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  return baseFlatten;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/forIn',['../internals/baseCreateCallback', '../internals/objectTypes'], function(baseCreateCallback, objectTypes) {\n\n  /**\n   * Iterates over own and inherited enumerable properties of an object,\n   * executing the callback for each property. The callback is bound to `thisArg`\n   * and invoked with three arguments; (value, key, object). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * Shape.prototype.move = function(x, y) {\n   *   this.x += x;\n   *   this.y += y;\n   * };\n   *\n   * _.forIn(new Shape, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n   */\n  var forIn = function(collection, callback, thisArg) {\n    var index, iterable = collection, result = iterable;\n    if (!iterable) return result;\n    if (!objectTypes[typeof iterable]) return result;\n    callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      for (index in iterable) {\n        if (callback(iterable[index], index, collection) === false) return result;\n      }\n    return result\n  };\n\n  return forIn;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/arrayPool',[], function() {\n\n  /** Used to pool arrays and objects used internally */\n  var arrayPool = [];\n\n  return arrayPool;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/getArray',['./arrayPool'], function(arrayPool) {\n\n  /**\n   * Gets an array from the array pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Array} The array from the pool.\n   */\n  function getArray() {\n    return arrayPool.pop() || [];\n  }\n\n  return getArray;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/maxPoolSize',[], function() {\n\n  /** Used as the max size of the `arrayPool` and `objectPool` */\n  var maxPoolSize = 40;\n\n  return maxPoolSize;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/releaseArray',['./arrayPool', './maxPoolSize'], function(arrayPool, maxPoolSize) {\n\n  /**\n   * Releases the given array back to the array pool.\n   *\n   * @private\n   * @param {Array} [array] The array to release.\n   */\n  function releaseArray(array) {\n    array.length = 0;\n    if (arrayPool.length < maxPoolSize) {\n      arrayPool.push(array);\n    }\n  }\n\n  return releaseArray;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/baseIsEqual',['../objects/forIn', './getArray', '../objects/isFunction', './objectTypes', './releaseArray'], function(forIn, getArray, isFunction, objectTypes, releaseArray) {\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /** Used for native method references */\n  var objectProto = Object.prototype;\n\n  /** Used to resolve the internal [[Class]] of values */\n  var toString = objectProto.toString;\n\n  /** Native method shortcuts */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /**\n   * The base implementation of `_.isEqual`, without support for `thisArg` binding,\n   * that allows partial \"_.where\" style comparisons.\n   *\n   * @private\n   * @param {*} a The value to compare.\n   * @param {*} b The other value to compare.\n   * @param {Function} [callback] The function to customize comparing values.\n   * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.\n   * @param {Array} [stackA=[]] Tracks traversed `a` objects.\n   * @param {Array} [stackB=[]] Tracks traversed `b` objects.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   */\n  function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {\n    // used to indicate that when comparing objects, `a` has at least the properties of `b`\n    if (callback) {\n      var result = callback(a, b);\n      if (typeof result != 'undefined') {\n        return !!result;\n      }\n    }\n    // exit early for identical values\n    if (a === b) {\n      // treat `+0` vs. `-0` as not equal\n      return a !== 0 || (1 / a == 1 / b);\n    }\n    var type = typeof a,\n        otherType = typeof b;\n\n    // exit early for unlike primitive values\n    if (a === a &&\n        !(a && objectTypes[type]) &&\n        !(b && objectTypes[otherType])) {\n      return false;\n    }\n    // exit early for `null` and `undefined` avoiding ES3's Function#call behavior\n    // http://es5.github.io/#x15.3.4.4\n    if (a == null || b == null) {\n      return a === b;\n    }\n    // compare [[Class]] names\n    var className = toString.call(a),\n        otherClass = toString.call(b);\n\n    if (className == argsClass) {\n      className = objectClass;\n    }\n    if (otherClass == argsClass) {\n      otherClass = objectClass;\n    }\n    if (className != otherClass) {\n      return false;\n    }\n    switch (className) {\n      case boolClass:\n      case dateClass:\n        // coerce dates and booleans to numbers, dates to milliseconds and booleans\n        // to `1` or `0` treating invalid dates coerced to `NaN` as not equal\n        return +a == +b;\n\n      case numberClass:\n        // treat `NaN` vs. `NaN` as equal\n        return (a != +a)\n          ? b != +b\n          // but treat `+0` vs. `-0` as not equal\n          : (a == 0 ? (1 / a == 1 / b) : a == +b);\n\n      case regexpClass:\n      case stringClass:\n        // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)\n        // treat string primitives and their corresponding object instances as equal\n        return a == String(b);\n    }\n    var isArr = className == arrayClass;\n    if (!isArr) {\n      // unwrap any `lodash` wrapped values\n      var aWrapped = hasOwnProperty.call(a, '__wrapped__'),\n          bWrapped = hasOwnProperty.call(b, '__wrapped__');\n\n      if (aWrapped || bWrapped) {\n        return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);\n      }\n      // exit for functions and DOM nodes\n      if (className != objectClass) {\n        return false;\n      }\n      // in older versions of Opera, `arguments` objects have `Array` constructors\n      var ctorA = a.constructor,\n          ctorB = b.constructor;\n\n      // non `Object` object instances with different constructors are not equal\n      if (ctorA != ctorB &&\n            !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&\n            ('constructor' in a && 'constructor' in b)\n          ) {\n        return false;\n      }\n    }\n    // assume cyclic structures are equal\n    // the algorithm for detecting cyclic structures is adapted from ES 5.1\n    // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)\n    var initedStack = !stackA;\n    stackA || (stackA = getArray());\n    stackB || (stackB = getArray());\n\n    var length = stackA.length;\n    while (length--) {\n      if (stackA[length] == a) {\n        return stackB[length] == b;\n      }\n    }\n    var size = 0;\n    result = true;\n\n    // add `a` and `b` to the stack of traversed objects\n    stackA.push(a);\n    stackB.push(b);\n\n    // recursively compare objects and arrays (susceptible to call stack limits)\n    if (isArr) {\n      // compare lengths to determine if a deep comparison is necessary\n      length = a.length;\n      size = b.length;\n      result = size == length;\n\n      if (result || isWhere) {\n        // deep compare the contents, ignoring non-numeric properties\n        while (size--) {\n          var index = length,\n              value = b[size];\n\n          if (isWhere) {\n            while (index--) {\n              if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {\n                break;\n              }\n            }\n          } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {\n            break;\n          }\n        }\n      }\n    }\n    else {\n      // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n      // which, in this case, is more costly\n      forIn(b, function(value, key, b) {\n        if (hasOwnProperty.call(b, key)) {\n          // count the number of properties.\n          size++;\n          // deep compare each property value.\n          return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));\n        }\n      });\n\n      if (result && !isWhere) {\n        // ensure both objects have the same number of properties\n        forIn(a, function(value, key, a) {\n          if (hasOwnProperty.call(a, key)) {\n            // `size` will be `-1` if `a` has more properties than `b`\n            return (result = --size > -1);\n          }\n        });\n      }\n    }\n    stackA.pop();\n    stackB.pop();\n\n    if (initedStack) {\n      releaseArray(stackA);\n      releaseArray(stackB);\n    }\n    return result;\n  }\n\n  return baseIsEqual;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/utilities/property',[], function() {\n\n  /**\n   * Creates a \"_.pluck\" style function, which returns the `key` value of a\n   * given object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {string} key The name of the property to retrieve.\n   * @returns {Function} Returns the new function.\n   * @example\n   *\n   * var characters = [\n   *   { 'name': 'fred',   'age': 40 },\n   *   { 'name': 'barney', 'age': 36 }\n   * ];\n   *\n   * var getName = _.property('name');\n   *\n   * _.map(characters, getName);\n   * // => ['barney', 'fred']\n   *\n   * _.sortBy(characters, getName);\n   * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]\n   */\n  function property(key) {\n    return function(object) {\n      return object[key];\n    };\n  }\n\n  return property;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/functions/createCallback',['../internals/baseCreateCallback', '../internals/baseIsEqual', '../objects/isObject', '../objects/keys', '../utilities/property'], function(baseCreateCallback, baseIsEqual, isObject, keys, property) {\n\n  /**\n   * Produces a callback bound to an optional `thisArg`. If `func` is a property\n   * name the created callback will return the property value for a given element.\n   * If `func` is an object the created callback will return `true` for elements\n   * that contain the equivalent object properties, otherwise it will return `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {*} [func=identity] The value to convert to a callback.\n   * @param {*} [thisArg] The `this` binding of the created callback.\n   * @param {number} [argCount] The number of arguments the callback accepts.\n   * @returns {Function} Returns a callback function.\n   * @example\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 36 },\n   *   { 'name': 'fred',   'age': 40 }\n   * ];\n   *\n   * // wrap to create custom callback shorthands\n   * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {\n   *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);\n   *   return !match ? func(callback, thisArg) : function(object) {\n   *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n   *   };\n   * });\n   *\n   * _.filter(characters, 'age__gt38');\n   * // => [{ 'name': 'fred', 'age': 40 }]\n   */\n  function createCallback(func, thisArg, argCount) {\n    var type = typeof func;\n    if (func == null || type == 'function') {\n      return baseCreateCallback(func, thisArg, argCount);\n    }\n    // handle \"_.pluck\" style callback shorthands\n    if (type != 'object') {\n      return property(func);\n    }\n    var props = keys(func),\n        key = props[0],\n        a = func[key];\n\n    // handle \"_.where\" style callback shorthands\n    if (props.length == 1 && a === a && !isObject(a)) {\n      // fast path the common case of providing an object with a single\n      // property containing a primitive value\n      return function(object) {\n        var b = object[key];\n        return a === b && (a !== 0 || (1 / a == 1 / b));\n      };\n    }\n    return function(object) {\n      var length = props.length,\n          result = false;\n\n      while (length--) {\n        if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {\n          break;\n        }\n      }\n      return result;\n    };\n  }\n\n  return createCallback;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/collections/map',['../functions/createCallback', '../objects/forOwn'], function(createCallback, forOwn) {\n\n  /**\n   * Creates an array of values by running each element in the collection\n   * through the callback. The callback is bound to `thisArg` and invoked with\n   * three arguments; (value, index|key, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias collect\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of the results of each `callback` execution.\n   * @example\n   *\n   * _.map([1, 2, 3], function(num) { return num * 3; });\n   * // => [3, 6, 9]\n   *\n   * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n   * // => [3, 6, 9] (property order is not guaranteed across environments)\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 36 },\n   *   { 'name': 'fred',   'age': 40 }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.map(characters, 'name');\n   * // => ['barney', 'fred']\n   */\n  function map(collection, callback, thisArg) {\n    var index = -1,\n        length = collection ? collection.length : 0;\n\n    callback = createCallback(callback, thisArg, 3);\n    if (typeof length == 'number') {\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = callback(collection[index], index, collection);\n      }\n    } else {\n      result = [];\n      forOwn(collection, function(value, key, collection) {\n        result[++index] = callback(value, key, collection);\n      });\n    }\n    return result;\n  }\n\n  return map;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/arrays/flatten',['../internals/baseFlatten', '../collections/map'], function(baseFlatten, map) {\n\n  /**\n   * Flattens a nested array (the nesting can be to any depth). If `isShallow`\n   * is truey, the array will only be flattened a single level. If a callback\n   * is provided each element of the array is passed through the callback before\n   * flattening. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, index, array).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to flatten.\n   * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2], [3, [[4]]]]);\n   * // => [1, 2, 3, 4];\n   *\n   * _.flatten([1, [2], [3, [[4]]]], true);\n   * // => [1, 2, 3, [[4]]];\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },\n   *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.flatten(characters, 'pets');\n   * // => ['hoppy', 'baby puss', 'dino']\n   */\n  function flatten(array, isShallow, callback, thisArg) {\n    // juggle arguments\n    if (typeof isShallow != 'boolean' && isShallow != null) {\n      thisArg = callback;\n      callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;\n      isShallow = false;\n    }\n    if (callback != null) {\n      array = map(array, callback, thisArg);\n    }\n    return baseFlatten(array, isShallow);\n  }\n\n  return flatten;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/values',['./keys'], function(keys) {\n\n  /**\n   * Creates an array composed of the own enumerable property values of `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property values.\n   * @example\n   *\n   * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => [1, 2, 3] (property order is not guaranteed across environments)\n   */\n  function values(object) {\n    var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = object[props[index]];\n    }\n    return result;\n  }\n\n  return values;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/collections/toArray',['../objects/isString', '../internals/slice', '../objects/values'], function(isString, slice, values) {\n\n  /**\n   * Converts the `collection` to an array.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to convert.\n   * @returns {Array} Returns the new converted array.\n   * @example\n   *\n   * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n   * // => [2, 3, 4]\n   */\n  function toArray(collection) {\n    if (collection && typeof collection.length == 'number') {\n      return slice(collection);\n    }\n    return values(collection);\n  }\n\n  return toArray;\n});\n\n","define('element',['lodash-amd/modern/collections/contains'], function (contains) {\n\n  'use strict';\n\n  // TODO: not exhaustive?\n  var blockElementNames = ['P', 'LI', 'DIV', 'BLOCKQUOTE', 'UL', 'OL', 'H1',\n                           'H2', 'H3', 'H4', 'H5', 'H6', 'TABLE', 'TH', 'TD'];\n  function isBlockElement(node) {\n    return contains(blockElementNames, node.nodeName);\n  }\n\n  function isSelectionMarkerNode(node) {\n    return (node.nodeType === Node.ELEMENT_NODE && node.className === 'scribe-marker');\n  }\n\n  function isCaretPositionNode(node) {\n    return (node.nodeType === Node.ELEMENT_NODE && node.className === 'caret-position');\n  }\n\n  function unwrap(node, childNode) {\n    while (childNode.childNodes.length > 0) {\n      node.insertBefore(childNode.childNodes[0], childNode);\n    }\n    node.removeChild(childNode);\n  }\n\n  return {\n    isBlockElement: isBlockElement,\n    isSelectionMarkerNode: isSelectionMarkerNode,\n    isCaretPositionNode: isCaretPositionNode,\n    unwrap: unwrap\n  };\n\n});\n\n","define('node',[], function () {\n\n  'use strict';\n\n  function isEmptyTextNode(node) {\n    return (node.nodeType === Node.TEXT_NODE && node.textContent === '');\n  }\n\n  function insertAfter(newNode, referenceNode) {\n    return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  }\n\n  function removeNode(node) {\n    return node.parentNode.removeChild(node);\n  }\n\n  return {\n    isEmptyTextNode: isEmptyTextNode,\n    insertAfter: insertAfter,\n    removeNode: removeNode\n  };\n\n});\n\n","define('dom-observer',[\n  'lodash-amd/modern/arrays/flatten',\n  'lodash-amd/modern/collections/toArray',\n  './element',\n  './node'\n], function (\n  flatten,\n  toArray,\n  elementHelpers,\n  nodeHelpers\n) {\n\n  function observeDomChanges(el, callback) {\n    function includeRealMutations(mutations) {\n      var allChangedNodes = flatten(mutations.map(function(mutation) {\n        var added   = toArray(mutation.addedNodes);\n        var removed = toArray(mutation.removedNodes);\n        return added.concat(removed);\n      }));\n\n      var realChangedNodes = allChangedNodes.\n        filter(function(n) { return ! nodeHelpers.isEmptyTextNode(n); }).\n        filter(function(n) { return ! elementHelpers.isSelectionMarkerNode(n); });\n\n      return realChangedNodes.length > 0;\n    }\n\n    var MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;\n    \n    // Flag to avoid running recursively\n    var runningPostMutation = false;\n\n    var observer = new MutationObserver(function(mutations) {\n      if (! runningPostMutation && includeRealMutations(mutations)) {\n        runningPostMutation = true;\n\n        try {\n          callback();\n        } catch(e) {\n          // The catch block is required but we don't want to swallow the error\n          throw e;\n        } finally {\n          // We must yield to let any mutation we caused be triggered\n          // in the next cycle\n          setTimeout(function() {\n            runningPostMutation = false;\n          }, 0);\n        }\n      }\n    });\n\n    observer.observe(el, {\n      attributes: true,\n      childList: true,\n      subtree: true\n    });\n\n    return observer;\n  }\n\n  return observeDomChanges;\n});\n\n","define('plugins/core/events',[\n  'lodash-amd/modern/collections/contains',\n  '../../dom-observer'\n], function (\n  contains,\n  observeDomChanges\n) {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      /**\n       * Push the first history item when the editor is focused.\n       */\n      var pushHistoryOnFocus = function () {\n        // Tabbing into the editor doesn't create a range immediately, so we\n        // have to wait until the next event loop.\n        setTimeout(function () {\n          scribe.pushHistory();\n        }.bind(scribe), 0);\n\n        scribe.el.removeEventListener('focus', pushHistoryOnFocus);\n      }.bind(scribe);\n      scribe.el.addEventListener('focus', pushHistoryOnFocus);\n\n      /**\n       * Firefox: Giving focus to a `contenteditable` will place the caret\n       * outside of any block elements. Chrome behaves correctly by placing the\n       * caret at the  earliest point possible inside the first block element.\n       * As per: http://jsbin.com/eLoFOku/1/edit?js,console,output\n       *\n       * We detect when this occurs and fix it by placing the caret ourselves.\n       */\n      scribe.el.addEventListener('focus', function placeCaretOnFocus() {\n        var selection = new scribe.api.Selection();\n        // In Chrome, the range is not created on or before this event loop.\n        // It doesn’t matter because this is a fix for Firefox.\n        if (selection.range) {\n\n          var isFirefoxBug = scribe.allowsBlockElements() &&\n                  selection.range.startContainer === scribe.el;\n\n          if (isFirefoxBug) {\n            var focusElement = getFirstDeepestChild(scribe.el.firstChild);\n\n            var range = selection.range;\n\n            range.setStart(focusElement, 0);\n            range.setEnd(focusElement, 0);\n\n            selection.selection.removeAllRanges();\n            selection.selection.addRange(range);\n          }\n        }\n\n        function getFirstDeepestChild(node) {\n          var treeWalker = document.createTreeWalker(node);\n          var previousNode = treeWalker.currentNode;\n          if (treeWalker.firstChild()) {\n            // TODO: build list of non-empty elements (used elsewhere)\n            // Do not include non-empty elements\n            if (treeWalker.currentNode.nodeName === 'BR') {\n              return previousNode;\n            } else {\n              return getFirstDeepestChild(treeWalker.currentNode);\n            }\n          } else {\n            return treeWalker.currentNode;\n          }\n        }\n      }.bind(scribe));\n\n      /**\n       * Apply the formatters when there is a DOM mutation.\n       */\n      var applyFormatters = function() {\n        if (!scribe._skipFormatters) {\n          var selection = new scribe.api.Selection();\n          var isEditorActive = selection.range;\n\n          var runFormatters = function () {\n            if (isEditorActive) {\n              selection.placeMarkers();\n            }\n            scribe.setHTML(scribe._htmlFormatterFactory.format(scribe.getHTML()));\n            selection.selectMarkers();\n          }.bind(scribe);\n\n          // We only want to wrap the formatting in a transaction if the editor is\n          // active. If the DOM is mutated when the editor isn't active (e.g.\n          // `scribe.setContent`), we do not want to push to the history. (This\n          // happens on the first `focus` event).\n          if (isEditorActive) {\n            // Discard the last history item, as we're going to be adding\n            // a new clean history item next.\n            scribe.undoManager.undo();\n\n            // Pass content through formatters, place caret back\n            scribe.transactionManager.run(runFormatters);\n          } else {\n            runFormatters();\n          }\n\n        }\n\n        delete scribe._skipFormatters;\n      }.bind(scribe);\n\n      observeDomChanges(scribe.el, applyFormatters);\n\n      // TODO: disconnect on tear down:\n      // observer.disconnect();\n\n      /**\n       * If the paragraphs option is set to true, we need to manually handle\n       * keyboard navigation inside a heading to ensure a P element is created.\n       */\n      if (scribe.allowsBlockElements()) {\n        scribe.el.addEventListener('keydown', function (event) {\n          if (event.keyCode === 13) { // enter\n\n            var selection = new scribe.api.Selection();\n            var range = selection.range;\n\n            var headingNode = selection.getContaining(function (node) {\n              return (/^(H[1-6])$/).test(node.nodeName);\n            });\n\n            /**\n             * If we are at the end of the heading, insert a P. Otherwise handle\n             * natively.\n             */\n            if (headingNode && range.collapsed) {\n              var contentToEndRange = range.cloneRange();\n              contentToEndRange.setEndAfter(headingNode, 0);\n\n              // Get the content from the range to the end of the heading\n              var contentToEndFragment = contentToEndRange.cloneContents();\n\n              if (contentToEndFragment.firstChild.textContent === '') {\n                event.preventDefault();\n\n                scribe.transactionManager.run(function () {\n                  // Default P\n                  // TODO: Abstract somewhere\n                  var pNode = document.createElement('p');\n                  var brNode = document.createElement('br');\n                  pNode.appendChild(brNode);\n\n                  headingNode.parentNode.insertBefore(pNode, headingNode.nextElementSibling);\n\n                  // Re-apply range\n                  range.setStart(pNode, 0);\n                  range.setEnd(pNode, 0);\n\n                  selection.selection.removeAllRanges();\n                  selection.selection.addRange(range);\n                });\n              }\n            }\n          }\n        });\n      }\n\n      /**\n       * If the paragraphs option is set to true, we need to manually handle\n       * keyboard navigation inside list item nodes.\n       */\n      if (scribe.allowsBlockElements()) {\n        scribe.el.addEventListener('keydown', function (event) {\n          if (event.keyCode === 13 || event.keyCode === 8) { // enter || backspace\n\n            var selection = new scribe.api.Selection();\n            var range = selection.range;\n\n            if (range.collapsed) {\n              var containerLIElement = selection.getContaining(function (node) {\n                return node.nodeName === 'LI';\n              });\n              if (containerLIElement && containerLIElement.textContent.trim() === '') {\n                /**\n                 * LIs\n                 */\n\n                event.preventDefault();\n\n                var listNode = selection.getContaining(function (node) {\n                  return node.nodeName === 'UL' || node.nodeName === 'OL';\n                });\n\n                var command = scribe.getCommand(listNode.nodeName === 'OL' ? 'insertOrderedList' : 'insertUnorderedList');\n\n                command.execute();\n              }\n            }\n          }\n        });\n      }\n\n      /**\n       * We have to hijack the paste event to ensure it uses\n       * `scribe.insertHTML`, which executes the Scribe version of the command\n       * and also runs the formatters.\n       */\n\n      /**\n       * TODO: could we implement this as a polyfill for `event.clipboardData` instead?\n       * I also don't like how it has the authority to perform `event.preventDefault`.\n       */\n\n      scribe.el.addEventListener('paste', function handlePaste(event) {\n        /**\n         * Browsers without the Clipboard API (specifically `ClipboardEvent.clipboardData`)\n         * will execute the second branch here.\n         */\n        if (event.clipboardData) {\n          event.preventDefault();\n\n          if (contains(event.clipboardData.types, 'text/html')) {\n\n            scribe.insertHTML(event.clipboardData.getData('text/html'));\n          } else {\n            scribe.insertPlainText(event.clipboardData.getData('text/plain'));\n          }\n        } else {\n          /**\n           * If the browser doesn't have `ClipboardEvent.clipboardData`, we run through a\n           * sequence of events:\n           *\n           *   - Save the text selection\n           *   - Focus another, hidden textarea so we paste there\n           *   - Copy the pasted content of said textarea\n           *   - Give focus back to the scribe\n           *   - Restore the text selection\n           *\n           * This is required because, without access to the Clipboard API, there is literally\n           * no other way to manipulate content on paste.\n           * As per: https://github.com/jejacks0n/mercury/issues/23#issuecomment-2308347\n           *\n           * Firefox <= 21\n           * https://developer.mozilla.org/en-US/docs/Web/API/ClipboardEvent.clipboardData\n           */\n\n          var selection = new scribe.api.Selection();\n\n          // Store the caret position\n          selection.placeMarkers();\n\n          var bin = document.createElement('div');\n          document.body.appendChild(bin);\n          bin.setAttribute('contenteditable', true);\n          bin.focus();\n\n          // Wait for the paste to happen (next loop?)\n          setTimeout(function () {\n            var data = bin.innerHTML;\n            bin.parentNode.removeChild(bin);\n\n            // Restore the caret position\n            selection.selectMarkers();\n            /**\n             * Firefox 19 (and maybe others): even though the applied range\n             * exists within the Scribe instance, we need to focus it.\n             */\n            scribe.el.focus();\n\n            scribe.insertHTML(data);\n          }, 1);\n        }\n      });\n\n    };\n  };\n});\n\n","define('plugins/core/formatters/html/replace-nbsp-chars',[],function () {\n\n  /**\n   * Chrome:\n   */\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var nbspCharRegExp = /(\\s|&nbsp;)+/g;\n\n      // TODO: should we be doing this on paste?\n      scribe.registerHTMLFormatter('export', function (html) {\n        return html.replace(nbspCharRegExp, ' ');\n      });\n    };\n  };\n\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/arrays/last',['../functions/createCallback', '../internals/slice'], function(createCallback, slice) {\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments */\n  var undefined;\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeMax = Math.max;\n\n  /**\n   * Gets the last element or last `n` elements of an array. If a callback is\n   * provided elements at the end of the array are returned as long as the\n   * callback returns truey. The callback is bound to `thisArg` and invoked\n   * with three arguments; (value, index, array).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|number|string} [callback] The function called\n   *  per element or the number of elements to return. If a property name or\n   *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the last element(s) of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   *\n   * _.last([1, 2, 3], 2);\n   * // => [2, 3]\n   *\n   * _.last([1, 2, 3], function(num) {\n   *   return num > 1;\n   * });\n   * // => [2, 3]\n   *\n   * var characters = [\n   *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n   *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n   *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.pluck(_.last(characters, 'blocked'), 'name');\n   * // => ['fred', 'pebbles']\n   *\n   * // using \"_.where\" callback shorthand\n   * _.last(characters, { 'employer': 'na' });\n   * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n   */\n  function last(array, callback, thisArg) {\n    var n = 0,\n        length = array ? array.length : 0;\n\n    if (typeof callback != 'number' && callback != null) {\n      var index = length;\n      callback = createCallback(callback, thisArg, 3);\n      while (index-- && callback(array[index], index, array)) {\n        n++;\n      }\n    } else {\n      n = callback;\n      if (n == null || thisArg) {\n        return array ? array[length - 1] : undefined;\n      }\n    }\n    return slice(array, nativeMax(0, length - n));\n  }\n\n  return last;\n});\n\n","define('plugins/core/formatters/html/enforce-p-elements',[\n  'lodash-amd/modern/arrays/last'\n], function (\n  last\n) {\n\n  /**\n   * Chrome and Firefox: Upon pressing backspace inside of a P, the\n   * browser deletes the paragraph element, leaving the caret (and any\n   * content) outside of any P.\n   *\n   * Firefox: Erasing across multiple paragraphs, or outside of a\n   * whole paragraph (e.g. by ‘Select All’) will leave content outside\n   * of any P.\n   *\n   * Entering a new line in a pristine state state will insert\n   * `<div>`s (in Chrome) or `<br>`s (in Firefox) where previously we\n   * had `<p>`'s. This patches the behaviour of delete/backspace so\n   * that we do not end up in a pristine state.\n   */\n\n  'use strict';\n\n  /**\n   * Wrap consecutive inline elements and text nodes in a P element.\n   */\n  function wrapChildNodes(scribe, parentNode) {\n    var groups = Array.prototype.reduce.call(parentNode.childNodes,\n                                             function (accumulator, binChildNode) {\n      var group = last(accumulator);\n      if (! group) {\n        startNewGroup();\n      } else {\n        var isBlockGroup = scribe.element.isBlockElement(group[0]);\n        if (isBlockGroup === scribe.element.isBlockElement(binChildNode)) {\n          group.push(binChildNode);\n        } else {\n          startNewGroup();\n        }\n      }\n\n      return accumulator;\n\n      function startNewGroup() {\n        var newGroup = [binChildNode];\n        accumulator.push(newGroup);\n      }\n    }, []);\n\n    var consecutiveInlineElementsAndTextNodes = groups.filter(function (group) {\n      var isBlockGroup = scribe.element.isBlockElement(group[0]);\n      return ! isBlockGroup;\n    });\n\n    consecutiveInlineElementsAndTextNodes.forEach(function (nodes) {\n      var pElement = document.createElement('p');\n      nodes[0].parentNode.insertBefore(pElement, nodes[0]);\n      nodes.forEach(function (node) {\n        pElement.appendChild(node);\n      });\n    });\n\n    parentNode._isWrapped = true;\n  }\n\n  // Traverse the tree, wrapping child nodes as we go.\n  function traverse(scribe, parentNode) {\n    var treeWalker = document.createTreeWalker(parentNode, NodeFilter.SHOW_ELEMENT);\n    var node = treeWalker.firstChild();\n\n    // FIXME: does this recurse down?\n\n    while (node) {\n      // TODO: At the moment we only support BLOCKQUOTEs. See failing\n      // tests.\n      if (node.nodeName === 'BLOCKQUOTE' && ! node._isWrapped) {\n        wrapChildNodes(scribe, node);\n        traverse(scribe, parentNode);\n        break;\n      }\n      node = treeWalker.nextSibling();\n    }\n  }\n\n  return function () {\n    return function (scribe) {\n\n      scribe.registerHTMLFormatter('normalize', function (html) {\n        /**\n         * Ensure P mode.\n         *\n         * Wrap any orphan text nodes in a P element.\n         */\n        // TODO: This should be configurable and also correct markup such as\n        // `<ul>1</ul>` to <ul><li>2</li></ul>`. See skipped tests.\n        // TODO: This should probably be a part of HTML Janitor, or some other\n        // formatter.\n        var bin = document.createElement('div');\n        bin.innerHTML = html;\n\n        wrapChildNodes(scribe, bin);\n        traverse(scribe, bin);\n\n        return bin.innerHTML;\n      });\n\n    };\n  };\n\n});\n\n","define('plugins/core/formatters/html/ensure-selectable-containers',[\n    '../../../../element',\n    'lodash-amd/modern/collections/contains'\n  ], function (\n    element,\n    contains\n  ) {\n\n  /**\n   * Chrome and Firefox: All elements need to contain either text or a `<br>` to\n   * remain selectable. (Unless they have a width and height explicitly set with\n   * CSS(?), as per: http://jsbin.com/gulob/2/edit?html,css,js,output)\n   */\n\n  'use strict';\n\n  // http://www.w3.org/TR/html-markup/syntax.html#syntax-elements\n  var html5VoidElements = ['AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT', 'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'];\n\n  function parentHasNoTextContent(element, node) {\n    if (element.isCaretPositionNode(node)) {\n      return true;\n    } else {\n      return node.parentNode.textContent.trim() === '';\n    }\n  }\n\n\n  function traverse(element, parentNode) {\n    // Instead of TreeWalker, which gets confused when the BR is added to the dom,\n    // we recursively traverse the tree to look for an empty node that can have childNodes\n\n    var node = parentNode.firstElementChild;\n\n    function isEmpty(node) {\n\n      if ((node.children.length === 0 && element.isBlockElement(node))\n        || (node.children.length === 1 && element.isSelectionMarkerNode(node.children[0]))) {\n         return true;\n      }\n\n      // Do not insert BR in empty non block elements with parent containing text\n      if (!element.isBlockElement(node) && node.children.length === 0) {\n        return parentHasNoTextContent(element, node);\n      }\n\n      return false;\n    }\n\n    while (node) {\n      if (!element.isSelectionMarkerNode(node)) {\n        // Find any node that contains no child *elements*, or just contains\n        // whitespace, and is not self-closing\n        if (isEmpty(node) &&\n          node.textContent.trim() === '' &&\n          !contains(html5VoidElements, node.nodeName)) {\n          node.appendChild(document.createElement('br'));\n        } else if (node.children.length > 0) {\n          traverse(element, node);\n        }\n      }\n      node = node.nextElementSibling;\n    }\n  }\n\n  return function () {\n    return function (scribe) {\n\n      scribe.registerHTMLFormatter('normalize', function (html) {\n        var bin = document.createElement('div');\n        bin.innerHTML = html;\n\n        traverse(scribe.element, bin);\n\n        return bin.innerHTML;\n      });\n\n    };\n  };\n\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/htmlEscapes',[], function() {\n\n  /**\n   * Used to convert characters to HTML entities:\n   *\n   * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n   * don't require escaping in HTML and have no special meaning unless they're part\n   * of a tag or an unquoted attribute value.\n   * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n   */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  return htmlEscapes;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/escapeHtmlChar',['./htmlEscapes'], function(htmlEscapes) {\n\n  /**\n   * Used by `escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} match The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(match) {\n    return htmlEscapes[match];\n  }\n\n  return escapeHtmlChar;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/reUnescapedHtml',['./htmlEscapes', '../objects/keys'], function(htmlEscapes, keys) {\n\n  /** Used to match HTML entities and HTML characters */\n  var reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');\n\n  return reUnescapedHtml;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/utilities/escape',['../internals/escapeHtmlChar', '../objects/keys', '../internals/reUnescapedHtml'], function(escapeHtmlChar, keys, reUnescapedHtml) {\n\n  /**\n   * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n   * corresponding HTML entities.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {string} string The string to escape.\n   * @returns {string} Returns the escaped string.\n   * @example\n   *\n   * _.escape('Fred, Wilma, & Pebbles');\n   * // => 'Fred, Wilma, &amp; Pebbles'\n   */\n  function escape(string) {\n    return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);\n  }\n\n  return escape;\n});\n\n","define('plugins/core/formatters/plain-text/escape-html-characters',[\n  'lodash-amd/modern/utilities/escape'\n], function (\n  escape\n) {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      scribe.registerPlainTextFormatter(escape);\n    };\n  };\n\n});\n\n","define('plugins/core/inline-elements-mode',[],function () {\n\n  'use strict';\n\n  // TODO: abstract\n  function hasContent(rootNode) {\n    var treeWalker = document.createTreeWalker(rootNode);\n\n    while (treeWalker.nextNode()) {\n      if (treeWalker.currentNode) {\n        // If the node is a non-empty element or has content\n        if (~['br'].indexOf(treeWalker.currentNode.nodeName.toLowerCase()) || treeWalker.currentNode.length > 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return function () {\n    return function (scribe) {\n      /**\n       * Firefox has a `insertBrOnReturn` command, but this is not a part of\n       * any standard. One day we might have an `insertLineBreak` command,\n       * proposed by this spec:\n       * https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#the-insertlinebreak-command\n       * As per: http://jsbin.com/IQUraXA/1/edit?html,js,output\n       */\n      scribe.el.addEventListener('keydown', function (event) {\n        if (event.keyCode === 13) { // enter\n          var selection = new scribe.api.Selection();\n          var range = selection.range;\n\n          var blockNode = selection.getContaining(function (node) {\n            return node.nodeName === 'LI' || (/^(H[1-6])$/).test(node.nodeName);\n          });\n\n          if (! blockNode) {\n            event.preventDefault();\n\n            scribe.transactionManager.run(function () {\n              /**\n               * Firefox: Delete the bogus BR as we insert another one later.\n               * We have to do this because otherwise the browser will believe\n               * there is content to the right of the selection.\n               */\n              if (scribe.el.lastChild.nodeName === 'BR') {\n                scribe.el.removeChild(scribe.el.lastChild);\n              }\n\n              var brNode = document.createElement('br');\n\n              range.insertNode(brNode);\n              // After inserting the BR into the range is no longer collapsed, so\n              // we have to collapse it again.\n              // TODO: Older versions of Firefox require this argument even though\n              // it is supposed to be optional. Proxy/polyfill?\n              range.collapse(false);\n\n              /**\n               * Chrome: If there is no right-hand side content, inserting a BR\n               * will not appear to create a line break.\n               * Firefox: If there is no right-hand side content, inserting a BR\n               * will appear to create a weird \"half-line break\".\n               *\n               * Possible solution: Insert two BRs.\n               * ✓ Chrome: Inserting two BRs appears to create a line break.\n               * Typing will then delete the bogus BR element.\n               * Firefox: Inserting two BRs will create two line breaks.\n               *\n               * Solution: Only insert two BRs if there is no right-hand\n               * side content.\n               *\n               * If the user types on a line immediately after a BR element,\n               * Chrome will replace the BR element with the typed characters,\n               * whereas Firefox will not. Thus, to satisfy Firefox we have to\n               * insert a bogus BR element on initialization (see below).\n               */\n\n              var contentToEndRange = range.cloneRange();\n              contentToEndRange.setEndAfter(scribe.el.lastChild, 0);\n\n              // Get the content from the range to the end of the heading\n              var contentToEndFragment = contentToEndRange.cloneContents();\n\n              // If there is not already a right hand side content we need to\n              // insert a bogus BR element.\n              if (! hasContent(contentToEndFragment)) {\n                var bogusBrNode = document.createElement('br');\n                range.insertNode(bogusBrNode);\n              }\n\n              var newRange = range.cloneRange();\n\n              newRange.setStartAfter(brNode, 0);\n              newRange.setEndAfter(brNode, 0);\n\n              selection.selection.removeAllRanges();\n              selection.selection.addRange(newRange);\n            });\n          }\n        }\n      }.bind(this));\n\n      if (scribe.getHTML().trim() === '') {\n        // Bogus BR element for Firefox — see explanation above.\n        // TODO: also append when consumer sets the content manually.\n        // TODO: hide when the user calls `getHTML`?\n        scribe.setContent('');\n      }\n    };\n  };\n});\n\n","define('plugins/core/patches/commands/bold',[],function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var boldCommand = new scribe.api.CommandPatch('bold');\n\n      /**\n       * Chrome: Executing the bold command inside a heading corrupts the markup.\n       * Disabling for now.\n       */\n      boldCommand.queryEnabled = function () {\n        var selection = new scribe.api.Selection();\n        var headingNode = selection.getContaining(function (node) {\n          return (/^(H[1-6])$/).test(node.nodeName);\n        });\n\n        return scribe.api.CommandPatch.prototype.queryEnabled.apply(this, arguments) && ! headingNode;\n      };\n\n      // TODO: We can't use STRONGs because this would mean we have to\n      // re-implement the `queryState` command, which would be difficult.\n\n      scribe.commandPatches.bold = boldCommand;\n    };\n  };\n\n});\n\n","define('plugins/core/patches/commands/indent',[],function () {\n\n  /**\n   * Prevent Chrome from inserting BLOCKQUOTEs inside of Ps, and also from\n   * adding a redundant `style` attribute to the created BLOCKQUOTE.\n   */\n\n  'use strict';\n\n  var INVISIBLE_CHAR = '\\uFEFF';\n\n  return function () {\n    return function (scribe) {\n      var indentCommand = new scribe.api.CommandPatch('indent');\n\n      indentCommand.execute = function (value) {\n        scribe.transactionManager.run(function () {\n          /**\n           * Chrome: If we apply the indent command on an empty P, the\n           * BLOCKQUOTE will be nested inside the P.\n           * As per: http://jsbin.com/oDOriyU/3/edit?html,js,output\n           */\n          var selection = new scribe.api.Selection();\n          var range = selection.range;\n\n          var isCaretOnNewLine =\n              (range.commonAncestorContainer.nodeName === 'P'\n               && range.commonAncestorContainer.innerHTML === '<br>');\n          if (isCaretOnNewLine) {\n            // FIXME: this text node is left behind. Tidy it up somehow,\n            // or don't use it at all.\n            var textNode = document.createTextNode(INVISIBLE_CHAR);\n\n            range.insertNode(textNode);\n\n            range.setStart(textNode, 0);\n            range.setEnd(textNode, 0);\n\n            selection.selection.removeAllRanges();\n            selection.selection.addRange(range);\n          }\n\n          scribe.api.CommandPatch.prototype.execute.call(this, value);\n\n          /**\n           * Chrome: The BLOCKQUOTE created contains a redundant style attribute.\n           * As per: http://jsbin.com/AkasOzu/1/edit?html,js,output\n           */\n\n          // Renew the selection\n          selection = new scribe.api.Selection();\n          var blockquoteNode = selection.getContaining(function (node) {\n            return node.nodeName === 'BLOCKQUOTE';\n          });\n\n          if (blockquoteNode) {\n            blockquoteNode.removeAttribute('style');\n          }\n        }.bind(this));\n      };\n\n      scribe.commandPatches.indent = indentCommand;\n    };\n  };\n\n});\n\n","define('plugins/core/patches/commands/insert-html',[], function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var insertHTMLCommandPatch = new scribe.api.CommandPatch('insertHTML');\n      var element = scribe.element;\n\n      insertHTMLCommandPatch.execute = function (value) {\n        scribe.transactionManager.run(function () {\n          scribe.api.CommandPatch.prototype.execute.call(this, value);\n\n          /**\n           * Chrome: If a parent node has a CSS `line-height` when we apply the\n           * insertHTML command, Chrome appends a SPAN to plain content with\n           * inline styling replicating that `line-height`, and adjusts the\n           * `line-height` on inline elements.\n           * As per: http://jsbin.com/ilEmudi/4/edit?css,js,output\n           *\n           * FIXME: what if the user actually wants to use SPANs? This could\n           * cause conflicts.\n           */\n\n          // TODO: share somehow with similar event patch for P nodes\n          sanitize(scribe.el);\n\n          function sanitize(parentNode) {\n            var treeWalker = document.createTreeWalker(parentNode, NodeFilter.SHOW_ELEMENT);\n            var node = treeWalker.firstChild();\n            if (!node) { return; }\n\n            do {\n              if (node.nodeName === 'SPAN') {\n                element.unwrap(parentNode, node);\n              } else {\n                /**\n                 * If the list item contains inline elements such as\n                 * A, B, or I, Chrome will also append an inline style for\n                 * `line-height` on those elements, so we remove it here.\n                 */\n                node.style.lineHeight = null;\n\n                // There probably wasn’t a `style` attribute before, so\n                // remove it if it is now empty.\n                if (node.getAttribute('style') === '') {\n                  node.removeAttribute('style');\n                }\n              }\n\n              // Sanitize children\n              sanitize(node);\n            } while ((node = treeWalker.nextSibling()));\n          }\n        }.bind(this));\n      };\n\n      scribe.commandPatches.insertHTML = insertHTMLCommandPatch;\n    };\n  };\n\n});\n\n","define('plugins/core/patches/commands/insert-list',[], function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var element = scribe.element;\n      var nodeHelpers = scribe.node;\n\n      var InsertListCommandPatch = function (commandName) {\n        scribe.api.CommandPatch.call(this, commandName);\n      };\n\n      InsertListCommandPatch.prototype = Object.create(scribe.api.CommandPatch.prototype);\n      InsertListCommandPatch.prototype.constructor = InsertListCommandPatch;\n\n      InsertListCommandPatch.prototype.execute = function (value) {\n        scribe.transactionManager.run(function () {\n          scribe.api.CommandPatch.prototype.execute.call(this, value);\n\n          if (this.queryState()) {\n            var selection = new scribe.api.Selection();\n\n            var listElement = selection.getContaining(function (node) {\n              return node.nodeName === 'OL' || node.nodeName === 'UL';\n            });\n\n\n            /**\n             * Firefox: If we apply the insertOrderedList or the insertUnorderedList\n             * command on an empty block, a P will be inserted after the OL/UL.\n             * As per: http://jsbin.com/cubacoli/3/edit?html,js,output\n             */\n\n            if (listElement.nextElementSibling &&\n                listElement.nextElementSibling.childNodes.length === 0) {\n              nodeHelpers.removeNode(listElement.nextElementSibling);\n            }\n\n            /**\n             * Chrome: If we apply the insertOrderedList or the insertUnorderedList\n             * command on an empty block, the OL/UL will be nested inside the block.\n             * As per: http://jsbin.com/eFiRedUc/1/edit?html,js,output\n             */\n\n            if (listElement) {\n              var listParentNode = listElement.parentNode;\n              // If list is within a text block then split that block\n              if (listParentNode && /^(H[1-6]|P)$/.test(listParentNode.nodeName)) {\n                selection.placeMarkers();\n                // Move listElement out of the block\n                nodeHelpers.insertAfter(listElement, listParentNode);\n                selection.selectMarkers();\n\n                /**\n                 * Chrome 27-34: An empty text node is inserted.\n                 */\n                if (listParentNode.childNodes.length === 2 &&\n                    nodeHelpers.isEmptyTextNode(listParentNode.firstChild)) {\n                  nodeHelpers.removeNode(listParentNode);\n                }\n\n                // Remove the block if it's empty\n                if (listParentNode.childNodes.length === 0) {\n                  nodeHelpers.removeNode(listParentNode);\n                }\n              }\n            }\n\n            /**\n             * Chrome: If a parent node has a CSS `line-height` when we apply the\n             * insertOrderedList or the insertUnorderedList command, Chrome appends\n             * a SPAN to LIs with inline styling replicating that `line-height`.\n             * As per: http://jsbin.com/OtemujAY/7/edit?html,css,js,output\n             *\n             * FIXME: what if the user actually wants to use SPANs? This could\n             * cause conflicts.\n             */\n\n            // TODO: share somehow with similar event patch for P nodes\n            var listItemElements = Array.prototype.slice.call(listElement.childNodes);\n            listItemElements.forEach(function(listItemElement) {\n              // We clone the childNodes into an Array so that it's\n              // not affected by any manipulation below when we\n              // iterate over it\n              var listItemElementChildNodes = Array.prototype.slice.call(listItemElement.childNodes);\n              listItemElementChildNodes.forEach(function(listElementChildNode) {\n                if (listElementChildNode.nodeName === 'SPAN') {\n                  // Unwrap any SPAN that has been inserted\n                  var spanElement = listElementChildNode;\n                  element.unwrap(listItemElement, spanElement);\n                } else if (listElementChildNode.nodeType === Node.ELEMENT_NODE) {\n                  /**\n                   * If the list item contains inline elements such as\n                   * A, B, or I, Chrome will also append an inline style for\n                   * `line-height` on those elements, so we remove it here.\n                   */\n                  listElementChildNode.style.lineHeight = null;\n\n                  // There probably wasn’t a `style` attribute before, so\n                  // remove it if it is now empty.\n                  if (listElementChildNode.getAttribute('style') === '') {\n                    listElementChildNode.removeAttribute('style');\n                  }\n                }\n              });\n            });\n          }\n        }.bind(this));\n      };\n\n      scribe.commandPatches.insertOrderedList = new InsertListCommandPatch('insertOrderedList');\n      scribe.commandPatches.insertUnorderedList = new InsertListCommandPatch('insertUnorderedList');\n    };\n  };\n\n});\n\n","define('plugins/core/patches/commands/outdent',[],function () {\n\n  /**\n   * Prevent Chrome from removing formatting of BLOCKQUOTE contents.\n   */\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var outdentCommand = new scribe.api.CommandPatch('outdent');\n\n      outdentCommand.execute = function () {\n        scribe.transactionManager.run(function () {\n          var selection = new scribe.api.Selection();\n          var range = selection.range;\n\n          var blockquoteNode = selection.getContaining(function (node) {\n            return node.nodeName === 'BLOCKQUOTE';\n          });\n\n          if (range.commonAncestorContainer.nodeName === 'BLOCKQUOTE') {\n            /**\n             * Chrome: Applying the outdent command when a whole BLOCKQUOTE is\n             * selected removes the formatting of its contents.\n             * As per: http://jsbin.com/okAYaHa/1/edit?html,js,output\n             */\n\n            // Insert a copy of the selection before the BLOCKQUOTE, and then\n            // restore the selection on the copy.\n            selection.placeMarkers();\n            // We want to copy the selected nodes *with* the markers\n            selection.selectMarkers(true);\n            var selectedNodes = range.cloneContents();\n            blockquoteNode.parentNode.insertBefore(selectedNodes, blockquoteNode);\n            range.deleteContents();\n            selection.selectMarkers();\n\n            // Delete the BLOCKQUOTE if it's empty\n            if (blockquoteNode.textContent === '') {\n              blockquoteNode.parentNode.removeChild(blockquoteNode);\n            }\n          } else {\n            /**\n             * Chrome: If we apply the outdent command on a P, the contents of the\n             * P will be outdented instead of the whole P element.\n             * As per: http://jsbin.com/IfaRaFO/1/edit?html,js,output\n             */\n\n            var pNode = selection.getContaining(function (node) {\n              return node.nodeName === 'P';\n            });\n\n            if (pNode) {\n              /**\n               * If we are not at the start of end of a BLOCKQUOTE, we have to\n               * split the node and insert the P in the middle.\n               */\n\n              var nextSiblingNodes = (new scribe.api.Node(pNode)).nextAll();\n\n              if (nextSiblingNodes.length) {\n                var newContainerNode = document.createElement(blockquoteNode.nodeName);\n\n                nextSiblingNodes.forEach(function (siblingNode) {\n                  newContainerNode.appendChild(siblingNode);\n                });\n\n                blockquoteNode.parentNode.insertBefore(newContainerNode, blockquoteNode.nextElementSibling);\n              }\n\n              selection.placeMarkers();\n              blockquoteNode.parentNode.insertBefore(pNode, blockquoteNode.nextElementSibling);\n              selection.selectMarkers();\n\n              // If the BLOCKQUOTE is now empty, clean it up.\n              if (blockquoteNode.innerHTML === '') {\n                blockquoteNode.parentNode.removeChild(blockquoteNode);\n              }\n            } else {\n              scribe.api.CommandPatch.prototype.execute.call(this);\n            }\n          }\n        }.bind(this));\n      };\n\n      scribe.commandPatches.outdent = outdentCommand;\n    };\n  };\n\n});\n\n","define('plugins/core/patches/commands/create-link',[],function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var createLinkCommand = new scribe.api.CommandPatch('createLink');\n      scribe.commandPatches.createLink = createLinkCommand;\n\n      createLinkCommand.execute = function (value) {\n        var selection = new scribe.api.Selection();\n\n        /**\n         * Firefox does not create a link when selection is collapsed\n         * so we create it manually. http://jsbin.com/tutufi/2/edit?js,output\n         */\n        if (selection.selection.isCollapsed) {\n          var aElement = document.createElement('a');\n          aElement.setAttribute('href', value);\n          aElement.textContent = value;\n\n          selection.range.insertNode(aElement);\n\n          // Select the created link\n          var newRange = document.createRange();\n          newRange.setStartBefore(aElement);\n          newRange.setEndAfter(aElement);\n\n          selection.selection.removeAllRanges();\n          selection.selection.addRange(newRange);\n        } else {\n          scribe.api.CommandPatch.prototype.execute.call(this, value);\n        }\n      };\n    };\n  };\n\n});\n\n","define('plugins/core/patches/events',[], function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      /**\n       * Chrome: If a parent node has a CSS `line-height` when we apply the\n       * insert(Un)OrderedList command, altering the paragraph structure by pressing\n       * <backspace> or <delete> (merging/deleting paragraphs) sometimes\n       * results in the application of a line-height attribute to the\n       * contents of the paragraph, either onto existing elements or\n       * by wrapping text in a span.\n       * As per: http://jsbin.com/isIdoKA/4/edit?html,css,js,output\n       *\n       * FIXME: what if the user actually wants to use SPANs? This could\n       * cause conflicts.\n       */\n      // TODO: do we need to run this on every key press, or could we\n      //       detect when the issue may have occurred?\n      // TODO: run in a transaction so as to record the change? how do\n      //       we know in advance whether there will be a change though?\n      // TODO: share somehow with `InsertList` command\n\n      var element = scribe.element;\n\n      if (scribe.allowsBlockElements()) {\n        scribe.el.addEventListener('keyup', function (event) {\n          if (event.keyCode === 8 || event.keyCode === 46) { // backspace or delete\n\n            var selection = new scribe.api.Selection();\n\n            // Note: the range is always collapsed on keyup here\n            var containerPElement = selection.getContaining(function (node) {\n              return node.nodeName === 'P';\n            });\n            if (containerPElement) {\n              /**\n               * The 'input' event listener has already triggered\n               * and recorded the faulty content as an item in the\n               * UndoManager.  We interfere with the undoManager\n               * here to discard that history item, and let the next\n               * transaction run produce a clean one instead.\n               *\n               * FIXME: ideally we would not trigger a\n               * 'content-changed' event with faulty HTML at all, but\n               * it's too late to cancel it at this stage (and it's\n               * not happened yet at keydown time).\n               */\n              scribe.undoManager.undo();\n\n              scribe.transactionManager.run(function () {\n                // Store the caret position\n                selection.placeMarkers();\n\n                // We clone the childNodes into an Array so that it's\n                // not affected by any manipulation below when we\n                // iterate over it\n                var pElementChildNodes = Array.prototype.slice.call(containerPElement.childNodes);\n                pElementChildNodes.forEach(function(pElementChildNode) {\n                  if (pElementChildNode.nodeName === 'SPAN') {\n                    // Unwrap any SPAN that has been inserted\n                    var spanElement = pElementChildNode;\n                    element.unwrap(containerPElement, spanElement);\n                  } else if (pElementChildNode.nodeType === Node.ELEMENT_NODE) {\n                    /**\n                     * If the paragraph contains inline elements such as\n                     * A, B, or I, Chrome will also append an inline style for\n                     * `line-height` on those elements, so we remove it here.\n                     */\n                    pElementChildNode.style.lineHeight = null;\n\n                    // There probably wasn’t a `style` attribute before, so\n                    // remove it if it is now empty.\n                    if (pElementChildNode.getAttribute('style') === '') {\n                      pElementChildNode.removeAttribute('style');\n                    }\n                  }\n                });\n\n                selection.selectMarkers();\n              });\n            }\n          }\n        });\n      }\n    };\n  };\n});\n\n","define('plugins/core/patches',[\n  './patches/commands/bold',\n  './patches/commands/indent',\n  './patches/commands/insert-html',\n  './patches/commands/insert-list',\n  './patches/commands/outdent',\n  './patches/commands/create-link',\n  './patches/events'\n], function (\n  boldCommand,\n  indentCommand,\n  insertHTMLCommand,\n  insertListCommands,\n  outdentCommand,\n  createLinkCommand,\n  events\n) {\n\n  /**\n   * Command patches browser inconsistencies. They do not perform core features\n   * of the editor, such as ensuring P elements are created when\n   * applying/unapplying commands — that is the job of the core commands.\n   */\n\n  'use strict';\n\n  return {\n    commands: {\n      bold: boldCommand,\n      indent: indentCommand,\n      insertHTML: insertHTMLCommand,\n      insertList: insertListCommands,\n      outdent: outdentCommand,\n      createLink: createLinkCommand,\n    },\n    events: events\n  };\n\n});\n\n","define('plugins/core/set-root-p-element',[],function () {\n\n  /**\n   * Sets the default content of the scribe so that each carriage return creates\n   * a P.\n   */\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      // The content might have already been set, in which case we don't want\n      // to apply.\n      if (scribe.getHTML().trim() === '') {\n        /**\n         * We have to begin with the following HTML, because otherwise some\n         * browsers(?) will position the caret outside of the P when the scribe is\n         * focused.\n         */\n        scribe.setContent('<p><br></p>');\n      }\n    };\n  };\n\n});\n\n","define('api/command-patch',[],function () {\n\n  'use strict';\n\n  return function (scribe) {\n    function CommandPatch(commandName) {\n      this.commandName = commandName;\n    }\n\n    CommandPatch.prototype.execute = function (value) {\n      scribe.transactionManager.run(function () {\n        document.execCommand(this.commandName, false, value || null);\n      }.bind(this));\n    };\n\n    CommandPatch.prototype.queryState = function () {\n      return document.queryCommandState(this.commandName);\n    };\n\n    CommandPatch.prototype.queryEnabled = function () {\n      return document.queryCommandEnabled(this.commandName);\n    };\n\n    return CommandPatch;\n  };\n\n});\n\n","define('api/command',[],function () {\n\n  'use strict';\n\n  return function (scribe) {\n    function Command(commandName) {\n      this.commandName = commandName;\n      this.patch = scribe.commandPatches[this.commandName];\n    }\n\n    Command.prototype.execute = function (value) {\n      if (this.patch) {\n        this.patch.execute(value);\n      } else {\n        scribe.transactionManager.run(function () {\n          document.execCommand(this.commandName, false, value || null);\n        }.bind(this));\n      }\n    };\n\n    Command.prototype.queryState = function () {\n      if (this.patch) {\n        return this.patch.queryState();\n      } else {\n        return document.queryCommandState(this.commandName);\n      }\n    };\n\n    Command.prototype.queryEnabled = function () {\n      if (this.patch) {\n        return this.patch.queryEnabled();\n      } else {\n        return document.queryCommandEnabled(this.commandName);\n      }\n    };\n\n    return Command;\n  };\n\n});\n\n","define('api/node',[],function () {\n\n  'use strict';\n\n  function Node(node) {\n    this.node = node;\n  }\n\n  // TODO: should the return value be wrapped in one of our APIs?\n  // Node or Selection?\n  // TODO: write tests. unit or integration?\n  Node.prototype.getAncestor = function (nodeFilter) {\n    var isTopContainerElement = function (element) {\n      return element && element.attributes\n        && element.attributes.getNamedItem('contenteditable');\n    };\n    // TODO: should this happen here?\n    if (isTopContainerElement(this.node)) {\n      return;\n    }\n\n    var currentNode = this.node.parentNode;\n\n    // If it's a `contenteditable` then it's likely going to be the Scribe\n    // instance, so stop traversing there.\n    while (currentNode && ! isTopContainerElement(currentNode)) {\n      if (nodeFilter(currentNode)) {\n        return currentNode;\n      }\n      currentNode = currentNode.parentNode;\n    }\n  };\n\n  Node.prototype.nextAll = function () {\n    var all = [];\n    var el = this.node.nextSibling;\n    while (el) {\n      all.push(el);\n      el = el.nextSibling;\n    }\n    return all;\n  };\n\n  return Node;\n\n});\n\n","define('api/selection',[\n  '../element'\n],\nfunction (elementHelper) {\n\n  'use strict';\n\n  return function (scribe) {\n    function Selection() {\n      this.selection = window.getSelection();\n\n      if (this.selection.rangeCount) {\n        this.range = this.selection.getRangeAt(0);\n      }\n    }\n\n    Selection.prototype.getContaining = function (nodeFilter) {\n      var range = this.range;\n      if (!range) { return; }\n\n      var node = new scribe.api.Node(this.range.commonAncestorContainer);\n      var isTopContainerElement = node.node && node.node.attributes\n         && node.node.attributes.getNamedItem('contenteditable');\n\n      return ! isTopContainerElement && nodeFilter(node.node) ? node.node : node.getAncestor(nodeFilter);\n    };\n\n    Selection.prototype.placeMarkers = function () {\n      var range = this.range;\n      if(!range) { return; }\n\n      var startMarker = document.createElement('em');\n      startMarker.classList.add('scribe-marker');\n      var endMarker = document.createElement('em');\n      endMarker.classList.add('scribe-marker');\n\n      // End marker\n      var rangeEnd = this.range.cloneRange();\n      rangeEnd.collapse(false);\n      rangeEnd.insertNode(endMarker);\n\n      /**\n       * Chrome and Firefox: `Range.insertNode` inserts a bogus text node after\n       * the inserted element. We just remove it. This in turn creates several\n       * bugs when perfoming commands on selections that contain an empty text\n       * node (`removeFormat`, `unlink`).\n       * As per: http://jsbin.com/hajim/5/edit?js,console,output\n       */\n      // TODO: abstract into polyfill for `Range.insertNode`\n      if (endMarker.nextSibling &&\n          endMarker.nextSibling.nodeType === Node.TEXT_NODE\n          && endMarker.nextSibling.data === '') {\n        endMarker.parentNode.removeChild(endMarker.nextSibling);\n      }\n\n\n\n      /**\n       * Chrome and Firefox: `Range.insertNode` inserts a bogus text node before\n       * the inserted element when the child element is at the start of a block\n       * element. We just remove it.\n       * FIXME: Document why we need to remove this\n       * As per: http://jsbin.com/sifez/1/edit?js,console,output\n       */\n      if (endMarker.previousSibling &&\n          endMarker.previousSibling.nodeType === Node.TEXT_NODE\n          && endMarker.previousSibling.data === '') {\n        endMarker.parentNode.removeChild(endMarker.previousSibling);\n      }\n\n\n      /**\n       * This is meant to test Chrome inserting erroneous text blocks into\n       * the scribe el when focus switches from a scribe.el to a button to\n       * the scribe.el. However, this is impossible to simlulate correctly\n       * in a test.\n       *\n       * This behaviour does not happen in Firefox.\n       *\n       * See http://jsbin.com/quhin/2/edit?js,output,console\n       *\n       * To reproduce the bug, follow the following steps:\n       *    1. Select text and create H2\n       *    2. Move cursor to front of text.\n       *    3. Remove the H2 by clicking the button\n       *    4. Observe that you are left with an empty H2\n       *        after the element.\n       *\n       * The problem is caused by the Range being different, depending on\n       * the position of the marker.\n       *\n       * Consider the following two scenarios.\n       *\n       * A)\n       *   1. scribe.el contains: [\"1\", <em>scribe-marker</em>]\n       *   2. Click button and click the right of to scribe.el\n       *   3. scribe.el contains: [\"1\", <em>scribe-marker</em>. #text]\n       *\n       *   This is wrong but does not cause the problem.\n       *\n       * B)\n       *   1. scribe.el contains: [\"1\", <em>scribe-marker</em>]\n       *   2. Click button and click to left of scribe.el\n       *   3. scribe.el contains: [#text, <em>scribe-marker</em>, \"1\"]\n       *\n       * The second example sets the range in the wrong place, meaning\n       * that in the second case the formatBlock is executed on the wrong\n       * element [the text node] leaving the empty H2 behind.\n       **/\n\n\n      if (! this.selection.isCollapsed) {\n        // Start marker\n        var rangeStart = this.range.cloneRange();\n        rangeStart.collapse(true);\n        rangeStart.insertNode(startMarker);\n\n        /**\n         * Chrome and Firefox: `Range.insertNode` inserts a bogus text node after\n         * the inserted element. We just remove it. This in turn creates several\n         * bugs when perfoming commands on selections that contain an empty text\n         * node (`removeFormat`, `unlink`).\n         * As per: http://jsbin.com/hajim/5/edit?js,console,output\n         */\n        // TODO: abstract into polyfill for `Range.insertNode`\n        if (startMarker.nextSibling &&\n            startMarker.nextSibling.nodeType === Node.TEXT_NODE\n            && startMarker.nextSibling.data === '') {\n          startMarker.parentNode.removeChild(startMarker.nextSibling);\n        }\n\n        /**\n         * Chrome and Firefox: `Range.insertNode` inserts a bogus text node\n         * before the inserted element when the child element is at the start of\n         * a block element. We just remove it.\n         * FIXME: Document why we need to remove this\n         * As per: http://jsbin.com/sifez/1/edit?js,console,output\n         */\n        if (startMarker.previousSibling &&\n            startMarker.previousSibling.nodeType === Node.TEXT_NODE\n            && startMarker.previousSibling.data === '') {\n          startMarker.parentNode.removeChild(startMarker.previousSibling);\n        }\n      }\n\n\n      this.selection.removeAllRanges();\n      this.selection.addRange(this.range);\n    };\n\n    Selection.prototype.getMarkers = function () {\n      return scribe.el.querySelectorAll('em.scribe-marker');\n    };\n\n    Selection.prototype.removeMarkers = function () {\n      var markers = this.getMarkers();\n      Array.prototype.forEach.call(markers, function (marker) {\n        marker.parentNode.removeChild(marker);\n      });\n    };\n\n    // This will select markers if there are any. You will need to focus the\n    // Scribe instance’s element if it is not already for the selection to\n    // become active.\n    Selection.prototype.selectMarkers = function (keepMarkers) {\n      var markers = this.getMarkers();\n      if (!markers.length) {\n        return;\n      }\n\n      var newRange = document.createRange();\n\n      newRange.setStartBefore(markers[0]);\n      if (markers.length >= 2) {\n        newRange.setEndAfter(markers[1]);\n      } else {\n        // We always reset the end marker because otherwise it will just\n        // use the current range’s end marker.\n        newRange.setEndAfter(markers[0]);\n      }\n\n      if (! keepMarkers) {\n        this.removeMarkers();\n      }\n\n      this.selection.removeAllRanges();\n      this.selection.addRange(newRange);\n    };\n\n    Selection.prototype.isCaretOnNewLine = function () {\n      // return true if nested inline tags ultimately just contain <br> or \"\"\n      function isEmptyInlineElement(node) {\n\n        var treeWalker = document.createTreeWalker(node, NodeFilter.SHOW_ELEMENT);\n\n        var currentNode = treeWalker.root;\n\n        while(currentNode) {\n          var numberOfChildren = currentNode.childNodes.length;\n\n          // forks in the tree or text mean no new line\n          if (numberOfChildren > 1 ||\n              (numberOfChildren === 1 && currentNode.textContent.trim() !== ''))\n            return false;\n\n          if (numberOfChildren === 0) {\n            return currentNode.textContent.trim() === '';\n          }\n\n          currentNode = treeWalker.nextNode();\n        };\n      };\n\n      var containerPElement = this.getContaining(function (node) {\n        return node.nodeName === 'P';\n      });\n      if (containerPElement) {\n        return isEmptyInlineElement(containerPElement);\n      } else {\n        return false;\n      }\n    };\n\n    return Selection;\n  };\n\n});\n\n","define('api/simple-command',[],function () {\n\n  'use strict';\n\n  return function (api, scribe) {\n    function SimpleCommand(commandName, nodeName) {\n      scribe.api.Command.call(this, commandName);\n\n      this.nodeName = nodeName;\n    }\n\n    SimpleCommand.prototype = Object.create(api.Command.prototype);\n    SimpleCommand.prototype.constructor = SimpleCommand;\n\n    SimpleCommand.prototype.queryState = function () {\n      var selection = new scribe.api.Selection();\n      return scribe.api.Command.prototype.queryState.call(this) && !! selection.getContaining(function (node) {\n        return node.nodeName === this.nodeName;\n      }.bind(this));\n    };\n\n    return SimpleCommand;\n  };\n\n});\n\n","define('api',[\n  './api/command-patch',\n  './api/command',\n  './api/node',\n  './api/selection',\n  './api/simple-command'\n], function (\n  buildCommandPatch,\n  buildCommand,\n  Node,\n  buildSelection,\n  buildSimpleCommand\n) {\n\n  'use strict';\n\n  return function Api(scribe) {\n    this.CommandPatch = buildCommandPatch(scribe);\n    this.Command = buildCommand(scribe);\n    this.Node = Node;\n    this.Selection = buildSelection(scribe);\n    this.SimpleCommand = buildSimpleCommand(this, scribe);\n  };\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/assign',['../internals/baseCreateCallback', './keys', '../internals/objectTypes'], function(baseCreateCallback, keys, objectTypes) {\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object. Subsequent sources will overwrite property assignments of previous\n   * sources. If a callback is provided it will be executed to produce the\n   * assigned values. The callback is bound to `thisArg` and invoked with two\n   * arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @alias extend\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {...Object} [source] The source objects.\n   * @param {Function} [callback] The function to customize assigning values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n   * // => { 'name': 'fred', 'employer': 'slate' }\n   *\n   * var defaults = _.partialRight(_.assign, function(a, b) {\n   *   return typeof a == 'undefined' ? b : a;\n   * });\n   *\n   * var object = { 'name': 'barney' };\n   * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n   * // => { 'name': 'barney', 'employer': 'slate' }\n   */\n  var assign = function(object, source, guard) {\n    var index, iterable = object, result = iterable;\n    if (!iterable) return result;\n    var args = arguments,\n        argsIndex = 0,\n        argsLength = typeof guard == 'number' ? 2 : args.length;\n    if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\n      var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\n    } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\n      callback = args[--argsLength];\n    }\n    while (++argsIndex < argsLength) {\n      iterable = args[argsIndex];\n      if (iterable && objectTypes[typeof iterable]) {\n      var ownIndex = -1,\n          ownProps = objectTypes[typeof iterable] && keys(iterable),\n          length = ownProps ? ownProps.length : 0;\n\n      while (++ownIndex < length) {\n        index = ownProps[ownIndex];\n        result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];\n      }\n      }\n    }\n    return result\n  };\n\n  return assign;\n});\n\n","define('transaction-manager',['lodash-amd/modern/objects/assign'], function (assign) {\n\n  'use strict';\n\n  return function (scribe) {\n    function TransactionManager() {\n      this.history = [];\n    }\n\n    assign(TransactionManager.prototype, {\n      start: function () {\n        this.history.push(1);\n      },\n\n      end: function () {\n        this.history.pop();\n\n        if (this.history.length === 0) {\n          scribe.pushHistory();\n          scribe.trigger('content-changed');\n        }\n      },\n\n      run: function (transaction) {\n        this.start();\n        // If there is an error, don't prevent the transaction from ending.\n        try {\n          if (transaction) {\n            transaction();\n          }\n        } finally {\n          this.end();\n        }\n      }\n    });\n\n    return TransactionManager;\n  };\n});\n\n","define('undo-manager',[],function () {\n\n  'use strict';\n\n  return function (scribe) {\n\n    function UndoManager() {\n      this.position = -1;\n      this.stack = [];\n      this.debug = scribe.isDebugModeEnabled();\n    }\n\n    UndoManager.prototype.maxStackSize = 100;\n\n    UndoManager.prototype.push = function (item) {\n      if (this.debug) {\n        console.log('UndoManager.push: %s', item);\n      }\n      this.stack.length = ++this.position;\n      this.stack.push(item);\n\n      while (this.stack.length > this.maxStackSize) {\n        this.stack.shift();\n        --this.position;\n      }\n    };\n\n    UndoManager.prototype.undo = function () {\n      if (this.position > 0) {\n        return this.stack[--this.position];\n      }\n    };\n\n    UndoManager.prototype.redo = function () {\n      if (this.position < (this.stack.length - 1)) {\n        return this.stack[++this.position];\n      }\n    };\n\n    return UndoManager;\n  };\n\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/arrays/pull',[], function() {\n\n  /**\n   * Used for `Array` method references.\n   *\n   * Normally `Array.prototype` would suffice, however, using an array literal\n   * avoids issues in Narwhal.\n   */\n  var arrayRef = [];\n\n  /** Native method shortcuts */\n  var splice = arrayRef.splice;\n\n  /**\n   * Removes all provided values from the given array using strict equality for\n   * comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to modify.\n   * @param {...*} [value] The values to remove.\n   * @returns {Array} Returns `array`.\n   * @example\n   *\n   * var array = [1, 2, 3, 1, 2, 3];\n   * _.pull(array, 2, 3);\n   * console.log(array);\n   * // => [1, 1]\n   */\n  function pull(array) {\n    var args = arguments,\n        argsIndex = 0,\n        argsLength = args.length,\n        length = array ? array.length : 0;\n\n    while (++argsIndex < argsLength) {\n      var index = -1,\n          value = args[argsIndex];\n      while (++index < length) {\n        if (array[index] === value) {\n          splice.call(array, index--, 1);\n          length--;\n        }\n      }\n    }\n    return array;\n  }\n\n  return pull;\n});\n\n","define('event-emitter',['lodash-amd/modern/arrays/pull'], function (pull) {\n\n  'use strict';\n\n  // TODO: once\n  // TODO: unit test\n  // Good example of a complete(?) implementation: https://github.com/Wolfy87/EventEmitter\n  function EventEmitter() {\n    this._listeners = {};\n  }\n\n  EventEmitter.prototype.on = function (eventName, fn) {\n    var listeners = this._listeners[eventName] || [];\n\n    listeners.push(fn);\n\n    this._listeners[eventName] = listeners;\n  };\n\n  EventEmitter.prototype.off = function (eventName, fn) {\n    var listeners = this._listeners[eventName] || [];\n    if (fn) {\n      pull(listeners, fn);\n    } else {\n      delete this._listeners[eventName];\n    }\n  };\n\n  EventEmitter.prototype.trigger = function (eventName, args) {\n    var listeners = this._listeners[eventName] || [];\n\n    listeners.forEach(function (listener) {\n      listener.apply(null, args);\n    });\n  };\n\n  return EventEmitter;\n\n});\n\n","/**\n *  Copyright (c) 2014, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\nfunction universalModule() {\n  var $Object = Object;\n\nfunction createClass(ctor, methods, staticMethods, superClass) {\n  var proto;\n  if (superClass) {\n    var superProto = superClass.prototype;\n    proto = $Object.create(superProto);\n  } else {\n    proto = ctor.prototype;\n  }\n  $Object.keys(methods).forEach(function (key) {\n    proto[key] = methods[key];\n  });\n  $Object.keys(staticMethods).forEach(function (key) {\n    ctor[key] = staticMethods[key];\n  });\n  proto.constructor = ctor;\n  ctor.prototype = proto;\n  return ctor;\n}\n\nfunction superCall(self, proto, name, args) {\n  return $Object.getPrototypeOf(proto)[name].apply(self, args);\n}\n\nfunction defaultSuperCall(self, proto, args) {\n  superCall(self, proto, 'constructor', args);\n}\n\nvar $traceurRuntime = {};\n$traceurRuntime.createClass = createClass;\n$traceurRuntime.superCall = superCall;\n$traceurRuntime.defaultSuperCall = defaultSuperCall;\n\"use strict\";\nfunction is(first, second) {\n  if (first === second) {\n    return first !== 0 || second !== 0 || 1 / first === 1 / second;\n  }\n  if (first !== first) {\n    return second !== second;\n  }\n  if (first && typeof first.equals === 'function') {\n    return first.equals(second);\n  }\n  return false;\n}\nfunction invariant(condition, error) {\n  if (!condition)\n    throw new Error(error);\n}\nvar DELETE = 'delete';\nvar SHIFT = 5;\nvar SIZE = 1 << SHIFT;\nvar MASK = SIZE - 1;\nvar NOT_SET = {};\nvar CHANGE_LENGTH = {value: false};\nvar DID_ALTER = {value: false};\nfunction MakeRef(ref) {\n  ref.value = false;\n  return ref;\n}\nfunction SetRef(ref) {\n  ref && (ref.value = true);\n}\nfunction OwnerID() {}\nfunction arrCopy(arr, offset) {\n  offset = offset || 0;\n  var len = Math.max(0, arr.length - offset);\n  var newArr = new Array(len);\n  for (var ii = 0; ii < len; ii++) {\n    newArr[ii] = arr[ii + offset];\n  }\n  return newArr;\n}\nfunction assertNotInfinite(size) {\n  invariant(size !== Infinity, 'Cannot perform this action with an infinite size.');\n}\nfunction ensureSize(iter) {\n  if (iter.size === undefined) {\n    iter.size = iter.__iterate(returnTrue);\n  }\n  return iter.size;\n}\nfunction wrapIndex(iter, index) {\n  return index >= 0 ? (+index) : ensureSize(iter) + (+index);\n}\nfunction returnTrue() {\n  return true;\n}\nfunction wholeSlice(begin, end, size) {\n  return (begin === 0 || (size !== undefined && begin <= -size)) && (end === undefined || (size !== undefined && end >= size));\n}\nfunction resolveBegin(begin, size) {\n  return resolveIndex(begin, size, 0);\n}\nfunction resolveEnd(end, size) {\n  return resolveIndex(end, size, size);\n}\nfunction resolveIndex(index, size, defaultIndex) {\n  return index === undefined ? defaultIndex : index < 0 ? Math.max(0, size + index) : size === undefined ? index : Math.min(size, index);\n}\nfunction hash(o) {\n  if (!o) {\n    return 0;\n  }\n  if (o === true) {\n    return 1;\n  }\n  var type = typeof o;\n  if (type === 'number') {\n    if ((o | 0) === o) {\n      return o & HASH_MAX_VAL;\n    }\n    o = '' + o;\n    type = 'string';\n  }\n  if (type === 'string') {\n    return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n  }\n  if (o.hashCode) {\n    return hash(typeof o.hashCode === 'function' ? o.hashCode() : o.hashCode);\n  }\n  return hashJSObj(o);\n}\nfunction cachedHashString(string) {\n  var hash = stringHashCache[string];\n  if (hash === undefined) {\n    hash = hashString(string);\n    if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n      STRING_HASH_CACHE_SIZE = 0;\n      stringHashCache = {};\n    }\n    STRING_HASH_CACHE_SIZE++;\n    stringHashCache[string] = hash;\n  }\n  return hash;\n}\nfunction hashString(string) {\n  var hash = 0;\n  for (var ii = 0; ii < string.length; ii++) {\n    hash = (31 * hash + string.charCodeAt(ii)) & HASH_MAX_VAL;\n  }\n  return hash;\n}\nfunction hashJSObj(obj) {\n  var hash = weakMap && weakMap.get(obj);\n  if (hash)\n    return hash;\n  hash = obj[UID_HASH_KEY];\n  if (hash)\n    return hash;\n  if (!canDefineProperty) {\n    hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n    if (hash)\n      return hash;\n    hash = getIENodeHash(obj);\n    if (hash)\n      return hash;\n  }\n  if (Object.isExtensible && !Object.isExtensible(obj)) {\n    throw new Error('Non-extensible objects are not allowed as keys.');\n  }\n  hash = ++objHashUID & HASH_MAX_VAL;\n  if (weakMap) {\n    weakMap.set(obj, hash);\n  } else if (canDefineProperty) {\n    Object.defineProperty(obj, UID_HASH_KEY, {\n      'enumerable': false,\n      'configurable': false,\n      'writable': false,\n      'value': hash\n    });\n  } else if (obj.propertyIsEnumerable && obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n    obj.propertyIsEnumerable = function() {\n      return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n    };\n    obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n  } else if (obj.nodeType) {\n    obj[UID_HASH_KEY] = hash;\n  } else {\n    throw new Error('Unable to set a non-enumerable property on object.');\n  }\n  return hash;\n}\nvar canDefineProperty = (function() {\n  try {\n    Object.defineProperty({}, 'x', {});\n    return true;\n  } catch (e) {\n    return false;\n  }\n}());\nfunction getIENodeHash(node) {\n  if (node && node.nodeType > 0) {\n    switch (node.nodeType) {\n      case 1:\n        return node.uniqueID;\n      case 9:\n        return node.documentElement && node.documentElement.uniqueID;\n    }\n  }\n}\nvar weakMap = typeof WeakMap === 'function' && new WeakMap();\nvar HASH_MAX_VAL = 0x7FFFFFFF;\nvar objHashUID = 0;\nvar UID_HASH_KEY = '__immutablehash__';\nif (typeof Symbol === 'function') {\n  UID_HASH_KEY = Symbol(UID_HASH_KEY);\n}\nvar STRING_HASH_CACHE_MIN_STRLEN = 16;\nvar STRING_HASH_CACHE_MAX_SIZE = 255;\nvar STRING_HASH_CACHE_SIZE = 0;\nvar stringHashCache = {};\nvar ITERATE_KEYS = 0;\nvar ITERATE_VALUES = 1;\nvar ITERATE_ENTRIES = 2;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nvar REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\nvar Iterator = function Iterator(next) {\n  this.next = next;\n};\n($traceurRuntime.createClass)(Iterator, {toString: function() {\n    return '[Iterator]';\n  }}, {});\nIterator.KEYS = ITERATE_KEYS;\nIterator.VALUES = ITERATE_VALUES;\nIterator.ENTRIES = ITERATE_ENTRIES;\nvar IteratorPrototype = Iterator.prototype;\nIteratorPrototype.inspect = IteratorPrototype.toSource = function() {\n  return this.toString();\n};\nIteratorPrototype[ITERATOR_SYMBOL] = function() {\n  return this;\n};\nfunction iteratorValue(type, k, v, iteratorResult) {\n  var value = type === 0 ? k : type === 1 ? v : [k, v];\n  iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n    value: value,\n    done: false\n  });\n  return iteratorResult;\n}\nfunction iteratorDone() {\n  return {\n    value: undefined,\n    done: true\n  };\n}\nfunction hasIterator(maybeIterable) {\n  return !!_iteratorFn(maybeIterable);\n}\nfunction isIterator(maybeIterator) {\n  return maybeIterator && typeof maybeIterator.next === 'function';\n}\nfunction getIterator(iterable) {\n  var iteratorFn = _iteratorFn(iterable);\n  return iteratorFn && iteratorFn.call(iterable);\n}\nfunction _iteratorFn(iterable) {\n  var iteratorFn = iterable && ((REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) || iterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\nvar Iterable = function Iterable(value) {\n  return isIterable(value) ? value : Seq(value);\n};\nvar $Iterable = Iterable;\n($traceurRuntime.createClass)(Iterable, {\n  toArray: function() {\n    assertNotInfinite(this.size);\n    var array = new Array(this.size || 0);\n    this.valueSeq().__iterate((function(v, i) {\n      array[i] = v;\n    }));\n    return array;\n  },\n  toIndexedSeq: function() {\n    return new ToIndexedSequence(this);\n  },\n  toJS: function() {\n    return this.toSeq().map((function(value) {\n      return value && typeof value.toJS === 'function' ? value.toJS() : value;\n    })).__toJS();\n  },\n  toKeyedSeq: function() {\n    return new ToKeyedSequence(this, true);\n  },\n  toMap: function() {\n    assertNotInfinite(this.size);\n    return Map(this.toKeyedSeq());\n  },\n  toObject: function() {\n    assertNotInfinite(this.size);\n    var object = {};\n    this.__iterate((function(v, k) {\n      object[k] = v;\n    }));\n    return object;\n  },\n  toOrderedMap: function() {\n    assertNotInfinite(this.size);\n    return OrderedMap(this.toKeyedSeq());\n  },\n  toOrderedSet: function() {\n    assertNotInfinite(this.size);\n    return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n  },\n  toSet: function() {\n    assertNotInfinite(this.size);\n    return Set(isKeyed(this) ? this.valueSeq() : this);\n  },\n  toSetSeq: function() {\n    return new ToSetSequence(this);\n  },\n  toSeq: function() {\n    return isIndexed(this) ? this.toIndexedSeq() : isKeyed(this) ? this.toKeyedSeq() : this.toSetSeq();\n  },\n  toStack: function() {\n    assertNotInfinite(this.size);\n    return Stack(isKeyed(this) ? this.valueSeq() : this);\n  },\n  toList: function() {\n    assertNotInfinite(this.size);\n    return List(isKeyed(this) ? this.valueSeq() : this);\n  },\n  toString: function() {\n    return '[Iterable]';\n  },\n  __toString: function(head, tail) {\n    if (this.size === 0) {\n      return head + tail;\n    }\n    return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n  },\n  concat: function() {\n    for (var values = [],\n        $__2 = 0; $__2 < arguments.length; $__2++)\n      values[$__2] = arguments[$__2];\n    return reify(this, concatFactory(this, values));\n  },\n  contains: function(searchValue) {\n    return this.some((function(value) {\n      return is(value, searchValue);\n    }));\n  },\n  entries: function() {\n    return this.__iterator(ITERATE_ENTRIES);\n  },\n  every: function(predicate, context) {\n    var returnValue = true;\n    this.__iterate((function(v, k, c) {\n      if (!predicate.call(context, v, k, c)) {\n        returnValue = false;\n        return false;\n      }\n    }));\n    return returnValue;\n  },\n  filter: function(predicate, context) {\n    return reify(this, filterFactory(this, predicate, context, true));\n  },\n  find: function(predicate, context, notSetValue) {\n    var foundValue = notSetValue;\n    this.__iterate((function(v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        foundValue = v;\n        return false;\n      }\n    }));\n    return foundValue;\n  },\n  forEach: function(sideEffect, context) {\n    return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n  },\n  join: function(separator) {\n    separator = separator !== undefined ? '' + separator : ',';\n    var joined = '';\n    var isFirst = true;\n    this.__iterate((function(v) {\n      isFirst ? (isFirst = false) : (joined += separator);\n      joined += v !== null && v !== undefined ? v : '';\n    }));\n    return joined;\n  },\n  keys: function() {\n    return this.__iterator(ITERATE_KEYS);\n  },\n  map: function(mapper, context) {\n    return reify(this, mapFactory(this, mapper, context));\n  },\n  reduce: function(reducer, initialReduction, context) {\n    var reduction;\n    var useFirst;\n    if (arguments.length < 2) {\n      useFirst = true;\n    } else {\n      reduction = initialReduction;\n    }\n    this.__iterate((function(v, k, c) {\n      if (useFirst) {\n        useFirst = false;\n        reduction = v;\n      } else {\n        reduction = reducer.call(context, reduction, v, k, c);\n      }\n    }));\n    return reduction;\n  },\n  reduceRight: function(reducer, initialReduction, context) {\n    var reversed = this.toKeyedSeq().reverse();\n    return reversed.reduce.apply(reversed, arguments);\n  },\n  reverse: function() {\n    return reify(this, reverseFactory(this, true));\n  },\n  slice: function(begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    var resolvedBegin = resolveBegin(begin, this.size);\n    var resolvedEnd = resolveEnd(end, this.size);\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return this.toSeq().cacheResult().slice(begin, end);\n    }\n    var skipped = resolvedBegin === 0 ? this : this.skip(resolvedBegin);\n    return reify(this, resolvedEnd === undefined || resolvedEnd === this.size ? skipped : skipped.take(resolvedEnd - resolvedBegin));\n  },\n  some: function(predicate, context) {\n    return !this.every(not(predicate), context);\n  },\n  sort: function(comparator) {\n    return reify(this, sortFactory(this, comparator));\n  },\n  values: function() {\n    return this.__iterator(ITERATE_VALUES);\n  },\n  butLast: function() {\n    return this.slice(0, -1);\n  },\n  count: function(predicate, context) {\n    return ensureSize(predicate ? this.toSeq().filter(predicate, context) : this);\n  },\n  countBy: function(grouper, context) {\n    return countByFactory(this, grouper, context);\n  },\n  equals: function(other) {\n    if (this === other) {\n      return true;\n    }\n    if (!other || typeof other.equals !== 'function') {\n      return false;\n    }\n    if (this.size !== undefined && other.size !== undefined) {\n      if (this.size !== other.size) {\n        return false;\n      }\n      if (this.size === 0 && other.size === 0) {\n        return true;\n      }\n    }\n    if (this.__hash !== undefined && other.__hash !== undefined && this.__hash !== other.__hash) {\n      return false;\n    }\n    return this.__deepEquals(other);\n  },\n  __deepEquals: function(other) {\n    return deepEqual(this, other);\n  },\n  entrySeq: function() {\n    var iterable = this;\n    if (iterable._cache) {\n      return new ArraySeq(iterable._cache);\n    }\n    var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n    entriesSequence.fromEntrySeq = (function() {\n      return iterable.toSeq();\n    });\n    return entriesSequence;\n  },\n  filterNot: function(predicate, context) {\n    return this.filter(not(predicate), context);\n  },\n  findLast: function(predicate, context, notSetValue) {\n    return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n  },\n  first: function() {\n    return this.find(returnTrue);\n  },\n  flatMap: function(mapper, context) {\n    return reify(this, flatMapFactory(this, mapper, context));\n  },\n  flatten: function(depth) {\n    return reify(this, flattenFactory(this, depth, true));\n  },\n  fromEntrySeq: function() {\n    return new FromEntriesSequence(this);\n  },\n  get: function(searchKey, notSetValue) {\n    return this.find((function(_, key) {\n      return is(key, searchKey);\n    }), undefined, notSetValue);\n  },\n  getIn: function(searchKeyPath, notSetValue) {\n    var nested = this;\n    if (searchKeyPath) {\n      for (var ii = 0; ii < searchKeyPath.length; ii++) {\n        nested = nested && nested.get ? nested.get(searchKeyPath[ii], NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n    }\n    return nested;\n  },\n  groupBy: function(grouper, context) {\n    return groupByFactory(this, grouper, context);\n  },\n  has: function(searchKey) {\n    return this.get(searchKey, NOT_SET) !== NOT_SET;\n  },\n  isSubset: function(iter) {\n    iter = typeof iter.contains === 'function' ? iter : $Iterable(iter);\n    return this.every((function(value) {\n      return iter.contains(value);\n    }));\n  },\n  isSuperset: function(iter) {\n    return iter.isSubset(this);\n  },\n  keySeq: function() {\n    return this.toSeq().map(keyMapper).toIndexedSeq();\n  },\n  last: function() {\n    return this.toSeq().reverse().first();\n  },\n  max: function(comparator) {\n    return maxFactory(this, comparator);\n  },\n  maxBy: function(mapper, comparator) {\n    return maxFactory(this, comparator, mapper);\n  },\n  min: function(comparator) {\n    return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n  },\n  minBy: function(mapper, comparator) {\n    return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n  },\n  rest: function() {\n    return this.slice(1);\n  },\n  skip: function(amount) {\n    return reify(this, skipFactory(this, amount, true));\n  },\n  skipLast: function(amount) {\n    return reify(this, this.toSeq().reverse().skip(amount).reverse());\n  },\n  skipWhile: function(predicate, context) {\n    return reify(this, skipWhileFactory(this, predicate, context, true));\n  },\n  skipUntil: function(predicate, context) {\n    return this.skipWhile(not(predicate), context);\n  },\n  sortBy: function(mapper, comparator) {\n    return reify(this, sortFactory(this, comparator, mapper));\n  },\n  take: function(amount) {\n    return reify(this, takeFactory(this, amount));\n  },\n  takeLast: function(amount) {\n    return reify(this, this.toSeq().reverse().take(amount).reverse());\n  },\n  takeWhile: function(predicate, context) {\n    return reify(this, takeWhileFactory(this, predicate, context));\n  },\n  takeUntil: function(predicate, context) {\n    return this.takeWhile(not(predicate), context);\n  },\n  valueSeq: function() {\n    return this.toIndexedSeq();\n  },\n  hashCode: function() {\n    return this.__hash || (this.__hash = this.size === Infinity ? 0 : this.reduce((function(h, v, k) {\n      return (h + (hash(v) ^ (v === k ? 0 : hash(k)))) & HASH_MAX_VAL;\n    }), 0));\n  }\n}, {});\nvar IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\nvar IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\nvar IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\nvar IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\nvar IterablePrototype = Iterable.prototype;\nIterablePrototype[IS_ITERABLE_SENTINEL] = true;\nIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\nIterablePrototype.toJSON = IterablePrototype.toJS;\nIterablePrototype.__toJS = IterablePrototype.toArray;\nIterablePrototype.__toStringMapper = quoteString;\nIterablePrototype.inspect = IterablePrototype.toSource = function() {\n  return this.toString();\n};\nIterablePrototype.chain = IterablePrototype.flatMap;\n(function() {\n  try {\n    Object.defineProperty(IterablePrototype, 'length', {get: function() {\n        if (!Iterable.noLengthWarning) {\n          var stack;\n          try {\n            throw new Error();\n          } catch (error) {\n            stack = error.stack;\n          }\n          if (stack.indexOf('_wrapObject') === -1) {\n            console && console.warn && console.warn('iterable.length has been deprecated, ' + 'use iterable.size or iterable.count(). ' + 'This warning will become a silent error in a future version. ' + stack);\n            return this.size;\n          }\n        }\n      }});\n  } catch (e) {}\n})();\nvar KeyedIterable = function KeyedIterable(value) {\n  return isKeyed(value) ? value : KeyedSeq(value);\n};\n($traceurRuntime.createClass)(KeyedIterable, {\n  flip: function() {\n    return reify(this, flipFactory(this));\n  },\n  findKey: function(predicate, context) {\n    var foundKey;\n    this.__iterate((function(v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        foundKey = k;\n        return false;\n      }\n    }));\n    return foundKey;\n  },\n  findLastKey: function(predicate, context) {\n    return this.toSeq().reverse().findKey(predicate, context);\n  },\n  keyOf: function(searchValue) {\n    return this.findKey((function(value) {\n      return is(value, searchValue);\n    }));\n  },\n  lastKeyOf: function(searchValue) {\n    return this.toSeq().reverse().keyOf(searchValue);\n  },\n  mapEntries: function(mapper, context) {\n    var $__0 = this;\n    var iterations = 0;\n    return reify(this, this.toSeq().map((function(v, k) {\n      return mapper.call(context, [k, v], iterations++, $__0);\n    })).fromEntrySeq());\n  },\n  mapKeys: function(mapper, context) {\n    var $__0 = this;\n    return reify(this, this.toSeq().flip().map((function(k, v) {\n      return mapper.call(context, k, v, $__0);\n    })).flip());\n  }\n}, {}, Iterable);\nvar KeyedIterablePrototype = KeyedIterable.prototype;\nKeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\nKeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\nKeyedIterablePrototype.__toJS = IterablePrototype.toObject;\nKeyedIterablePrototype.__toStringMapper = (function(v, k) {\n  return k + ': ' + quoteString(v);\n});\nvar IndexedIterable = function IndexedIterable(value) {\n  return isIndexed(value) ? value : IndexedSeq(value);\n};\n($traceurRuntime.createClass)(IndexedIterable, {\n  toKeyedSeq: function() {\n    return new ToKeyedSequence(this, false);\n  },\n  filter: function(predicate, context) {\n    return reify(this, filterFactory(this, predicate, context, false));\n  },\n  findIndex: function(predicate, context) {\n    var key = this.toKeyedSeq().findKey(predicate, context);\n    return key === undefined ? -1 : key;\n  },\n  indexOf: function(searchValue) {\n    var key = this.toKeyedSeq().keyOf(searchValue);\n    return key === undefined ? -1 : key;\n  },\n  lastIndexOf: function(searchValue) {\n    var key = this.toKeyedSeq().lastKeyOf(searchValue);\n    return key === undefined ? -1 : key;\n  },\n  reverse: function() {\n    return reify(this, reverseFactory(this, false));\n  },\n  splice: function(index, removeNum) {\n    var numArgs = arguments.length;\n    removeNum = Math.max(removeNum | 0, 0);\n    if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n      return this;\n    }\n    index = resolveBegin(index, this.size);\n    var spliced = this.slice(0, index);\n    return reify(this, numArgs === 1 ? spliced : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum)));\n  },\n  findLastIndex: function(predicate, context) {\n    var key = this.toKeyedSeq().findLastKey(predicate, context);\n    return key === undefined ? -1 : key;\n  },\n  first: function() {\n    return this.get(0);\n  },\n  flatten: function(depth) {\n    return reify(this, flattenFactory(this, depth, false));\n  },\n  get: function(index, notSetValue) {\n    index = wrapIndex(this, index);\n    return (index < 0 || (this.size === Infinity || (this.size !== undefined && index > this.size))) ? notSetValue : this.find((function(_, key) {\n      return key === index;\n    }), undefined, notSetValue);\n  },\n  has: function(index) {\n    index = wrapIndex(this, index);\n    return index >= 0 && (this.size !== undefined ? this.size === Infinity || index < this.size : this.indexOf(index) !== -1);\n  },\n  interpose: function(separator) {\n    return reify(this, interposeFactory(this, separator));\n  },\n  last: function() {\n    return this.get(-1);\n  },\n  skip: function(amount) {\n    var iter = this;\n    var skipSeq = skipFactory(iter, amount, false);\n    if (isSeq(iter) && skipSeq !== iter) {\n      skipSeq.get = function(index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 ? iter.get(index + amount, notSetValue) : notSetValue;\n      };\n    }\n    return reify(this, skipSeq);\n  },\n  skipWhile: function(predicate, context) {\n    return reify(this, skipWhileFactory(this, predicate, context, false));\n  },\n  take: function(amount) {\n    var iter = this;\n    var takeSeq = takeFactory(iter, amount);\n    if (isSeq(iter) && takeSeq !== iter) {\n      takeSeq.get = function(index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < amount ? iter.get(index, notSetValue) : notSetValue;\n      };\n    }\n    return reify(this, takeSeq);\n  }\n}, {}, Iterable);\nIndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\nIndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\nvar SetIterable = function SetIterable(value) {\n  return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n};\n($traceurRuntime.createClass)(SetIterable, {\n  get: function(value, notSetValue) {\n    return this.has(value) ? value : notSetValue;\n  },\n  contains: function(value) {\n    return this.has(value);\n  },\n  keySeq: function() {\n    return this.valueSeq();\n  }\n}, {}, Iterable);\nSetIterable.prototype.has = IterablePrototype.contains;\nfunction isIterable(maybeIterable) {\n  return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n}\nfunction isKeyed(maybeKeyed) {\n  return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n}\nfunction isIndexed(maybeIndexed) {\n  return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n}\nfunction isAssociative(maybeAssociative) {\n  return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n}\nfunction isOrdered(maybeOrdered) {\n  return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n}\nIterable.isIterable = isIterable;\nIterable.isKeyed = isKeyed;\nIterable.isIndexed = isIndexed;\nIterable.isAssociative = isAssociative;\nIterable.isOrdered = isOrdered;\nIterable.Keyed = KeyedIterable;\nIterable.Indexed = IndexedIterable;\nIterable.Set = SetIterable;\nIterable.Iterator = Iterator;\nfunction keyMapper(v, k) {\n  return k;\n}\nfunction entryMapper(v, k) {\n  return [k, v];\n}\nfunction not(predicate) {\n  return function() {\n    return !predicate.apply(this, arguments);\n  };\n}\nfunction neg(predicate) {\n  return function() {\n    return -predicate.apply(this, arguments);\n  };\n}\nfunction quoteString(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : value;\n}\nfunction defaultNegComparator(a, b) {\n  return a > b ? -1 : a < b ? 1 : 0;\n}\nfunction deepEqual(a, b) {\n  var bothNotAssociative = !isAssociative(a) && !isAssociative(b);\n  if (isOrdered(a)) {\n    if (!isOrdered(b)) {\n      return false;\n    }\n    var entries = a.entries();\n    return b.every((function(v, k) {\n      var entry = entries.next().value;\n      return entry && is(entry[1], v) && (bothNotAssociative || is(entry[0], k));\n    })) && entries.next().done;\n  }\n  var flipped = false;\n  if (a.size === undefined) {\n    if (b.size === undefined) {\n      a.cacheResult();\n    } else {\n      flipped = true;\n      var _ = a;\n      a = b;\n      b = _;\n    }\n  }\n  var allEqual = true;\n  var bSize = b.__iterate((function(v, k) {\n    if (bothNotAssociative ? !a.has(v) : flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n      allEqual = false;\n      return false;\n    }\n  }));\n  return allEqual && a.size === bSize;\n}\nfunction mixin(ctor, methods) {\n  var proto = ctor.prototype;\n  var keyCopier = (function(key) {\n    proto[key] = methods[key];\n  });\n  Object.keys(methods).forEach(keyCopier);\n  Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n  return ctor;\n}\nvar Seq = function Seq(value) {\n  return value === null || value === undefined ? emptySequence() : isIterable(value) ? value.toSeq() : seqFromValue(value);\n};\nvar $Seq = Seq;\n($traceurRuntime.createClass)(Seq, {\n  toSeq: function() {\n    return this;\n  },\n  toString: function() {\n    return this.__toString('Seq {', '}');\n  },\n  cacheResult: function() {\n    if (!this._cache && this.__iterateUncached) {\n      this._cache = this.entrySeq().toArray();\n      this.size = this._cache.length;\n    }\n    return this;\n  },\n  __iterate: function(fn, reverse) {\n    return seqIterate(this, fn, reverse, true);\n  },\n  __iterator: function(type, reverse) {\n    return seqIterator(this, type, reverse, true);\n  }\n}, {of: function() {\n    return $Seq(arguments);\n  }}, Iterable);\nvar KeyedSeq = function KeyedSeq(value) {\n  return value === null || value === undefined ? emptySequence().toKeyedSeq() : isIterable(value) ? (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) : keyedSeqFromValue(value);\n};\nvar $KeyedSeq = KeyedSeq;\n($traceurRuntime.createClass)(KeyedSeq, {\n  toKeyedSeq: function() {\n    return this;\n  },\n  toSeq: function() {\n    return this;\n  }\n}, {of: function() {\n    return $KeyedSeq(arguments);\n  }}, Seq);\nmixin(KeyedSeq, KeyedIterable.prototype);\nvar IndexedSeq = function IndexedSeq(value) {\n  return value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n};\nvar $IndexedSeq = IndexedSeq;\n($traceurRuntime.createClass)(IndexedSeq, {\n  toIndexedSeq: function() {\n    return this;\n  },\n  toString: function() {\n    return this.__toString('Seq [', ']');\n  },\n  __iterate: function(fn, reverse) {\n    return seqIterate(this, fn, reverse, false);\n  },\n  __iterator: function(type, reverse) {\n    return seqIterator(this, type, reverse, false);\n  }\n}, {of: function() {\n    return $IndexedSeq(arguments);\n  }}, Seq);\nmixin(IndexedSeq, IndexedIterable.prototype);\nvar SetSeq = function SetSeq(value) {\n  return (value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value).toSetSeq();\n};\nvar $SetSeq = SetSeq;\n($traceurRuntime.createClass)(SetSeq, {toSetSeq: function() {\n    return this;\n  }}, {of: function() {\n    return $SetSeq(arguments);\n  }}, Seq);\nmixin(SetSeq, SetIterable.prototype);\nSeq.isSeq = isSeq;\nSeq.Keyed = KeyedSeq;\nSeq.Set = SetSeq;\nSeq.Indexed = IndexedSeq;\nvar IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\nSeq.prototype[IS_SEQ_SENTINEL] = true;\nvar ArraySeq = function ArraySeq(array) {\n  this._array = array;\n  this.size = array.length;\n};\n($traceurRuntime.createClass)(ArraySeq, {\n  get: function(index, notSetValue) {\n    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n  },\n  __iterate: function(fn, reverse) {\n    var array = this._array;\n    var maxIndex = array.length - 1;\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n        return ii + 1;\n      }\n    }\n    return ii;\n  },\n  __iterator: function(type, reverse) {\n    var array = this._array;\n    var maxIndex = array.length - 1;\n    var ii = 0;\n    return new Iterator((function() {\n      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++]);\n    }));\n  }\n}, {}, IndexedSeq);\nvar ObjectSeq = function ObjectSeq(object) {\n  var keys = Object.keys(object);\n  this._object = object;\n  this._keys = keys;\n  this.size = keys.length;\n};\n($traceurRuntime.createClass)(ObjectSeq, {\n  get: function(key, notSetValue) {\n    if (notSetValue !== undefined && !this.has(key)) {\n      return notSetValue;\n    }\n    return this._object[key];\n  },\n  has: function(key) {\n    return this._object.hasOwnProperty(key);\n  },\n  __iterate: function(fn, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var maxIndex = keys.length - 1;\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      var key = keys[reverse ? maxIndex - ii : ii];\n      if (fn(object[key], key, this) === false) {\n        return ii + 1;\n      }\n    }\n    return ii;\n  },\n  __iterator: function(type, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var maxIndex = keys.length - 1;\n    var ii = 0;\n    return new Iterator((function() {\n      var key = keys[reverse ? maxIndex - ii : ii];\n      return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, key, object[key]);\n    }));\n  }\n}, {}, KeyedSeq);\nObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\nvar IterableSeq = function IterableSeq(iterable) {\n  this._iterable = iterable;\n  this.size = iterable.length || iterable.size;\n};\n($traceurRuntime.createClass)(IterableSeq, {\n  __iterateUncached: function(fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterable = this._iterable;\n    var iterator = getIterator(iterable);\n    var iterations = 0;\n    if (isIterator(iterator)) {\n      var step;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n    }\n    return iterations;\n  },\n  __iteratorUncached: function(type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterable = this._iterable;\n    var iterator = getIterator(iterable);\n    if (!isIterator(iterator)) {\n      return new Iterator(iteratorDone);\n    }\n    var iterations = 0;\n    return new Iterator((function() {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value);\n    }));\n  }\n}, {}, IndexedSeq);\nvar IteratorSeq = function IteratorSeq(iterator) {\n  this._iterator = iterator;\n  this._iteratorCache = [];\n};\n($traceurRuntime.createClass)(IteratorSeq, {\n  __iterateUncached: function(fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterator = this._iterator;\n    var cache = this._iteratorCache;\n    var iterations = 0;\n    while (iterations < cache.length) {\n      if (fn(cache[iterations], iterations++, this) === false) {\n        return iterations;\n      }\n    }\n    var step;\n    while (!(step = iterator.next()).done) {\n      var val = step.value;\n      cache[iterations] = val;\n      if (fn(val, iterations++, this) === false) {\n        break;\n      }\n    }\n    return iterations;\n  },\n  __iteratorUncached: function(type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = this._iterator;\n    var cache = this._iteratorCache;\n    var iterations = 0;\n    return new Iterator((function() {\n      if (iterations >= cache.length) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        cache[iterations] = step.value;\n      }\n      return iteratorValue(type, iterations, cache[iterations++]);\n    }));\n  }\n}, {}, IndexedSeq);\nfunction isSeq(maybeSeq) {\n  return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n}\nvar EMPTY_SEQ;\nfunction emptySequence() {\n  return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n}\nfunction keyedSeqFromValue(value) {\n  var seq = Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() : isIterator(value) ? new IteratorSeq(value).fromEntrySeq() : hasIterator(value) ? new IterableSeq(value).fromEntrySeq() : typeof value === 'object' ? new ObjectSeq(value) : undefined;\n  if (!seq) {\n    throw new TypeError('Expected Array or iterable object of [k, v] entries, ' + 'or keyed object: ' + value);\n  }\n  return seq;\n}\nfunction indexedSeqFromValue(value) {\n  var seq = maybeIndexedSeqFromValue(value);\n  if (!seq) {\n    throw new TypeError('Expected Array or iterable object of values: ' + value);\n  }\n  return seq;\n}\nfunction seqFromValue(value) {\n  var seq = maybeIndexedSeqFromValue(value) || (typeof value === 'object' && new ObjectSeq(value));\n  if (!seq) {\n    throw new TypeError('Expected Array or iterable object of values, or keyed object: ' + value);\n  }\n  return seq;\n}\nfunction maybeIndexedSeqFromValue(value) {\n  return (isArrayLike(value) ? new ArraySeq(value) : isIterator(value) ? new IteratorSeq(value) : hasIterator(value) ? new IterableSeq(value) : undefined);\n}\nfunction isArrayLike(value) {\n  return value && typeof value.length === 'number';\n}\nfunction seqIterate(seq, fn, reverse, useKeys) {\n  assertNotInfinite(seq.size);\n  var cache = seq._cache;\n  if (cache) {\n    var maxIndex = cache.length - 1;\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      var entry = cache[reverse ? maxIndex - ii : ii];\n      if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n        return ii + 1;\n      }\n    }\n    return ii;\n  }\n  return seq.__iterateUncached(fn, reverse);\n}\nfunction seqIterator(seq, type, reverse, useKeys) {\n  var cache = seq._cache;\n  if (cache) {\n    var maxIndex = cache.length - 1;\n    var ii = 0;\n    return new Iterator((function() {\n      var entry = cache[reverse ? maxIndex - ii : ii];\n      return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n    }));\n  }\n  return seq.__iteratorUncached(type, reverse);\n}\nfunction fromJS(json, converter) {\n  return converter ? _fromJSWith(converter, json, '', {'': json}) : _fromJSDefault(json);\n}\nfunction _fromJSWith(converter, json, key, parentJSON) {\n  if (Array.isArray(json)) {\n    return converter.call(parentJSON, key, IndexedSeq(json).map((function(v, k) {\n      return _fromJSWith(converter, v, k, json);\n    })));\n  }\n  if (isPlainObj(json)) {\n    return converter.call(parentJSON, key, KeyedSeq(json).map((function(v, k) {\n      return _fromJSWith(converter, v, k, json);\n    })));\n  }\n  return json;\n}\nfunction _fromJSDefault(json) {\n  if (Array.isArray(json)) {\n    return IndexedSeq(json).map(_fromJSDefault).toList();\n  }\n  if (isPlainObj(json)) {\n    return KeyedSeq(json).map(_fromJSDefault).toMap();\n  }\n  return json;\n}\nfunction isPlainObj(value) {\n  return value && value.constructor === Object;\n}\nvar Collection = function Collection() {\n  throw TypeError('Abstract');\n};\n($traceurRuntime.createClass)(Collection, {}, {}, Iterable);\nvar KeyedCollection = function KeyedCollection() {\n  $traceurRuntime.defaultSuperCall(this, $KeyedCollection.prototype, arguments);\n};\nvar $KeyedCollection = KeyedCollection;\n($traceurRuntime.createClass)(KeyedCollection, {}, {}, Collection);\nmixin(KeyedCollection, KeyedIterable.prototype);\nvar IndexedCollection = function IndexedCollection() {\n  $traceurRuntime.defaultSuperCall(this, $IndexedCollection.prototype, arguments);\n};\nvar $IndexedCollection = IndexedCollection;\n($traceurRuntime.createClass)(IndexedCollection, {}, {}, Collection);\nmixin(IndexedCollection, IndexedIterable.prototype);\nvar SetCollection = function SetCollection() {\n  $traceurRuntime.defaultSuperCall(this, $SetCollection.prototype, arguments);\n};\nvar $SetCollection = SetCollection;\n($traceurRuntime.createClass)(SetCollection, {}, {}, Collection);\nmixin(SetCollection, SetIterable.prototype);\nCollection.Keyed = KeyedCollection;\nCollection.Indexed = IndexedCollection;\nCollection.Set = SetCollection;\nvar Map = function Map(value) {\n  return value === null || value === undefined ? emptyMap() : isMap(value) ? value : emptyMap().merge(KeyedIterable(value));\n};\n($traceurRuntime.createClass)(Map, {\n  toString: function() {\n    return this.__toString('Map {', '}');\n  },\n  get: function(k, notSetValue) {\n    return this._root ? this._root.get(0, undefined, k, notSetValue) : notSetValue;\n  },\n  set: function(k, v) {\n    return updateMap(this, k, v);\n  },\n  setIn: function(keyPath, v) {\n    invariant(keyPath.length > 0, 'Requires non-empty key path.');\n    return this.updateIn(keyPath, (function() {\n      return v;\n    }));\n  },\n  remove: function(k) {\n    return updateMap(this, k, NOT_SET);\n  },\n  removeIn: function(keyPath) {\n    invariant(keyPath.length > 0, 'Requires non-empty key path.');\n    return this.updateIn(keyPath, (function() {\n      return NOT_SET;\n    }));\n  },\n  update: function(k, notSetValue, updater) {\n    return arguments.length === 1 ? k(this) : this.updateIn([k], notSetValue, updater);\n  },\n  updateIn: function(keyPath, notSetValue, updater) {\n    if (!updater) {\n      updater = notSetValue;\n      notSetValue = undefined;\n    }\n    return keyPath.length === 0 ? updater(this) : updateInDeepMap(this, keyPath, notSetValue, updater, 0);\n  },\n  clear: function() {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._root = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyMap();\n  },\n  merge: function() {\n    return mergeIntoMapWith(this, undefined, arguments);\n  },\n  mergeWith: function(merger) {\n    for (var iters = [],\n        $__3 = 1; $__3 < arguments.length; $__3++)\n      iters[$__3 - 1] = arguments[$__3];\n    return mergeIntoMapWith(this, merger, iters);\n  },\n  mergeDeep: function() {\n    return mergeIntoMapWith(this, deepMerger(undefined), arguments);\n  },\n  mergeDeepWith: function(merger) {\n    for (var iters = [],\n        $__4 = 1; $__4 < arguments.length; $__4++)\n      iters[$__4 - 1] = arguments[$__4];\n    return mergeIntoMapWith(this, deepMerger(merger), iters);\n  },\n  sort: function(comparator) {\n    return OrderedMap(sortFactory(this, comparator));\n  },\n  sortBy: function(mapper, comparator) {\n    return OrderedMap(sortFactory(this, comparator, mapper));\n  },\n  withMutations: function(fn) {\n    var mutable = this.asMutable();\n    fn(mutable);\n    return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n  },\n  asMutable: function() {\n    return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n  },\n  asImmutable: function() {\n    return this.__ensureOwner();\n  },\n  wasAltered: function() {\n    return this.__altered;\n  },\n  __iterator: function(type, reverse) {\n    return new MapIterator(this, type, reverse);\n  },\n  __iterate: function(fn, reverse) {\n    var $__0 = this;\n    var iterations = 0;\n    this._root && this._root.iterate((function(entry) {\n      iterations++;\n      return fn(entry[1], entry[0], $__0);\n    }), reverse);\n    return iterations;\n  },\n  __ensureOwner: function(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeMap(this.size, this._root, ownerID, this.__hash);\n  }\n}, {}, KeyedCollection);\nfunction isMap(maybeMap) {\n  return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n}\nMap.isMap = isMap;\nvar IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\nvar MapPrototype = Map.prototype;\nMapPrototype[IS_MAP_SENTINEL] = true;\nMapPrototype[DELETE] = MapPrototype.remove;\nvar ArrayMapNode = function ArrayMapNode(ownerID, entries) {\n  this.ownerID = ownerID;\n  this.entries = entries;\n};\nvar $ArrayMapNode = ArrayMapNode;\n($traceurRuntime.createClass)(ArrayMapNode, {\n  get: function(shift, keyHash, key, notSetValue) {\n    var entries = this.entries;\n    for (var ii = 0,\n        len = entries.length; ii < len; ii++) {\n      if (is(key, entries[ii][0])) {\n        return entries[ii][1];\n      }\n    }\n    return notSetValue;\n  },\n  update: function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    var removed = value === NOT_SET;\n    var entries = this.entries;\n    var idx = 0;\n    for (var len = entries.length; idx < len; idx++) {\n      if (is(key, entries[idx][0])) {\n        break;\n      }\n    }\n    var exists = idx < len;\n    if (exists ? entries[idx][1] === value : removed) {\n      return this;\n    }\n    SetRef(didAlter);\n    (removed || !exists) && SetRef(didChangeSize);\n    if (removed && entries.length === 1) {\n      return;\n    }\n    if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n      return createNodes(ownerID, entries, key, value);\n    }\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newEntries = isEditable ? entries : arrCopy(entries);\n    if (exists) {\n      if (removed) {\n        idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n      } else {\n        newEntries[idx] = [key, value];\n      }\n    } else {\n      newEntries.push([key, value]);\n    }\n    if (isEditable) {\n      this.entries = newEntries;\n      return this;\n    }\n    return new $ArrayMapNode(ownerID, newEntries);\n  }\n}, {});\nvar BitmapIndexedNode = function BitmapIndexedNode(ownerID, bitmap, nodes) {\n  this.ownerID = ownerID;\n  this.bitmap = bitmap;\n  this.nodes = nodes;\n};\nvar $BitmapIndexedNode = BitmapIndexedNode;\n($traceurRuntime.createClass)(BitmapIndexedNode, {\n  get: function(shift, keyHash, key, notSetValue) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n    var bitmap = this.bitmap;\n    return (bitmap & bit) === 0 ? notSetValue : this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n  },\n  update: function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var bit = 1 << keyHashFrag;\n    var bitmap = this.bitmap;\n    var exists = (bitmap & bit) !== 0;\n    if (!exists && value === NOT_SET) {\n      return this;\n    }\n    var idx = popCount(bitmap & (bit - 1));\n    var nodes = this.nodes;\n    var node = exists ? nodes[idx] : undefined;\n    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n    if (newNode === node) {\n      return this;\n    }\n    if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n      return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n    }\n    if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n      return nodes[idx ^ 1];\n    }\n    if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n      return newNode;\n    }\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n    var newNodes = exists ? newNode ? setIn(nodes, idx, newNode, isEditable) : spliceOut(nodes, idx, isEditable) : spliceIn(nodes, idx, newNode, isEditable);\n    if (isEditable) {\n      this.bitmap = newBitmap;\n      this.nodes = newNodes;\n      return this;\n    }\n    return new $BitmapIndexedNode(ownerID, newBitmap, newNodes);\n  }\n}, {});\nvar HashArrayMapNode = function HashArrayMapNode(ownerID, count, nodes) {\n  this.ownerID = ownerID;\n  this.count = count;\n  this.nodes = nodes;\n};\nvar $HashArrayMapNode = HashArrayMapNode;\n($traceurRuntime.createClass)(HashArrayMapNode, {\n  get: function(shift, keyHash, key, notSetValue) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var node = this.nodes[idx];\n    return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n  },\n  update: function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var removed = value === NOT_SET;\n    var nodes = this.nodes;\n    var node = nodes[idx];\n    if (removed && !node) {\n      return this;\n    }\n    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n    if (newNode === node) {\n      return this;\n    }\n    var newCount = this.count;\n    if (!node) {\n      newCount++;\n    } else if (!newNode) {\n      newCount--;\n      if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n        return packNodes(ownerID, nodes, newCount, idx);\n      }\n    }\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newNodes = setIn(nodes, idx, newNode, isEditable);\n    if (isEditable) {\n      this.count = newCount;\n      this.nodes = newNodes;\n      return this;\n    }\n    return new $HashArrayMapNode(ownerID, newCount, newNodes);\n  }\n}, {});\nvar HashCollisionNode = function HashCollisionNode(ownerID, keyHash, entries) {\n  this.ownerID = ownerID;\n  this.keyHash = keyHash;\n  this.entries = entries;\n};\nvar $HashCollisionNode = HashCollisionNode;\n($traceurRuntime.createClass)(HashCollisionNode, {\n  get: function(shift, keyHash, key, notSetValue) {\n    var entries = this.entries;\n    for (var ii = 0,\n        len = entries.length; ii < len; ii++) {\n      if (is(key, entries[ii][0])) {\n        return entries[ii][1];\n      }\n    }\n    return notSetValue;\n  },\n  update: function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var removed = value === NOT_SET;\n    if (keyHash !== this.keyHash) {\n      if (removed) {\n        return this;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n    }\n    var entries = this.entries;\n    var idx = 0;\n    for (var len = entries.length; idx < len; idx++) {\n      if (is(key, entries[idx][0])) {\n        break;\n      }\n    }\n    var exists = idx < len;\n    if (exists ? entries[idx][1] === value : removed) {\n      return this;\n    }\n    SetRef(didAlter);\n    (removed || !exists) && SetRef(didChangeSize);\n    if (removed && len === 2) {\n      return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n    }\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newEntries = isEditable ? entries : arrCopy(entries);\n    if (exists) {\n      if (removed) {\n        idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n      } else {\n        newEntries[idx] = [key, value];\n      }\n    } else {\n      newEntries.push([key, value]);\n    }\n    if (isEditable) {\n      this.entries = newEntries;\n      return this;\n    }\n    return new $HashCollisionNode(ownerID, this.keyHash, newEntries);\n  }\n}, {});\nvar ValueNode = function ValueNode(ownerID, keyHash, entry) {\n  this.ownerID = ownerID;\n  this.keyHash = keyHash;\n  this.entry = entry;\n};\nvar $ValueNode = ValueNode;\n($traceurRuntime.createClass)(ValueNode, {\n  get: function(shift, keyHash, key, notSetValue) {\n    return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n  },\n  update: function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    var removed = value === NOT_SET;\n    var keyMatch = is(key, this.entry[0]);\n    if (keyMatch ? value === this.entry[1] : removed) {\n      return this;\n    }\n    SetRef(didAlter);\n    if (removed) {\n      SetRef(didChangeSize);\n      return;\n    }\n    if (keyMatch) {\n      if (ownerID && ownerID === this.ownerID) {\n        this.entry[1] = value;\n        return this;\n      }\n      return new $ValueNode(ownerID, this.keyHash, [key, value]);\n    }\n    SetRef(didChangeSize);\n    return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n  }\n}, {});\nArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function(fn, reverse) {\n  var entries = this.entries;\n  for (var ii = 0,\n      maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n    if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n      return false;\n    }\n  }\n};\nBitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function(fn, reverse) {\n  var nodes = this.nodes;\n  for (var ii = 0,\n      maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n    var node = nodes[reverse ? maxIndex - ii : ii];\n    if (node && node.iterate(fn, reverse) === false) {\n      return false;\n    }\n  }\n};\nValueNode.prototype.iterate = function(fn, reverse) {\n  return fn(this.entry);\n};\nvar MapIterator = function MapIterator(map, type, reverse) {\n  this._type = type;\n  this._reverse = reverse;\n  this._stack = map._root && mapIteratorFrame(map._root);\n};\n($traceurRuntime.createClass)(MapIterator, {next: function() {\n    var type = this._type;\n    var stack = this._stack;\n    while (stack) {\n      var node = stack.node;\n      var index = stack.index++;\n      var maxIndex;\n      if (node.entry) {\n        if (index === 0) {\n          return mapIteratorValue(type, node.entry);\n        }\n      } else if (node.entries) {\n        maxIndex = node.entries.length - 1;\n        if (index <= maxIndex) {\n          return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n        }\n      } else {\n        maxIndex = node.nodes.length - 1;\n        if (index <= maxIndex) {\n          var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n          if (subNode) {\n            if (subNode.entry) {\n              return mapIteratorValue(type, subNode.entry);\n            }\n            stack = this._stack = mapIteratorFrame(subNode, stack);\n          }\n          continue;\n        }\n      }\n      stack = this._stack = this._stack.__prev;\n    }\n    return iteratorDone();\n  }}, {}, Iterator);\nfunction mapIteratorValue(type, entry) {\n  return iteratorValue(type, entry[0], entry[1]);\n}\nfunction mapIteratorFrame(node, prev) {\n  return {\n    node: node,\n    index: 0,\n    __prev: prev\n  };\n}\nfunction makeMap(size, root, ownerID, hash) {\n  var map = Object.create(MapPrototype);\n  map.size = size;\n  map._root = root;\n  map.__ownerID = ownerID;\n  map.__hash = hash;\n  map.__altered = false;\n  return map;\n}\nvar EMPTY_MAP;\nfunction emptyMap() {\n  return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n}\nfunction updateMap(map, k, v) {\n  var newRoot;\n  var newSize;\n  if (!map._root) {\n    if (v === NOT_SET) {\n      return map;\n    }\n    newSize = 1;\n    newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n  } else {\n    var didChangeSize = MakeRef(CHANGE_LENGTH);\n    var didAlter = MakeRef(DID_ALTER);\n    newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n    if (!didAlter.value) {\n      return map;\n    }\n    newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n  }\n  if (map.__ownerID) {\n    map.size = newSize;\n    map._root = newRoot;\n    map.__hash = undefined;\n    map.__altered = true;\n    return map;\n  }\n  return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n}\nfunction updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (!node) {\n    if (value === NOT_SET) {\n      return node;\n    }\n    SetRef(didAlter);\n    SetRef(didChangeSize);\n    return new ValueNode(ownerID, keyHash, [key, value]);\n  }\n  return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n}\nfunction isLeafNode(node) {\n  return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n}\nfunction mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n  if (node.keyHash === keyHash) {\n    return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n  }\n  var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n  var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var newNode;\n  var nodes = idx1 === idx2 ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] : ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n  return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n}\nfunction createNodes(ownerID, entries, key, value) {\n  if (!ownerID) {\n    ownerID = new OwnerID();\n  }\n  var node = new ValueNode(ownerID, hash(key), [key, value]);\n  for (var ii = 0; ii < entries.length; ii++) {\n    var entry = entries[ii];\n    node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n  }\n  return node;\n}\nfunction packNodes(ownerID, nodes, count, excluding) {\n  var bitmap = 0;\n  var packedII = 0;\n  var packedNodes = new Array(count);\n  for (var ii = 0,\n      bit = 1,\n      len = nodes.length; ii < len; ii++, bit <<= 1) {\n    var node = nodes[ii];\n    if (node !== undefined && ii !== excluding) {\n      bitmap |= bit;\n      packedNodes[packedII++] = node;\n    }\n  }\n  return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n}\nfunction expandNodes(ownerID, nodes, bitmap, including, node) {\n  var count = 0;\n  var expandedNodes = new Array(SIZE);\n  for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n    expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n  }\n  expandedNodes[including] = node;\n  return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n}\nfunction mergeIntoMapWith(map, merger, iterables) {\n  var iters = [];\n  for (var ii = 0; ii < iterables.length; ii++) {\n    var value = iterables[ii];\n    var iter = KeyedIterable(value);\n    if (!isIterable(value)) {\n      iter = iter.map((function(v) {\n        return fromJS(v);\n      }));\n    }\n    iters.push(iter);\n  }\n  return mergeIntoCollectionWith(map, merger, iters);\n}\nfunction deepMerger(merger) {\n  return (function(existing, value) {\n    return existing && existing.mergeDeepWith && isIterable(value) ? existing.mergeDeepWith(merger, value) : merger ? merger(existing, value) : value;\n  });\n}\nfunction mergeIntoCollectionWith(collection, merger, iters) {\n  if (iters.length === 0) {\n    return collection;\n  }\n  return collection.withMutations((function(collection) {\n    var mergeIntoMap = merger ? (function(value, key) {\n      collection.update(key, NOT_SET, (function(existing) {\n        return existing === NOT_SET ? value : merger(existing, value);\n      }));\n    }) : (function(value, key) {\n      collection.set(key, value);\n    });\n    for (var ii = 0; ii < iters.length; ii++) {\n      iters[ii].forEach(mergeIntoMap);\n    }\n  }));\n}\nfunction updateInDeepMap(collection, keyPath, notSetValue, updater, offset) {\n  invariant(!collection || collection.set, 'updateIn with invalid keyPath');\n  var key = keyPath[offset];\n  var existing = collection ? collection.get(key, NOT_SET) : NOT_SET;\n  var existingValue = existing === NOT_SET ? undefined : existing;\n  var value = offset === keyPath.length - 1 ? updater(existing === NOT_SET ? notSetValue : existing) : updateInDeepMap(existingValue, keyPath, notSetValue, updater, offset + 1);\n  return value === existingValue ? collection : value === NOT_SET ? collection && collection.remove(key) : (collection || emptyMap()).set(key, value);\n}\nfunction popCount(x) {\n  x = x - ((x >> 1) & 0x55555555);\n  x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n  x = (x + (x >> 4)) & 0x0f0f0f0f;\n  x = x + (x >> 8);\n  x = x + (x >> 16);\n  return x & 0x7f;\n}\nfunction setIn(array, idx, val, canEdit) {\n  var newArray = canEdit ? array : arrCopy(array);\n  newArray[idx] = val;\n  return newArray;\n}\nfunction spliceIn(array, idx, val, canEdit) {\n  var newLen = array.length + 1;\n  if (canEdit && idx + 1 === newLen) {\n    array[idx] = val;\n    return array;\n  }\n  var newArray = new Array(newLen);\n  var after = 0;\n  for (var ii = 0; ii < newLen; ii++) {\n    if (ii === idx) {\n      newArray[ii] = val;\n      after = -1;\n    } else {\n      newArray[ii] = array[ii + after];\n    }\n  }\n  return newArray;\n}\nfunction spliceOut(array, idx, canEdit) {\n  var newLen = array.length - 1;\n  if (canEdit && idx === newLen) {\n    array.pop();\n    return array;\n  }\n  var newArray = new Array(newLen);\n  var after = 0;\n  for (var ii = 0; ii < newLen; ii++) {\n    if (ii === idx) {\n      after = 1;\n    }\n    newArray[ii] = array[ii + after];\n  }\n  return newArray;\n}\nvar MAX_ARRAY_MAP_SIZE = SIZE / 4;\nvar MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\nvar MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\nvar ToKeyedSequence = function ToKeyedSequence(indexed, useKeys) {\n  this._iter = indexed;\n  this._useKeys = useKeys;\n  this.size = indexed.size;\n};\n($traceurRuntime.createClass)(ToKeyedSequence, {\n  get: function(key, notSetValue) {\n    return this._iter.get(key, notSetValue);\n  },\n  has: function(key) {\n    return this._iter.has(key);\n  },\n  valueSeq: function() {\n    return this._iter.valueSeq();\n  },\n  reverse: function() {\n    var $__0 = this;\n    var reversedSequence = reverseFactory(this, true);\n    if (!this._useKeys) {\n      reversedSequence.valueSeq = (function() {\n        return $__0._iter.toSeq().reverse();\n      });\n    }\n    return reversedSequence;\n  },\n  map: function(mapper, context) {\n    var $__0 = this;\n    var mappedSequence = mapFactory(this, mapper, context);\n    if (!this._useKeys) {\n      mappedSequence.valueSeq = (function() {\n        return $__0._iter.toSeq().map(mapper, context);\n      });\n    }\n    return mappedSequence;\n  },\n  __iterate: function(fn, reverse) {\n    var $__0 = this;\n    var ii;\n    return this._iter.__iterate(this._useKeys ? (function(v, k) {\n      return fn(v, k, $__0);\n    }) : ((ii = reverse ? resolveSize(this) : 0), (function(v) {\n      return fn(v, reverse ? --ii : ii++, $__0);\n    })), reverse);\n  },\n  __iterator: function(type, reverse) {\n    if (this._useKeys) {\n      return this._iter.__iterator(type, reverse);\n    }\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    var ii = reverse ? resolveSize(this) : 0;\n    return new Iterator((function() {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n    }));\n  }\n}, {}, KeyedSeq);\nToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\nvar ToIndexedSequence = function ToIndexedSequence(iter) {\n  this._iter = iter;\n  this.size = iter.size;\n};\n($traceurRuntime.createClass)(ToIndexedSequence, {\n  contains: function(value) {\n    return this._iter.contains(value);\n  },\n  __iterate: function(fn, reverse) {\n    var $__0 = this;\n    var iterations = 0;\n    return this._iter.__iterate((function(v) {\n      return fn(v, iterations++, $__0);\n    }), reverse);\n  },\n  __iterator: function(type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    var iterations = 0;\n    return new Iterator((function() {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value, step);\n    }));\n  }\n}, {}, IndexedSeq);\nvar ToSetSequence = function ToSetSequence(iter) {\n  this._iter = iter;\n  this.size = iter.size;\n};\n($traceurRuntime.createClass)(ToSetSequence, {\n  has: function(key) {\n    return this._iter.contains(key);\n  },\n  __iterate: function(fn, reverse) {\n    var $__0 = this;\n    return this._iter.__iterate((function(v) {\n      return fn(v, v, $__0);\n    }), reverse);\n  },\n  __iterator: function(type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator((function() {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, step.value, step.value, step);\n    }));\n  }\n}, {}, SetSeq);\nvar FromEntriesSequence = function FromEntriesSequence(entries) {\n  this._iter = entries;\n  this.size = entries.size;\n};\n($traceurRuntime.createClass)(FromEntriesSequence, {\n  entrySeq: function() {\n    return this._iter.toSeq();\n  },\n  __iterate: function(fn, reverse) {\n    var $__0 = this;\n    return this._iter.__iterate((function(entry) {\n      if (entry) {\n        validateEntry(entry);\n        return fn(entry[1], entry[0], $__0);\n      }\n    }), reverse);\n  },\n  __iterator: function(type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator((function() {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        if (entry) {\n          validateEntry(entry);\n          return type === ITERATE_ENTRIES ? step : iteratorValue(type, entry[0], entry[1], step);\n        }\n      }\n    }));\n  }\n}, {}, KeyedSeq);\nToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;\nfunction flipFactory(iterable) {\n  var flipSequence = makeSequence(iterable);\n  flipSequence._iter = iterable;\n  flipSequence.size = iterable.size;\n  flipSequence.flip = (function() {\n    return iterable;\n  });\n  flipSequence.reverse = function() {\n    var reversedSequence = iterable.reverse.apply(this);\n    reversedSequence.flip = (function() {\n      return iterable.reverse();\n    });\n    return reversedSequence;\n  };\n  flipSequence.has = (function(key) {\n    return iterable.contains(key);\n  });\n  flipSequence.contains = (function(key) {\n    return iterable.has(key);\n  });\n  flipSequence.cacheResult = cacheResultThrough;\n  flipSequence.__iterateUncached = function(fn, reverse) {\n    var $__0 = this;\n    return iterable.__iterate((function(v, k) {\n      return fn(k, v, $__0) !== false;\n    }), reverse);\n  };\n  flipSequence.__iteratorUncached = function(type, reverse) {\n    if (type === ITERATE_ENTRIES) {\n      var iterator = iterable.__iterator(type, reverse);\n      return new Iterator((function() {\n        var step = iterator.next();\n        if (!step.done) {\n          var k = step.value[0];\n          step.value[0] = step.value[1];\n          step.value[1] = k;\n        }\n        return step;\n      }));\n    }\n    return iterable.__iterator(type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES, reverse);\n  };\n  return flipSequence;\n}\nfunction mapFactory(iterable, mapper, context) {\n  var mappedSequence = makeSequence(iterable);\n  mappedSequence.size = iterable.size;\n  mappedSequence.has = (function(key) {\n    return iterable.has(key);\n  });\n  mappedSequence.get = (function(key, notSetValue) {\n    var v = iterable.get(key, NOT_SET);\n    return v === NOT_SET ? notSetValue : mapper.call(context, v, key, iterable);\n  });\n  mappedSequence.__iterateUncached = function(fn, reverse) {\n    var $__0 = this;\n    return iterable.__iterate((function(v, k, c) {\n      return fn(mapper.call(context, v, k, c), k, $__0) !== false;\n    }), reverse);\n  };\n  mappedSequence.__iteratorUncached = function(type, reverse) {\n    var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n    return new Iterator((function() {\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      var key = entry[0];\n      return iteratorValue(type, key, mapper.call(context, entry[1], key, iterable), step);\n    }));\n  };\n  return mappedSequence;\n}\nfunction reverseFactory(iterable, useKeys) {\n  var reversedSequence = makeSequence(iterable);\n  reversedSequence._iter = iterable;\n  reversedSequence.size = iterable.size;\n  reversedSequence.reverse = (function() {\n    return iterable;\n  });\n  if (iterable.flip) {\n    reversedSequence.flip = function() {\n      var flipSequence = flipFactory(iterable);\n      flipSequence.reverse = (function() {\n        return iterable.flip();\n      });\n      return flipSequence;\n    };\n  }\n  reversedSequence.get = (function(key, notSetValue) {\n    return iterable.get(useKeys ? key : -1 - key, notSetValue);\n  });\n  reversedSequence.has = (function(key) {\n    return iterable.has(useKeys ? key : -1 - key);\n  });\n  reversedSequence.contains = (function(value) {\n    return iterable.contains(value);\n  });\n  reversedSequence.cacheResult = cacheResultThrough;\n  reversedSequence.__iterate = function(fn, reverse) {\n    var $__0 = this;\n    return iterable.__iterate((function(v, k) {\n      return fn(v, k, $__0);\n    }), !reverse);\n  };\n  reversedSequence.__iterator = (function(type, reverse) {\n    return iterable.__iterator(type, !reverse);\n  });\n  return reversedSequence;\n}\nfunction filterFactory(iterable, predicate, context, useKeys) {\n  var filterSequence = makeSequence(iterable);\n  if (useKeys) {\n    filterSequence.has = (function(key) {\n      var v = iterable.get(key, NOT_SET);\n      return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n    });\n    filterSequence.get = (function(key, notSetValue) {\n      var v = iterable.get(key, NOT_SET);\n      return v !== NOT_SET && predicate.call(context, v, key, iterable) ? v : notSetValue;\n    });\n  }\n  filterSequence.__iterateUncached = function(fn, reverse) {\n    var $__0 = this;\n    var iterations = 0;\n    iterable.__iterate((function(v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, $__0);\n      }\n    }), reverse);\n    return iterations;\n  };\n  filterSequence.__iteratorUncached = function(type, reverse) {\n    var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n    var iterations = 0;\n    return new Iterator((function() {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        var value = entry[1];\n        if (predicate.call(context, value, key, iterable)) {\n          return iteratorValue(type, useKeys ? key : iterations++, value, step);\n        }\n      }\n    }));\n  };\n  return filterSequence;\n}\nfunction countByFactory(iterable, grouper, context) {\n  var groups = Map().asMutable();\n  iterable.__iterate((function(v, k) {\n    groups.update(grouper.call(context, v, k, iterable), 0, (function(a) {\n      return a + 1;\n    }));\n  }));\n  return groups.asImmutable();\n}\nfunction groupByFactory(iterable, grouper, context) {\n  var isKeyedIter = isKeyed(iterable);\n  var groups = Map().asMutable();\n  iterable.__iterate((function(v, k) {\n    groups.update(grouper.call(context, v, k, iterable), [], (function(a) {\n      return (a.push(isKeyedIter ? [k, v] : v), a);\n    }));\n  }));\n  var coerce = iterableClass(iterable);\n  return groups.map((function(arr) {\n    return reify(iterable, coerce(arr));\n  }));\n}\nfunction takeFactory(iterable, amount) {\n  if (amount > iterable.size) {\n    return iterable;\n  }\n  if (amount < 0) {\n    amount = 0;\n  }\n  var takeSequence = makeSequence(iterable);\n  takeSequence.size = iterable.size && Math.min(iterable.size, amount);\n  takeSequence.__iterateUncached = function(fn, reverse) {\n    var $__0 = this;\n    if (amount === 0) {\n      return 0;\n    }\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterations = 0;\n    iterable.__iterate((function(v, k) {\n      return ++iterations && fn(v, k, $__0) !== false && iterations < amount;\n    }));\n    return iterations;\n  };\n  takeSequence.__iteratorUncached = function(type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = amount && iterable.__iterator(type, reverse);\n    var iterations = 0;\n    return new Iterator((function() {\n      if (iterations++ > amount) {\n        return iteratorDone();\n      }\n      return iterator.next();\n    }));\n  };\n  return takeSequence;\n}\nfunction takeWhileFactory(iterable, predicate, context) {\n  var takeSequence = makeSequence(iterable);\n  takeSequence.__iterateUncached = function(fn, reverse) {\n    var $__0 = this;\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterations = 0;\n    iterable.__iterate((function(v, k, c) {\n      return predicate.call(context, v, k, c) && ++iterations && fn(v, k, $__0);\n    }));\n    return iterations;\n  };\n  takeSequence.__iteratorUncached = function(type, reverse) {\n    var $__0 = this;\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n    var iterating = true;\n    return new Iterator((function() {\n      if (!iterating) {\n        return iteratorDone();\n      }\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      var k = entry[0];\n      var v = entry[1];\n      if (!predicate.call(context, v, k, $__0)) {\n        iterating = false;\n        return iteratorDone();\n      }\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    }));\n  };\n  return takeSequence;\n}\nfunction skipFactory(iterable, amount, useKeys) {\n  if (amount <= 0) {\n    return iterable;\n  }\n  var skipSequence = makeSequence(iterable);\n  skipSequence.size = iterable.size && Math.max(0, iterable.size - amount);\n  skipSequence.__iterateUncached = function(fn, reverse) {\n    var $__0 = this;\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var skipped = 0;\n    var isSkipping = true;\n    var iterations = 0;\n    iterable.__iterate((function(v, k) {\n      if (!(isSkipping && (isSkipping = skipped++ < amount))) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, $__0);\n      }\n    }));\n    return iterations;\n  };\n  skipSequence.__iteratorUncached = function(type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = amount && iterable.__iterator(type, reverse);\n    var skipped = 0;\n    var iterations = 0;\n    return new Iterator((function() {\n      while (skipped < amount) {\n        skipped++;\n        iterator.next();\n      }\n      var step = iterator.next();\n      if (useKeys || type === ITERATE_VALUES) {\n        return step;\n      } else if (type === ITERATE_KEYS) {\n        return iteratorValue(type, iterations++, undefined, step);\n      } else {\n        return iteratorValue(type, iterations++, step.value[1], step);\n      }\n    }));\n  };\n  return skipSequence;\n}\nfunction skipWhileFactory(iterable, predicate, context, useKeys) {\n  var skipSequence = makeSequence(iterable);\n  skipSequence.__iterateUncached = function(fn, reverse) {\n    var $__0 = this;\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var isSkipping = true;\n    var iterations = 0;\n    iterable.__iterate((function(v, k, c) {\n      if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, $__0);\n      }\n    }));\n    return iterations;\n  };\n  skipSequence.__iteratorUncached = function(type, reverse) {\n    var $__0 = this;\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n    var skipping = true;\n    var iterations = 0;\n    return new Iterator((function() {\n      var step,\n          k,\n          v;\n      do {\n        step = iterator.next();\n        if (step.done) {\n          if (useKeys || type === ITERATE_VALUES) {\n            return step;\n          } else if (type === ITERATE_KEYS) {\n            return iteratorValue(type, iterations++, undefined, step);\n          } else {\n            return iteratorValue(type, iterations++, step.value[1], step);\n          }\n        }\n        var entry = step.value;\n        k = entry[0];\n        v = entry[1];\n        skipping && (skipping = predicate.call(context, v, k, $__0));\n      } while (skipping);\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    }));\n  };\n  return skipSequence;\n}\nfunction concatFactory(iterable, values) {\n  var isKeyedIterable = isKeyed(iterable);\n  var iters = new ArraySeq([iterable].concat(values)).map((function(v) {\n    if (!isIterable(v)) {\n      v = isKeyedIterable ? keyedSeqFromValue(v) : indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n    } else if (isKeyedIterable) {\n      v = KeyedIterable(v);\n    }\n    return v;\n  }));\n  if (isKeyedIterable) {\n    iters = iters.toKeyedSeq();\n  } else if (!isIndexed(iterable)) {\n    iters = iters.toSetSeq();\n  }\n  var flat = iters.flatten(true);\n  flat.size = iters.reduce((function(sum, seq) {\n    if (sum !== undefined) {\n      var size = seq.size;\n      if (size !== undefined) {\n        return sum + size;\n      }\n    }\n  }), 0);\n  return flat;\n}\nfunction flattenFactory(iterable, depth, useKeys) {\n  var flatSequence = makeSequence(iterable);\n  flatSequence.__iterateUncached = function(fn, reverse) {\n    var iterations = 0;\n    var stopped = false;\n    function flatDeep(iter, currentDepth) {\n      var $__0 = this;\n      iter.__iterate((function(v, k) {\n        if ((!depth || currentDepth < depth) && isIterable(v)) {\n          flatDeep(v, currentDepth + 1);\n        } else if (fn(v, useKeys ? k : iterations++, $__0) === false) {\n          stopped = true;\n        }\n        return !stopped;\n      }), reverse);\n    }\n    flatDeep(iterable, 0);\n    return iterations;\n  };\n  flatSequence.__iteratorUncached = function(type, reverse) {\n    var iterator = iterable.__iterator(type, reverse);\n    var stack = [];\n    var iterations = 0;\n    return new Iterator((function() {\n      while (iterator) {\n        var step = iterator.next();\n        if (step.done !== false) {\n          iterator = stack.pop();\n          continue;\n        }\n        var v = step.value;\n        if (type === ITERATE_ENTRIES) {\n          v = v[1];\n        }\n        if ((!depth || stack.length < depth) && isIterable(v)) {\n          stack.push(iterator);\n          iterator = v.__iterator(type, reverse);\n        } else {\n          return useKeys ? step : iteratorValue(type, iterations++, v, step);\n        }\n      }\n      return iteratorDone();\n    }));\n  };\n  return flatSequence;\n}\nfunction flatMapFactory(iterable, mapper, context) {\n  var coerce = iterableClass(iterable);\n  return iterable.toSeq().map((function(v, k) {\n    return coerce(mapper.call(context, v, k, iterable));\n  })).flatten(true);\n}\nfunction interposeFactory(iterable, separator) {\n  var interposedSequence = makeSequence(iterable);\n  interposedSequence.size = iterable.size && iterable.size * 2 - 1;\n  interposedSequence.__iterateUncached = function(fn, reverse) {\n    var $__0 = this;\n    var iterations = 0;\n    iterable.__iterate((function(v, k) {\n      return (!iterations || fn(separator, iterations++, $__0) !== false) && fn(v, iterations++, $__0) !== false;\n    }), reverse);\n    return iterations;\n  };\n  interposedSequence.__iteratorUncached = function(type, reverse) {\n    var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n    var iterations = 0;\n    var step;\n    return new Iterator((function() {\n      if (!step || iterations % 2) {\n        step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n      }\n      return iterations % 2 ? iteratorValue(type, iterations++, separator) : iteratorValue(type, iterations++, step.value, step);\n    }));\n  };\n  return interposedSequence;\n}\nfunction sortFactory(iterable, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n  var isKeyedIterable = isKeyed(iterable);\n  var index = 0;\n  var entries = iterable.toSeq().map((function(v, k) {\n    return [k, v, index++, mapper ? mapper(v, k, iterable) : v];\n  })).toArray();\n  entries.sort((function(a, b) {\n    return comparator(a[3], b[3]) || a[2] - b[2];\n  })).forEach(isKeyedIterable ? (function(v, i) {\n    entries[i].length = 2;\n  }) : (function(v, i) {\n    entries[i] = v[1];\n  }));\n  return isKeyedIterable ? KeyedSeq(entries) : isIndexed(iterable) ? IndexedSeq(entries) : SetSeq(entries);\n}\nfunction maxFactory(iterable, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n  if (mapper) {\n    var entry = iterable.toSeq().map((function(v, k) {\n      return [v, mapper(v, k, iterable)];\n    })).reduce((function(max, next) {\n      return comparator(next[1], max[1]) > 0 ? next : max;\n    }));\n    return entry && entry[0];\n  } else {\n    return iterable.reduce((function(max, next) {\n      return comparator(next, max) > 0 ? next : max;\n    }));\n  }\n}\nfunction reify(iter, seq) {\n  return isSeq(iter) ? seq : iter.constructor(seq);\n}\nfunction validateEntry(entry) {\n  if (entry !== Object(entry)) {\n    throw new TypeError('Expected [K, V] tuple: ' + entry);\n  }\n}\nfunction resolveSize(iter) {\n  assertNotInfinite(iter.size);\n  return ensureSize(iter);\n}\nfunction iterableClass(iterable) {\n  return isKeyed(iterable) ? KeyedIterable : isIndexed(iterable) ? IndexedIterable : SetIterable;\n}\nfunction makeSequence(iterable) {\n  return Object.create((isKeyed(iterable) ? KeyedSeq : isIndexed(iterable) ? IndexedSeq : SetSeq).prototype);\n}\nfunction cacheResultThrough() {\n  if (this._iter.cacheResult) {\n    this._iter.cacheResult();\n    this.size = this._iter.size;\n    return this;\n  } else {\n    return Seq.prototype.cacheResult.call(this);\n  }\n}\nfunction defaultComparator(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\nvar List = function List(value) {\n  var empty = emptyList();\n  if (value === null || value === undefined) {\n    return empty;\n  }\n  if (isList(value)) {\n    return value;\n  }\n  value = IndexedIterable(value);\n  var size = value.size;\n  if (size === 0) {\n    return empty;\n  }\n  if (size > 0 && size < SIZE) {\n    return makeList(0, size, SHIFT, null, new VNode(value.toArray()));\n  }\n  return empty.merge(value);\n};\n($traceurRuntime.createClass)(List, {\n  toString: function() {\n    return this.__toString('List [', ']');\n  },\n  get: function(index, notSetValue) {\n    index = wrapIndex(this, index);\n    if (index < 0 || index >= this.size) {\n      return notSetValue;\n    }\n    index += this._origin;\n    var node = listNodeFor(this, index);\n    return node && node.array[index & MASK];\n  },\n  set: function(index, value) {\n    return updateList(this, index, value);\n  },\n  remove: function(index) {\n    return !this.has(index) ? this : index === 0 ? this.shift() : index === this.size - 1 ? this.pop() : this.splice(index, 1);\n  },\n  clear: function() {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = this._origin = this._capacity = 0;\n      this._level = SHIFT;\n      this._root = this._tail = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyList();\n  },\n  push: function() {\n    var values = arguments;\n    var oldSize = this.size;\n    return this.withMutations((function(list) {\n      setListBounds(list, 0, oldSize + values.length);\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(oldSize + ii, values[ii]);\n      }\n    }));\n  },\n  pop: function() {\n    return setListBounds(this, 0, -1);\n  },\n  unshift: function() {\n    var values = arguments;\n    return this.withMutations((function(list) {\n      setListBounds(list, -values.length);\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(ii, values[ii]);\n      }\n    }));\n  },\n  shift: function() {\n    return setListBounds(this, 1);\n  },\n  merge: function() {\n    return mergeIntoListWith(this, undefined, arguments);\n  },\n  mergeWith: function(merger) {\n    for (var iters = [],\n        $__5 = 1; $__5 < arguments.length; $__5++)\n      iters[$__5 - 1] = arguments[$__5];\n    return mergeIntoListWith(this, merger, iters);\n  },\n  mergeDeep: function() {\n    return mergeIntoListWith(this, deepMerger(undefined), arguments);\n  },\n  mergeDeepWith: function(merger) {\n    for (var iters = [],\n        $__6 = 1; $__6 < arguments.length; $__6++)\n      iters[$__6 - 1] = arguments[$__6];\n    return mergeIntoListWith(this, deepMerger(merger), iters);\n  },\n  setSize: function(size) {\n    return setListBounds(this, 0, size);\n  },\n  slice: function(begin, end) {\n    var size = this.size;\n    if (wholeSlice(begin, end, size)) {\n      return this;\n    }\n    return setListBounds(this, resolveBegin(begin, size), resolveEnd(end, size));\n  },\n  __iterator: function(type, reverse) {\n    return new ListIterator(this, type, reverse);\n  },\n  __iterate: function(fn, reverse) {\n    var $__0 = this;\n    var iterations = 0;\n    var eachFn = (function(v) {\n      return fn(v, iterations++, $__0);\n    });\n    var tailOffset = getTailOffset(this._capacity);\n    if (reverse) {\n      iterateVNode(this._tail, 0, tailOffset - this._origin, this._capacity - this._origin, eachFn, reverse) && iterateVNode(this._root, this._level, -this._origin, tailOffset - this._origin, eachFn, reverse);\n    } else {\n      iterateVNode(this._root, this._level, -this._origin, tailOffset - this._origin, eachFn, reverse) && iterateVNode(this._tail, 0, tailOffset - this._origin, this._capacity - this._origin, eachFn, reverse);\n    }\n    return iterations;\n  },\n  __ensureOwner: function(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      return this;\n    }\n    return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n  }\n}, {of: function() {\n    return this(arguments);\n  }}, IndexedCollection);\nfunction isList(maybeList) {\n  return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n}\nList.isList = isList;\nvar IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\nvar ListPrototype = List.prototype;\nListPrototype[IS_LIST_SENTINEL] = true;\nListPrototype[DELETE] = ListPrototype.remove;\nListPrototype.setIn = MapPrototype.setIn;\nListPrototype.removeIn = MapPrototype.removeIn;\nListPrototype.update = MapPrototype.update;\nListPrototype.updateIn = MapPrototype.updateIn;\nListPrototype.withMutations = MapPrototype.withMutations;\nListPrototype.asMutable = MapPrototype.asMutable;\nListPrototype.asImmutable = MapPrototype.asImmutable;\nListPrototype.wasAltered = MapPrototype.wasAltered;\nvar VNode = function VNode(array, ownerID) {\n  this.array = array;\n  this.ownerID = ownerID;\n};\nvar $VNode = VNode;\n($traceurRuntime.createClass)(VNode, {\n  removeBefore: function(ownerID, level, index) {\n    if (index === level ? 1 << level : 0 || this.array.length === 0) {\n      return this;\n    }\n    var originIndex = (index >>> level) & MASK;\n    if (originIndex >= this.array.length) {\n      return new $VNode([], ownerID);\n    }\n    var removingFirst = originIndex === 0;\n    var newChild;\n    if (level > 0) {\n      var oldChild = this.array[originIndex];\n      newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n      if (newChild === oldChild && removingFirst) {\n        return this;\n      }\n    }\n    if (removingFirst && !newChild) {\n      return this;\n    }\n    var editable = editableVNode(this, ownerID);\n    if (!removingFirst) {\n      for (var ii = 0; ii < originIndex; ii++) {\n        editable.array[ii] = undefined;\n      }\n    }\n    if (newChild) {\n      editable.array[originIndex] = newChild;\n    }\n    return editable;\n  },\n  removeAfter: function(ownerID, level, index) {\n    if (index === level ? 1 << level : 0 || this.array.length === 0) {\n      return this;\n    }\n    var sizeIndex = ((index - 1) >>> level) & MASK;\n    if (sizeIndex >= this.array.length) {\n      return this;\n    }\n    var removingLast = sizeIndex === this.array.length - 1;\n    var newChild;\n    if (level > 0) {\n      var oldChild = this.array[sizeIndex];\n      newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n      if (newChild === oldChild && removingLast) {\n        return this;\n      }\n    }\n    if (removingLast && !newChild) {\n      return this;\n    }\n    var editable = editableVNode(this, ownerID);\n    if (!removingLast) {\n      editable.array.pop();\n    }\n    if (newChild) {\n      editable.array[sizeIndex] = newChild;\n    }\n    return editable;\n  }\n}, {});\nfunction iterateVNode(node, level, offset, max, fn, reverse) {\n  var ii;\n  var array = node && node.array;\n  if (level === 0) {\n    var from = offset < 0 ? -offset : 0;\n    var to = max - offset;\n    if (to > SIZE) {\n      to = SIZE;\n    }\n    for (ii = from; ii < to; ii++) {\n      if (fn(array && array[reverse ? from + to - 1 - ii : ii]) === false) {\n        return false;\n      }\n    }\n  } else {\n    var step = 1 << level;\n    var newLevel = level - SHIFT;\n    for (ii = 0; ii <= MASK; ii++) {\n      var levelIndex = reverse ? MASK - ii : ii;\n      var newOffset = offset + (levelIndex << level);\n      if (newOffset < max && newOffset + step > 0) {\n        var nextNode = array && array[levelIndex];\n        if (!iterateVNode(nextNode, newLevel, newOffset, max, fn, reverse)) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\nvar ListIterator = function ListIterator(list, type, reverse) {\n  this._type = type;\n  this._reverse = !!reverse;\n  this._maxIndex = list.size - 1;\n  var tailOffset = getTailOffset(list._capacity);\n  var rootStack = listIteratorFrame(list._root && list._root.array, list._level, -list._origin, tailOffset - list._origin - 1);\n  var tailStack = listIteratorFrame(list._tail && list._tail.array, 0, tailOffset - list._origin, list._capacity - list._origin - 1);\n  this._stack = reverse ? tailStack : rootStack;\n  this._stack.__prev = reverse ? rootStack : tailStack;\n};\n($traceurRuntime.createClass)(ListIterator, {next: function() {\n    var stack = this._stack;\n    while (stack) {\n      var array = stack.array;\n      var rawIndex = stack.index++;\n      if (this._reverse) {\n        rawIndex = MASK - rawIndex;\n        if (rawIndex > stack.rawMax) {\n          rawIndex = stack.rawMax;\n          stack.index = SIZE - rawIndex;\n        }\n      }\n      if (rawIndex >= 0 && rawIndex < SIZE && rawIndex <= stack.rawMax) {\n        var value = array && array[rawIndex];\n        if (stack.level === 0) {\n          var type = this._type;\n          var index;\n          if (type !== 1) {\n            index = stack.offset + (rawIndex << stack.level);\n            if (this._reverse) {\n              index = this._maxIndex - index;\n            }\n          }\n          return iteratorValue(type, index, value);\n        } else {\n          this._stack = stack = listIteratorFrame(value && value.array, stack.level - SHIFT, stack.offset + (rawIndex << stack.level), stack.max, stack);\n        }\n        continue;\n      }\n      stack = this._stack = this._stack.__prev;\n    }\n    return iteratorDone();\n  }}, {}, Iterator);\nfunction listIteratorFrame(array, level, offset, max, prevFrame) {\n  return {\n    array: array,\n    level: level,\n    offset: offset,\n    max: max,\n    rawMax: ((max - offset) >> level),\n    index: 0,\n    __prev: prevFrame\n  };\n}\nfunction makeList(origin, capacity, level, root, tail, ownerID, hash) {\n  var list = Object.create(ListPrototype);\n  list.size = capacity - origin;\n  list._origin = origin;\n  list._capacity = capacity;\n  list._level = level;\n  list._root = root;\n  list._tail = tail;\n  list.__ownerID = ownerID;\n  list.__hash = hash;\n  list.__altered = false;\n  return list;\n}\nvar EMPTY_LIST;\nfunction emptyList() {\n  return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n}\nfunction updateList(list, index, value) {\n  index = wrapIndex(list, index);\n  if (index >= list.size || index < 0) {\n    return list.withMutations((function(list) {\n      index < 0 ? setListBounds(list, index).set(0, value) : setListBounds(list, 0, index + 1).set(index, value);\n    }));\n  }\n  index += list._origin;\n  var newTail = list._tail;\n  var newRoot = list._root;\n  var didAlter = MakeRef(DID_ALTER);\n  if (index >= getTailOffset(list._capacity)) {\n    newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n  } else {\n    newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n  }\n  if (!didAlter.value) {\n    return list;\n  }\n  if (list.__ownerID) {\n    list._root = newRoot;\n    list._tail = newTail;\n    list.__hash = undefined;\n    list.__altered = true;\n    return list;\n  }\n  return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n}\nfunction updateVNode(node, ownerID, level, index, value, didAlter) {\n  var idx = (index >>> level) & MASK;\n  var nodeHas = node && idx < node.array.length;\n  if (!nodeHas && value === undefined) {\n    return node;\n  }\n  var newNode;\n  if (level > 0) {\n    var lowerNode = node && node.array[idx];\n    var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n    if (newLowerNode === lowerNode) {\n      return node;\n    }\n    newNode = editableVNode(node, ownerID);\n    newNode.array[idx] = newLowerNode;\n    return newNode;\n  }\n  if (nodeHas && node.array[idx] === value) {\n    return node;\n  }\n  SetRef(didAlter);\n  newNode = editableVNode(node, ownerID);\n  if (value === undefined && idx === newNode.array.length - 1) {\n    newNode.array.pop();\n  } else {\n    newNode.array[idx] = value;\n  }\n  return newNode;\n}\nfunction editableVNode(node, ownerID) {\n  if (ownerID && node && ownerID === node.ownerID) {\n    return node;\n  }\n  return new VNode(node ? node.array.slice() : [], ownerID);\n}\nfunction listNodeFor(list, rawIndex) {\n  if (rawIndex >= getTailOffset(list._capacity)) {\n    return list._tail;\n  }\n  if (rawIndex < 1 << (list._level + SHIFT)) {\n    var node = list._root;\n    var level = list._level;\n    while (node && level > 0) {\n      node = node.array[(rawIndex >>> level) & MASK];\n      level -= SHIFT;\n    }\n    return node;\n  }\n}\nfunction setListBounds(list, begin, end) {\n  var owner = list.__ownerID || new OwnerID();\n  var oldOrigin = list._origin;\n  var oldCapacity = list._capacity;\n  var newOrigin = oldOrigin + begin;\n  var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n  if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n    return list;\n  }\n  if (newOrigin >= newCapacity) {\n    return list.clear();\n  }\n  var newLevel = list._level;\n  var newRoot = list._root;\n  var offsetShift = 0;\n  while (newOrigin + offsetShift < 0) {\n    newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n    newLevel += SHIFT;\n    offsetShift += 1 << newLevel;\n  }\n  if (offsetShift) {\n    newOrigin += offsetShift;\n    oldOrigin += offsetShift;\n    newCapacity += offsetShift;\n    oldCapacity += offsetShift;\n  }\n  var oldTailOffset = getTailOffset(oldCapacity);\n  var newTailOffset = getTailOffset(newCapacity);\n  while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n    newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n    newLevel += SHIFT;\n  }\n  var oldTail = list._tail;\n  var newTail = newTailOffset < oldTailOffset ? listNodeFor(list, newCapacity - 1) : newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n  if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n    newRoot = editableVNode(newRoot, owner);\n    var node = newRoot;\n    for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n      var idx = (oldTailOffset >>> level) & MASK;\n      node = node.array[idx] = editableVNode(node.array[idx], owner);\n    }\n    node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n  }\n  if (newCapacity < oldCapacity) {\n    newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n  }\n  if (newOrigin >= newTailOffset) {\n    newOrigin -= newTailOffset;\n    newCapacity -= newTailOffset;\n    newLevel = SHIFT;\n    newRoot = null;\n    newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n  } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n    offsetShift = 0;\n    while (newRoot) {\n      var beginIndex = (newOrigin >>> newLevel) & MASK;\n      if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n        break;\n      }\n      if (beginIndex) {\n        offsetShift += (1 << newLevel) * beginIndex;\n      }\n      newLevel -= SHIFT;\n      newRoot = newRoot.array[beginIndex];\n    }\n    if (newRoot && newOrigin > oldOrigin) {\n      newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n    }\n    if (newRoot && newTailOffset < oldTailOffset) {\n      newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n    }\n    if (offsetShift) {\n      newOrigin -= offsetShift;\n      newCapacity -= offsetShift;\n    }\n  }\n  if (list.__ownerID) {\n    list.size = newCapacity - newOrigin;\n    list._origin = newOrigin;\n    list._capacity = newCapacity;\n    list._level = newLevel;\n    list._root = newRoot;\n    list._tail = newTail;\n    list.__hash = undefined;\n    list.__altered = true;\n    return list;\n  }\n  return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n}\nfunction mergeIntoListWith(list, merger, iterables) {\n  var iters = [];\n  var maxSize = 0;\n  for (var ii = 0; ii < iterables.length; ii++) {\n    var value = iterables[ii];\n    var iter = IndexedIterable(value);\n    if (iter.size > maxSize) {\n      maxSize = iter.size;\n    }\n    if (!isIterable(value)) {\n      iter = iter.map((function(v) {\n        return fromJS(v);\n      }));\n    }\n    iters.push(iter);\n  }\n  if (maxSize > list.size) {\n    list = list.setSize(maxSize);\n  }\n  return mergeIntoCollectionWith(list, merger, iters);\n}\nfunction getTailOffset(size) {\n  return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n}\nvar OrderedMap = function OrderedMap(value) {\n  return value === null || value === undefined ? emptyOrderedMap() : isOrderedMap(value) ? value : emptyOrderedMap().merge(KeyedIterable(value));\n};\n($traceurRuntime.createClass)(OrderedMap, {\n  toString: function() {\n    return this.__toString('OrderedMap {', '}');\n  },\n  get: function(k, notSetValue) {\n    var index = this._map.get(k);\n    return index !== undefined ? this._list.get(index)[1] : notSetValue;\n  },\n  clear: function() {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._map.clear();\n      this._list.clear();\n      return this;\n    }\n    return emptyOrderedMap();\n  },\n  set: function(k, v) {\n    return updateOrderedMap(this, k, v);\n  },\n  remove: function(k) {\n    return updateOrderedMap(this, k, NOT_SET);\n  },\n  wasAltered: function() {\n    return this._map.wasAltered() || this._list.wasAltered();\n  },\n  __iterate: function(fn, reverse) {\n    var $__0 = this;\n    return this._list.__iterate((function(entry) {\n      return entry && fn(entry[1], entry[0], $__0);\n    }), reverse);\n  },\n  __iterator: function(type, reverse) {\n    return this._list.fromEntrySeq().__iterator(type, reverse);\n  },\n  __ensureOwner: function(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map.__ensureOwner(ownerID);\n    var newList = this._list.__ensureOwner(ownerID);\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      this._list = newList;\n      return this;\n    }\n    return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n  }\n}, {of: function() {\n    return this(arguments);\n  }}, Map);\nfunction isOrderedMap(maybeOrderedMap) {\n  return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n}\nOrderedMap.isOrderedMap = isOrderedMap;\nOrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\nOrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\nfunction makeOrderedMap(map, list, ownerID, hash) {\n  var omap = Object.create(OrderedMap.prototype);\n  omap.size = map ? map.size : 0;\n  omap._map = map;\n  omap._list = list;\n  omap.__ownerID = ownerID;\n  omap.__hash = hash;\n  return omap;\n}\nvar EMPTY_ORDERED_MAP;\nfunction emptyOrderedMap() {\n  return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n}\nfunction updateOrderedMap(omap, k, v) {\n  var map = omap._map;\n  var list = omap._list;\n  var i = map.get(k);\n  var has = i !== undefined;\n  var newMap;\n  var newList;\n  if (v === NOT_SET) {\n    if (!has) {\n      return omap;\n    }\n    if (list.size >= SIZE && list.size >= map.size * 2) {\n      newList = list.filter((function(entry, idx) {\n        return entry !== undefined && i !== idx;\n      }));\n      newMap = newList.toKeyedSeq().map((function(entry) {\n        return entry[0];\n      })).flip().toMap();\n      if (omap.__ownerID) {\n        newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n      }\n    } else {\n      newMap = map.remove(k);\n      newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n    }\n  } else {\n    if (has) {\n      if (v === list.get(i)[1]) {\n        return omap;\n      }\n      newMap = map;\n      newList = list.set(i, [k, v]);\n    } else {\n      newMap = map.set(k, list.size);\n      newList = list.set(list.size, [k, v]);\n    }\n  }\n  if (omap.__ownerID) {\n    omap.size = newMap.size;\n    omap._map = newMap;\n    omap._list = newList;\n    omap.__hash = undefined;\n    return omap;\n  }\n  return makeOrderedMap(newMap, newList);\n}\nvar Stack = function Stack(value) {\n  return value === null || value === undefined ? emptyStack() : isStack(value) ? value : emptyStack().unshiftAll(value);\n};\nvar $Stack = Stack;\n($traceurRuntime.createClass)(Stack, {\n  toString: function() {\n    return this.__toString('Stack [', ']');\n  },\n  get: function(index, notSetValue) {\n    var head = this._head;\n    while (head && index--) {\n      head = head.next;\n    }\n    return head ? head.value : notSetValue;\n  },\n  peek: function() {\n    return this._head && this._head.value;\n  },\n  push: function() {\n    if (arguments.length === 0) {\n      return this;\n    }\n    var newSize = this.size + arguments.length;\n    var head = this._head;\n    for (var ii = arguments.length - 1; ii >= 0; ii--) {\n      head = {\n        value: arguments[ii],\n        next: head\n      };\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  },\n  pushAll: function(iter) {\n    iter = IndexedIterable(iter);\n    if (iter.size === 0) {\n      return this;\n    }\n    var newSize = this.size;\n    var head = this._head;\n    iter.reverse().forEach((function(value) {\n      newSize++;\n      head = {\n        value: value,\n        next: head\n      };\n    }));\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  },\n  pop: function() {\n    return this.slice(1);\n  },\n  unshift: function() {\n    return this.push.apply(this, arguments);\n  },\n  unshiftAll: function(iter) {\n    return this.pushAll(iter);\n  },\n  shift: function() {\n    return this.pop.apply(this, arguments);\n  },\n  clear: function() {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._head = undefined;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyStack();\n  },\n  slice: function(begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    var resolvedBegin = resolveBegin(begin, this.size);\n    var resolvedEnd = resolveEnd(end, this.size);\n    if (resolvedEnd !== this.size) {\n      return $traceurRuntime.superCall(this, $Stack.prototype, \"slice\", [begin, end]);\n    }\n    var newSize = this.size - resolvedBegin;\n    var head = this._head;\n    while (resolvedBegin--) {\n      head = head.next;\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  },\n  __ensureOwner: function(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeStack(this.size, this._head, ownerID, this.__hash);\n  },\n  __iterate: function(fn, reverse) {\n    if (reverse) {\n      return this.toSeq().cacheResult.__iterate(fn, reverse);\n    }\n    var iterations = 0;\n    var node = this._head;\n    while (node) {\n      if (fn(node.value, iterations++, this) === false) {\n        break;\n      }\n      node = node.next;\n    }\n    return iterations;\n  },\n  __iterator: function(type, reverse) {\n    if (reverse) {\n      return this.toSeq().cacheResult().__iterator(type, reverse);\n    }\n    var iterations = 0;\n    var node = this._head;\n    return new Iterator((function() {\n      if (node) {\n        var value = node.value;\n        node = node.next;\n        return iteratorValue(type, iterations++, value);\n      }\n      return iteratorDone();\n    }));\n  }\n}, {of: function() {\n    return this(arguments);\n  }}, IndexedCollection);\nfunction isStack(maybeStack) {\n  return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n}\nStack.isStack = isStack;\nvar IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\nvar StackPrototype = Stack.prototype;\nStackPrototype[IS_STACK_SENTINEL] = true;\nStackPrototype.withMutations = MapPrototype.withMutations;\nStackPrototype.asMutable = MapPrototype.asMutable;\nStackPrototype.asImmutable = MapPrototype.asImmutable;\nStackPrototype.wasAltered = MapPrototype.wasAltered;\nfunction makeStack(size, head, ownerID, hash) {\n  var map = Object.create(StackPrototype);\n  map.size = size;\n  map._head = head;\n  map.__ownerID = ownerID;\n  map.__hash = hash;\n  map.__altered = false;\n  return map;\n}\nvar EMPTY_STACK;\nfunction emptyStack() {\n  return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n}\nvar Set = function Set(value) {\n  return value === null || value === undefined ? emptySet() : isSet(value) ? value : emptySet().union(SetIterable(value));\n};\n($traceurRuntime.createClass)(Set, {\n  toString: function() {\n    return this.__toString('Set {', '}');\n  },\n  has: function(value) {\n    return this._map.has(value);\n  },\n  add: function(value) {\n    return updateSet(this, this._map.set(value, true));\n  },\n  remove: function(value) {\n    return updateSet(this, this._map.remove(value));\n  },\n  clear: function() {\n    return updateSet(this, this._map.clear());\n  },\n  union: function() {\n    var iters = arguments;\n    if (iters.length === 0) {\n      return this;\n    }\n    return this.withMutations((function(set) {\n      for (var ii = 0; ii < iters.length; ii++) {\n        SetIterable(iters[ii]).forEach((function(value) {\n          return set.add(value);\n        }));\n      }\n    }));\n  },\n  intersect: function() {\n    for (var iters = [],\n        $__7 = 0; $__7 < arguments.length; $__7++)\n      iters[$__7] = arguments[$__7];\n    if (iters.length === 0) {\n      return this;\n    }\n    iters = iters.map((function(iter) {\n      return SetIterable(iter);\n    }));\n    var originalSet = this;\n    return this.withMutations((function(set) {\n      originalSet.forEach((function(value) {\n        if (!iters.every((function(iter) {\n          return iter.contains(value);\n        }))) {\n          set.remove(value);\n        }\n      }));\n    }));\n  },\n  subtract: function() {\n    for (var iters = [],\n        $__8 = 0; $__8 < arguments.length; $__8++)\n      iters[$__8] = arguments[$__8];\n    if (iters.length === 0) {\n      return this;\n    }\n    iters = iters.map((function(iter) {\n      return SetIterable(iter);\n    }));\n    var originalSet = this;\n    return this.withMutations((function(set) {\n      originalSet.forEach((function(value) {\n        if (iters.some((function(iter) {\n          return iter.contains(value);\n        }))) {\n          set.remove(value);\n        }\n      }));\n    }));\n  },\n  merge: function() {\n    return this.union.apply(this, arguments);\n  },\n  mergeWith: function(merger) {\n    for (var iters = [],\n        $__9 = 1; $__9 < arguments.length; $__9++)\n      iters[$__9 - 1] = arguments[$__9];\n    return this.union.apply(this, iters);\n  },\n  sort: function(comparator) {\n    return OrderedSet(sortFactory(this, comparator));\n  },\n  sortBy: function(mapper, comparator) {\n    return OrderedSet(sortFactory(this, comparator, mapper));\n  },\n  wasAltered: function() {\n    return this._map.wasAltered();\n  },\n  __iterate: function(fn, reverse) {\n    var $__0 = this;\n    return this._map.__iterate((function(_, k) {\n      return fn(k, k, $__0);\n    }), reverse);\n  },\n  __iterator: function(type, reverse) {\n    return this._map.map((function(_, k) {\n      return k;\n    })).__iterator(type, reverse);\n  },\n  __ensureOwner: function(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map.__ensureOwner(ownerID);\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n    return this.__make(newMap, ownerID);\n  }\n}, {\n  of: function() {\n    return this(arguments);\n  },\n  fromKeys: function(value) {\n    return this(KeyedIterable(value).keySeq());\n  }\n}, SetCollection);\nfunction isSet(maybeSet) {\n  return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n}\nSet.isSet = isSet;\nvar IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\nvar SetPrototype = Set.prototype;\nSetPrototype[IS_SET_SENTINEL] = true;\nSetPrototype[DELETE] = SetPrototype.remove;\nSetPrototype.mergeDeep = SetPrototype.merge;\nSetPrototype.mergeDeepWith = SetPrototype.mergeWith;\nSetPrototype.withMutations = MapPrototype.withMutations;\nSetPrototype.asMutable = MapPrototype.asMutable;\nSetPrototype.asImmutable = MapPrototype.asImmutable;\nSetPrototype.__empty = emptySet;\nSetPrototype.__make = makeSet;\nfunction updateSet(set, newMap) {\n  if (set.__ownerID) {\n    set.size = newMap.size;\n    set._map = newMap;\n    return set;\n  }\n  return newMap === set._map ? set : newMap.size === 0 ? set.__empty() : set.__make(newMap);\n}\nfunction makeSet(map, ownerID) {\n  var set = Object.create(SetPrototype);\n  set.size = map ? map.size : 0;\n  set._map = map;\n  set.__ownerID = ownerID;\n  return set;\n}\nvar EMPTY_SET;\nfunction emptySet() {\n  return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n}\nvar OrderedSet = function OrderedSet(value) {\n  return value === null || value === undefined ? emptyOrderedSet() : isOrderedSet(value) ? value : emptyOrderedSet().union(SetIterable(value));\n};\n($traceurRuntime.createClass)(OrderedSet, {toString: function() {\n    return this.__toString('OrderedSet {', '}');\n  }}, {\n  of: function() {\n    return this(arguments);\n  },\n  fromKeys: function(value) {\n    return this(KeyedIterable(value).keySeq());\n  }\n}, Set);\nfunction isOrderedSet(maybeOrderedSet) {\n  return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n}\nOrderedSet.isOrderedSet = isOrderedSet;\nvar OrderedSetPrototype = OrderedSet.prototype;\nOrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\nOrderedSetPrototype.__empty = emptyOrderedSet;\nOrderedSetPrototype.__make = makeOrderedSet;\nfunction makeOrderedSet(map, ownerID) {\n  var set = Object.create(OrderedSetPrototype);\n  set.size = map ? map.size : 0;\n  set._map = map;\n  set.__ownerID = ownerID;\n  return set;\n}\nvar EMPTY_ORDERED_SET;\nfunction emptyOrderedSet() {\n  return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n}\nvar Record = function Record(defaultValues, name) {\n  var RecordType = function Record(values) {\n    if (!(this instanceof RecordType)) {\n      return new RecordType(values);\n    }\n    this._map = Map(values);\n  };\n  var keys = Object.keys(defaultValues);\n  var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n  RecordTypePrototype.constructor = RecordType;\n  name && (RecordTypePrototype._name = name);\n  RecordTypePrototype._defaultValues = defaultValues;\n  RecordTypePrototype._keys = keys;\n  RecordTypePrototype.size = keys.length;\n  try {\n    keys.forEach((function(key) {\n      Object.defineProperty(RecordType.prototype, key, {\n        get: function() {\n          return this.get(key);\n        },\n        set: function(value) {\n          invariant(this.__ownerID, 'Cannot set on an immutable record.');\n          this.set(key, value);\n        }\n      });\n    }));\n  } catch (error) {}\n  return RecordType;\n};\n($traceurRuntime.createClass)(Record, {\n  toString: function() {\n    return this.__toString(recordName(this) + ' {', '}');\n  },\n  has: function(k) {\n    return this._defaultValues.hasOwnProperty(k);\n  },\n  get: function(k, notSetValue) {\n    if (!this.has(k)) {\n      return notSetValue;\n    }\n    var defaultVal = this._defaultValues[k];\n    return this._map ? this._map.get(k, defaultVal) : defaultVal;\n  },\n  clear: function() {\n    if (this.__ownerID) {\n      this._map && this._map.clear();\n      return this;\n    }\n    var SuperRecord = Object.getPrototypeOf(this).constructor;\n    return SuperRecord._empty || (SuperRecord._empty = makeRecord(this, emptyMap()));\n  },\n  set: function(k, v) {\n    if (!this.has(k)) {\n      throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n    }\n    var newMap = this._map && this._map.set(k, v);\n    if (this.__ownerID || newMap === this._map) {\n      return this;\n    }\n    return makeRecord(this, newMap);\n  },\n  remove: function(k) {\n    if (!this.has(k)) {\n      return this;\n    }\n    var newMap = this._map && this._map.remove(k);\n    if (this.__ownerID || newMap === this._map) {\n      return this;\n    }\n    return makeRecord(this, newMap);\n  },\n  wasAltered: function() {\n    return this._map.wasAltered();\n  },\n  __iterator: function(type, reverse) {\n    var $__0 = this;\n    return KeyedIterable(this._defaultValues).map((function(_, k) {\n      return $__0.get(k);\n    })).__iterator(type, reverse);\n  },\n  __iterate: function(fn, reverse) {\n    var $__0 = this;\n    return KeyedIterable(this._defaultValues).map((function(_, k) {\n      return $__0.get(k);\n    })).__iterate(fn, reverse);\n  },\n  __ensureOwner: function(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map && this._map.__ensureOwner(ownerID);\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n    return makeRecord(this, newMap, ownerID);\n  }\n}, {}, KeyedCollection);\nvar RecordPrototype = Record.prototype;\nRecordPrototype[DELETE] = RecordPrototype.remove;\nRecordPrototype.merge = MapPrototype.merge;\nRecordPrototype.mergeWith = MapPrototype.mergeWith;\nRecordPrototype.mergeDeep = MapPrototype.mergeDeep;\nRecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\nRecordPrototype.update = MapPrototype.update;\nRecordPrototype.updateIn = MapPrototype.updateIn;\nRecordPrototype.withMutations = MapPrototype.withMutations;\nRecordPrototype.asMutable = MapPrototype.asMutable;\nRecordPrototype.asImmutable = MapPrototype.asImmutable;\nfunction makeRecord(likeRecord, map, ownerID) {\n  var record = Object.create(Object.getPrototypeOf(likeRecord));\n  record._map = map;\n  record.__ownerID = ownerID;\n  return record;\n}\nfunction recordName(record) {\n  return record._name || record.constructor.name;\n}\nvar Range = function Range(start, end, step) {\n  if (!(this instanceof $Range)) {\n    return new $Range(start, end, step);\n  }\n  invariant(step !== 0, 'Cannot step a Range by 0');\n  start = start || 0;\n  if (end === undefined) {\n    end = Infinity;\n  }\n  if (start === end && __EMPTY_RANGE) {\n    return __EMPTY_RANGE;\n  }\n  step = step === undefined ? 1 : Math.abs(step);\n  if (end < start) {\n    step = -step;\n  }\n  this._start = start;\n  this._end = end;\n  this._step = step;\n  this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n};\nvar $Range = Range;\n($traceurRuntime.createClass)(Range, {\n  toString: function() {\n    if (this.size === 0) {\n      return 'Range []';\n    }\n    return 'Range [ ' + this._start + '...' + this._end + (this._step > 1 ? ' by ' + this._step : '') + ' ]';\n  },\n  get: function(index, notSetValue) {\n    return this.has(index) ? this._start + wrapIndex(this, index) * this._step : notSetValue;\n  },\n  contains: function(searchValue) {\n    var possibleIndex = (searchValue - this._start) / this._step;\n    return possibleIndex >= 0 && possibleIndex < this.size && possibleIndex === Math.floor(possibleIndex);\n  },\n  slice: function(begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    begin = resolveBegin(begin, this.size);\n    end = resolveEnd(end, this.size);\n    if (end <= begin) {\n      return __EMPTY_RANGE;\n    }\n    return new $Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n  },\n  indexOf: function(searchValue) {\n    var offsetValue = searchValue - this._start;\n    if (offsetValue % this._step === 0) {\n      var index = offsetValue / this._step;\n      if (index >= 0 && index < this.size) {\n        return index;\n      }\n    }\n    return -1;\n  },\n  lastIndexOf: function(searchValue) {\n    return this.indexOf(searchValue);\n  },\n  take: function(amount) {\n    return this.slice(0, Math.max(0, amount));\n  },\n  skip: function(amount) {\n    return this.slice(Math.max(0, amount));\n  },\n  __iterate: function(fn, reverse) {\n    var maxIndex = this.size - 1;\n    var step = this._step;\n    var value = reverse ? this._start + maxIndex * step : this._start;\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      if (fn(value, ii, this) === false) {\n        return ii + 1;\n      }\n      value += reverse ? -step : step;\n    }\n    return ii;\n  },\n  __iterator: function(type, reverse) {\n    var maxIndex = this.size - 1;\n    var step = this._step;\n    var value = reverse ? this._start + maxIndex * step : this._start;\n    var ii = 0;\n    return new Iterator((function() {\n      var v = value;\n      value += reverse ? -step : step;\n      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n    }));\n  },\n  __deepEquals: function(other) {\n    return other instanceof $Range ? this._start === other._start && this._end === other._end && this._step === other._step : deepEqual(this, other);\n  }\n}, {}, IndexedSeq);\nvar RangePrototype = Range.prototype;\nRangePrototype.__toJS = RangePrototype.toArray;\nRangePrototype.first = ListPrototype.first;\nRangePrototype.last = ListPrototype.last;\nvar __EMPTY_RANGE = Range(0, 0);\nvar Repeat = function Repeat(value, times) {\n  if (times <= 0 && EMPTY_REPEAT) {\n    return EMPTY_REPEAT;\n  }\n  if (!(this instanceof $Repeat)) {\n    return new $Repeat(value, times);\n  }\n  this._value = value;\n  this.size = times === undefined ? Infinity : Math.max(0, times);\n  if (this.size === 0) {\n    EMPTY_REPEAT = this;\n  }\n};\nvar $Repeat = Repeat;\n($traceurRuntime.createClass)(Repeat, {\n  toString: function() {\n    if (this.size === 0) {\n      return 'Repeat []';\n    }\n    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n  },\n  get: function(index, notSetValue) {\n    return this.has(index) ? this._value : notSetValue;\n  },\n  contains: function(searchValue) {\n    return is(this._value, searchValue);\n  },\n  slice: function(begin, end) {\n    var size = this.size;\n    return wholeSlice(begin, end, size) ? this : new $Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n  },\n  reverse: function() {\n    return this;\n  },\n  indexOf: function(searchValue) {\n    if (is(this._value, searchValue)) {\n      return 0;\n    }\n    return -1;\n  },\n  lastIndexOf: function(searchValue) {\n    if (is(this._value, searchValue)) {\n      return this.size;\n    }\n    return -1;\n  },\n  __iterate: function(fn, reverse) {\n    for (var ii = 0; ii < this.size; ii++) {\n      if (fn(this._value, ii, this) === false) {\n        return ii + 1;\n      }\n    }\n    return ii;\n  },\n  __iterator: function(type, reverse) {\n    var $__0 = this;\n    var ii = 0;\n    return new Iterator((function() {\n      return ii < $__0.size ? iteratorValue(type, ii++, $__0._value) : iteratorDone();\n    }));\n  },\n  __deepEquals: function(other) {\n    return other instanceof $Repeat ? is(this._value, other._value) : deepEqual(other);\n  }\n}, {}, IndexedSeq);\nvar RepeatPrototype = Repeat.prototype;\nRepeatPrototype.last = RepeatPrototype.first;\nRepeatPrototype.has = RangePrototype.has;\nRepeatPrototype.take = RangePrototype.take;\nRepeatPrototype.skip = RangePrototype.skip;\nRepeatPrototype.__toJS = RangePrototype.__toJS;\nvar EMPTY_REPEAT;\nvar Immutable = {\n  Iterable: Iterable,\n  Seq: Seq,\n  Collection: Collection,\n  Map: Map,\n  OrderedMap: OrderedMap,\n  List: List,\n  Stack: Stack,\n  Set: Set,\n  OrderedSet: OrderedSet,\n  Record: Record,\n  Range: Range,\n  Repeat: Repeat,\n  is: is,\n  fromJS: fromJS\n};\n\n  return Immutable;\n}\ntypeof exports === 'object' ? module.exports = universalModule() :\n  typeof define === 'function' && define.amd ? define('immutable/dist/immutable',universalModule) :\n    Immutable = universalModule();\n\n","define('scribe',[\n  'lodash-amd/modern/objects/defaults',\n  './plugins/core/commands',\n  './plugins/core/events',\n  './plugins/core/formatters/html/replace-nbsp-chars',\n  './plugins/core/formatters/html/enforce-p-elements',\n  './plugins/core/formatters/html/ensure-selectable-containers',\n  './plugins/core/formatters/plain-text/escape-html-characters',\n  './plugins/core/inline-elements-mode',\n  './plugins/core/patches',\n  './plugins/core/set-root-p-element',\n  './api',\n  './transaction-manager',\n  './undo-manager',\n  './event-emitter',\n  './element',\n  './node',\n  'immutable/dist/immutable'\n], function (\n  defaults,\n  commands,\n  events,\n  replaceNbspCharsFormatter,\n  enforcePElements,\n  ensureSelectableContainers,\n  escapeHtmlCharactersFormatter,\n  inlineElementsMode,\n  patches,\n  setRootPElement,\n  Api,\n  buildTransactionManager,\n  buildUndoManager,\n  EventEmitter,\n  elementHelpers,\n  nodeHelpers,\n  Immutable\n) {\n\n  'use strict';\n\n  function Scribe(el, options) {\n    EventEmitter.call(this);\n\n    this.el = el;\n    this.commands = {};\n    this.options = defaults(options || {}, {\n      allowBlockElements: true,\n      debug: false\n    });\n    this.commandPatches = {};\n    this._plainTextFormatterFactory = new FormatterFactory();\n    this._htmlFormatterFactory = new HTMLFormatterFactory();\n\n    this.api = new Api(this);\n\n    this.node = nodeHelpers;\n    this.element = elementHelpers;\n\n    this.Immutable = Immutable;\n\n    var TransactionManager = buildTransactionManager(this);\n    this.transactionManager = new TransactionManager();\n\n    var UndoManager = buildUndoManager(this);\n    this.undoManager = new UndoManager();\n\n    this.el.setAttribute('contenteditable', true);\n\n    this.el.addEventListener('input', function () {\n      /**\n       * This event triggers when either the user types something or a native\n       * command is executed which causes the content to change (i.e.\n       * `document.execCommand('bold')`). We can't wrap a transaction around\n       * these actions, so instead we run the transaction in this event.\n       */\n      this.transactionManager.run();\n    }.bind(this), false);\n\n    /**\n     * Core Plugins\n     */\n\n    if (this.allowsBlockElements()) {\n      // Commands assume block elements are allowed, so all we have to do is\n      // set the content.\n      // TODO: replace this by initial formatter application?\n      this.use(setRootPElement());\n      // Warning: enforcePElements must come before ensureSelectableContainers\n      this.use(enforcePElements());\n      this.use(ensureSelectableContainers());\n    } else {\n      // Commands assume block elements are allowed, so we have to set the\n      // content and override some UX.\n      this.use(inlineElementsMode());\n    }\n\n    // Formatters\n    this.use(escapeHtmlCharactersFormatter());\n    this.use(replaceNbspCharsFormatter());\n\n\n    // Patches\n\n    var mandatoryPatches = [\n      patches.commands.bold,\n      patches.commands.indent,\n      patches.commands.insertHTML,\n      patches.commands.insertList,\n      patches.commands.outdent,\n      patches.commands.createLink,\n      patches.events\n    ];\n\n    var mandatoryCommands = [\n      commands.indent,\n      commands.insertList,\n      commands.outdent,\n      commands.redo,\n      commands.subscript,\n      commands.superscript,\n      commands.undo,\n    ];\n\n    var allPlugins = [].concat(mandatoryPatches, mandatoryCommands);\n\n    allPlugins.forEach(function(plugin) {\n      this.use(plugin());\n    }.bind(this));\n\n    this.use(events());\n  }\n\n  Scribe.prototype = Object.create(EventEmitter.prototype);\n\n  // For plugins\n  // TODO: tap combinator?\n  Scribe.prototype.use = function (configurePlugin) {\n    configurePlugin(this);\n    return this;\n  };\n\n  Scribe.prototype.setHTML = function (html, skipFormatters) {\n    if (skipFormatters) {\n      this._skipFormatters = true;\n    }\n    this.el.innerHTML = html;\n  };\n\n  Scribe.prototype.getHTML = function () {\n    return this.el.innerHTML;\n  };\n\n  Scribe.prototype.getContent = function () {\n    // Remove bogus BR element for Firefox — see explanation in BR mode files.\n    return this._htmlFormatterFactory.formatForExport(this.getHTML().replace(/<br>$/, ''));\n  };\n\n  Scribe.prototype.getTextContent = function () {\n    return this.el.textContent;\n  };\n\n  Scribe.prototype.pushHistory = function () {\n    var previousUndoItem = this.undoManager.stack[this.undoManager.position];\n    var previousContent = previousUndoItem && previousUndoItem\n      .replace(/<em class=\"scribe-marker\">/g, '').replace(/<\\/em>/g, '');\n\n    /**\n     * Chrome and Firefox: If we did push to the history, this would break\n     * browser magic around `Document.queryCommandState` (http://jsbin.com/eDOxacI/1/edit?js,console,output).\n     * This happens when doing any DOM manipulation.\n     */\n\n    // We only want to push the history if the content actually changed.\n    if (! previousUndoItem || (previousUndoItem && this.getHTML() !== previousContent)) {\n      var selection = new this.api.Selection();\n\n      selection.placeMarkers();\n      var html = this.getHTML();\n      selection.removeMarkers();\n\n      this.undoManager.push(html);\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  Scribe.prototype.getCommand = function (commandName) {\n    return this.commands[commandName] || this.commandPatches[commandName] || new this.api.Command(commandName);\n  };\n\n  Scribe.prototype.restoreFromHistory = function (historyItem) {\n    this.setHTML(historyItem, true);\n\n    // Restore the selection\n    var selection = new this.api.Selection();\n    selection.selectMarkers();\n\n    // Because we skip the formatters, a transaction is not run, so we have to\n    // emit this event ourselves.\n    this.trigger('content-changed');\n  };\n\n  // This will most likely be moved to another object eventually\n  Scribe.prototype.allowsBlockElements = function () {\n    return this.options.allowBlockElements;\n  };\n\n  Scribe.prototype.setContent = function (content) {\n    if (! this.allowsBlockElements()) {\n      // Set bogus BR element for Firefox — see explanation in BR mode files.\n      content = content + '<br>';\n    }\n\n    this.setHTML(content);\n\n    this.trigger('content-changed');\n  };\n\n  Scribe.prototype.insertPlainText = function (plainText) {\n    this.insertHTML('<p>' + this._plainTextFormatterFactory.format(plainText) + '</p>');\n  };\n\n  Scribe.prototype.insertHTML = function (html) {\n    /**\n     * When pasting text from Google Docs in both Chrome and Firefox,\n     * the resulting text will be wrapped in a B tag. So it would look\n     * something like <b><p>Text</p></b>, which is invalid HTML. The command\n     * insertHTML will then attempt to fix this content by moving the B tag\n     * inside the P. The result is: <p><b></b></p><p>Text</p>, which is valid\n     * but means an extra P is inserted into the text. To avoid this we run the\n     * formatters before the insertHTML command as the formatter will\n     * unwrap the P and delete the B tag. It is acceptable to remove invalid\n     * HTML as Scribe should only accept valid HTML.\n     *\n     * See http://jsbin.com/cayosada/3/edit for more\n     **/\n\n    // TODO: error if the selection is not within the Scribe instance? Or\n    // focus the Scribe instance if it is not already focused?\n    this.getCommand('insertHTML').execute(this._htmlFormatterFactory.format(html));\n  };\n\n  Scribe.prototype.isDebugModeEnabled = function () {\n    return this.options.debug;\n  };\n\n  Scribe.prototype.registerHTMLFormatter = function (phase, fn) {\n    this._htmlFormatterFactory.formatters[phase]\n      = this._htmlFormatterFactory.formatters[phase].push(fn);\n  };\n\n  Scribe.prototype.registerPlainTextFormatter = function (fn) {\n    this._plainTextFormatterFactory.formatters\n      = this._plainTextFormatterFactory.formatters.push(fn);\n  };\n\n  // TODO: abstract\n  function FormatterFactory() {\n    this.formatters = Immutable.List();\n  }\n\n  FormatterFactory.prototype.format = function (html) {\n    // Map the object to an array: Array[Formatter]\n    var formatted = this.formatters.reduce(function (formattedData, formatter) {\n      return formatter(formattedData);\n    }, html);\n\n    return formatted;\n  };\n\n  function HTMLFormatterFactory() {\n    // Define phases\n    // For a list of formatters, see https://github.com/guardian/scribe/issues/126\n    this.formatters = {\n      // Configurable sanitization of the HTML, e.g. converting/filter/removing\n      // elements\n      sanitize: Immutable.List(),\n      // Normalize content to ensure it is ready for interaction\n      normalize: Immutable.List(),\n      'export': Immutable.List()\n    };\n  }\n\n  HTMLFormatterFactory.prototype = Object.create(FormatterFactory.prototype);\n  HTMLFormatterFactory.prototype.constructor = HTMLFormatterFactory;\n\n  HTMLFormatterFactory.prototype.format = function (html) {\n    var formatters = this.formatters.sanitize.concat(this.formatters.normalize);\n\n    var formatted = formatters.reduce(function (formattedData, formatter) {\n      return formatter(formattedData);\n    }, html);\n\n    return formatted;\n  };\n\n  HTMLFormatterFactory.prototype.formatForExport = function (html) {\n    return this.formatters['export'].reduce(function (formattedData, formatter) {\n      return formatter(formattedData);\n    }, html);\n  };\n\n  return Scribe;\n\n});\n\n"],"names":[]}